<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>李家旺</title>
  
  <subtitle>学习日记</subtitle>
  <link href="https://www.lijiawang.org/atom.xml" rel="self"/>
  
  <link href="https://www.lijiawang.org/"/>
  <updated>2021-03-01T08:57:47.848Z</updated>
  <id>https://www.lijiawang.org/</id>
  
  <author>
    <name>李家旺</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ETCD日常操作</title>
    <link href="https://www.lijiawang.org/posts/ETCD%E6%97%A5%E5%B8%B8%E6%93%8D%E4%BD%9C/"/>
    <id>https://www.lijiawang.org/posts/ETCD%E6%97%A5%E5%B8%B8%E6%93%8D%E4%BD%9C/</id>
    <published>2021-03-01T08:33:54.000Z</published>
    <updated>2021-03-01T08:57:47.848Z</updated>
    
    <content type="html"><![CDATA[<h1 id="准备kubeadm构建的k8s集群"><a href="#准备kubeadm构建的k8s集群" class="headerlink" title="准备kubeadm构建的k8s集群"></a>准备kubeadm构建的k8s集群</h1><p>本环境是用kubeadm搭建的k8s和etcd环境</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@k8s-master ~]# kubectl get nodes<br>NAME         STATUS   ROLES    AGE   VERSION<br>k8s-master   Ready    master   83d   v1.19.4<br>k8s-node01   Ready    &lt;none&gt;   83d   v1.19.4<br>k8s-node02   Ready    &lt;none&gt;   82d   v1.19.4<br>k8s-node03   Ready    &lt;none&gt;   82d   v1.19.4<br>k8s-node04   Ready    &lt;none&gt;   82d   v1.19.4<br>[root@k8s-master ~]# kubectl get cs<br>NAME                 STATUS    MESSAGE             ERROR<br>controller-manager   Healthy   ok                  <br>scheduler            Healthy   ok                  <br>etcd-0               Healthy   &#123;&quot;health&quot;:&quot;true&quot;&#125; <br>[root@k8s-master ~]# kubectl get pods -n kube-system |grep etcd<br>etcd-k8s-master                            1/1     Running   0          75d<br></code></pre></td></tr></table></figure><h1 id="安装etcdctl命令行端"><a href="#安装etcdctl命令行端" class="headerlink" title="安装etcdctl命令行端"></a>安装etcdctl命令行端</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> yum install etcd</span><br>[root@k8s-master ~]# etcdctl <br>NAME:<br>        etcdctl - A simple command line client for etcd3.<br><br>USAGE:<br>        etcdctl<br><br>VERSION:<br>        3.3.11<br><br>API VERSION:<br>        3.3<br><br><br>COMMANDS:<br>        get                     Gets the key or a range of keys<br>        put                     Puts the given key into the store<br>        del                     Removes the specified key or range of keys [key, range_end)<br>        txn                     Txn processes all the requests in one transaction<br>        compaction              Compacts the event history in etcd<br>        alarm disarm            Disarms all alarms<br>        alarm list              Lists all alarms<br>        defrag                  Defragments the storage of the etcd members with given endpoints<br>        endpoint health         Checks the healthiness of endpoints specified in `--endpoints` flag<br>        endpoint status         Prints out the status of endpoints specified in `--endpoints` flag<br>        endpoint hashkv         Prints the KV history hash for each endpoint in --endpoints<br>        move-leader             Transfers leadership to another etcd cluster member.<br>        watch                   Watches events stream on keys or prefixes<br>        version                 Prints the version of etcdctl<br>        lease grant             Creates leases<br>        lease revoke            Revokes leases<br>        lease timetolive        Get lease information<br>        lease list              List all active leases<br>        lease keep-alive        Keeps leases alive (renew)<br>        member add              Adds a member into the cluster<br>        member remove           Removes a member from the cluster<br>        member update           Updates a member in the cluster<br>        member list             Lists all members in the cluster<br>        snapshot save           Stores an etcd node backend snapshot to a given file<br>        snapshot restore        Restores an etcd member snapshot to an etcd directory<br>        snapshot status         Gets backend snapshot status of a given file<br>        make-mirror             Makes a mirror at the destination etcd cluster<br>        migrate                 Migrates keys in a v2 store to a mvcc store<br>        lock                    Acquires a named lock<br>        elect                   Observes and participates in leader election<br>        auth enable             Enables authentication<br>        auth disable            Disables authentication<br>        user add                Adds a new user<br>        user delete             Deletes a user<br>        user get                Gets detailed information of a user<br>        user list               Lists all users<br>        user passwd             Changes password of user<br>        user grant-role         Grants a role to a user<br>        user revoke-role        Revokes a role from a user<br>        role add                Adds a new role<br>        role delete             Deletes a role<br>        role get                Gets detailed information of a role<br>        role list               Lists all roles<br>        role grant-permission   Grants a key to a role<br>        role revoke-permission  Revokes a key from a role<br>        check perf              Check the performance of the etcd cluster<br>        help                    Help about any command<br><br>OPTIONS:<br>      --cacert=&quot;&quot;                               verify certificates of TLS-enabled secure servers using this CA bundle<br>      --cert=&quot;&quot;                                 identify secure client using this TLS certificate file<br>      --command-timeout=5s                      timeout for short running command (excluding dial timeout)<br>      --debug[=false]                           enable client-side debug logging<br>      --dial-timeout=2s                         dial timeout for client connections<br>  -d, --discovery-srv=&quot;&quot;                        domain name to query for SRV records describing cluster endpoints<br>      --endpoints=[127.0.0.1:2379]              gRPC endpoints<br>      --hex[=false]                             print byte strings as hex encoded strings<br>      --insecure-discovery[=true]               accept insecure SRV records describing cluster endpoints<br>      --insecure-skip-tls-verify[=false]        skip server certificate verification<br>      --insecure-transport[=true]               disable transport security for client connections<br>      --keepalive-time=2s                       keepalive time for client connections<br>      --keepalive-timeout=6s                    keepalive timeout for client connections<br>      --key=&quot;&quot;                                  identify secure client using this TLS key file<br>      --user=&quot;&quot;                                 username[:password] for authentication (prompt if password is not supplied)<br>  -w, --write-out=&quot;simple&quot;                      set the output format (fields, json, protobuf, simple, table)<br></code></pre></td></tr></table></figure><h1 id="配置etcdctl环境变量"><a href="#配置etcdctl环境变量" class="headerlink" title="配置etcdctl环境变量"></a>配置etcdctl环境变量</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@k8s-master ~]# export ETCDCTL_API=3<br>[root@k8s-master ~]# alias etcdctl=&#x27;etcdctl --endpoints=https://127.0.0.1:2379 --cacert=/etc/kubernetes/pki/etcd/ca.crt --cert=/etc/kubernetes/pki/etcd/server.crt --key=/etc/kubernetes/pki/etcd/server.key&#x27;<br></code></pre></td></tr></table></figure><h1 id="查看集群状态"><a href="#查看集群状态" class="headerlink" title="查看集群状态"></a>查看集群状态</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@k8s-master ~]# etcdctl --write-out=table endpoint status<br>+------------------------+------------------+---------+---------+-----------+-----------+------------+<br>|        ENDPOINT        |        ID        | VERSION | DB SIZE | IS LEADER | RAFT TERM | RAFT INDEX |<br>+------------------------+------------------+---------+---------+-----------+-----------+------------+<br>| https://127.0.0.1:2379 | a759ec3a61ccc29f |  3.4.13 |   33 MB |      true |         2 |  191944752 |<br>+------------------------+------------------+---------+---------+-----------+-----------+------------+<br></code></pre></td></tr></table></figure><h1 id="查看集群成员"><a href="#查看集群成员" class="headerlink" title="查看集群成员"></a>查看集群成员</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@k8s-master ~]# etcdctl --write-out=table member list<br>+------------------+---------+------------+----------------------------+----------------------------+<br>|        ID        | STATUS  |    NAME    |         PEER ADDRS         |        CLIENT ADDRS        |<br>+------------------+---------+------------+----------------------------+----------------------------+<br>| a759ec3a61ccc29f | started | k8s-master | https://10.62.169.145:2380 | https://10.62.169.145:2379 |<br>+------------------+---------+------------+----------------------------+----------------------------+<br></code></pre></td></tr></table></figure><h1 id="备份etcd数据库"><a href="#备份etcd数据库" class="headerlink" title="备份etcd数据库"></a>备份etcd数据库</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@k8s-master ~]# etcdctl snapshot  save /root/etcd_$(date &quot;+%Y%m%d%H%M%S&quot;).db<br>Snapshot saved at /root/etcd_20210301165230.db<br></code></pre></td></tr></table></figure><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="https://www.cnblogs.com/zhangjxblog/p/12168339.html">https://www.cnblogs.com/zhangjxblog/p/12168339.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;准备kubeadm构建的k8s集群&quot;&gt;&lt;a href=&quot;#准备kubeadm构建的k8s集群&quot; class=&quot;headerlink&quot; title=&quot;准备kubeadm构建的k8s集群&quot;&gt;&lt;/a&gt;准备kubeadm构建的k8s集群&lt;/h1&gt;&lt;p&gt;本环境是用kubea</summary>
      
    
    
    
    <category term="ETCD" scheme="https://www.lijiawang.org/categories/ETCD/"/>
    
    
    <category term="ETCD" scheme="https://www.lijiawang.org/tags/ETCD/"/>
    
  </entry>
  
  <entry>
    <title>k8s使用nfs做provisioner</title>
    <link href="https://www.lijiawang.org/posts/k8s%E4%BD%BF%E7%94%A8nfs%E5%81%9Aprovisioner/"/>
    <id>https://www.lijiawang.org/posts/k8s%E4%BD%BF%E7%94%A8nfs%E5%81%9Aprovisioner/</id>
    <published>2021-02-04T09:36:21.000Z</published>
    <updated>2021-02-07T08:31:00.686Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>nfs-client-provisioner 是一个Kubernetes的简易NFS的外部provisioner，本身不提供NFS，需要现有的NFS服务器提供存储<br>这里的 k8s 版本为 v1.19.4</p></blockquote><h1 id="准备k8s集群"><a href="#准备k8s集群" class="headerlink" title="准备k8s集群"></a>准备k8s集群</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@k8s-master nfs-client]# kubectl get nodes<br>NAME         STATUS   ROLES    AGE   VERSION<br>k8s-master   Ready    master   60d   v1.19.4<br>k8s-node01   Ready    &lt;none&gt;   60d   v1.19.4<br>k8s-node02   Ready    &lt;none&gt;   60d   v1.19.4<br>k8s-node03   Ready    &lt;none&gt;   60d   v1.19.4<br>k8s-node04   Ready    &lt;none&gt;   60d   v1.19.4<br><span class="hljs-meta">#</span><span class="bash"> yum install -y nfs-utils  <span class="hljs-comment">#所有k8s节点需要装此包</span></span><br></code></pre></td></tr></table></figure><h1 id="搭建NFS"><a href="#搭建NFS" class="headerlink" title="搭建NFS"></a>搭建NFS</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@k8s-nfs ~]# mkdir /data/nfs -p<br>[root@k8s-nfs ~]# yum install -y nfs-utils<br>[root@k8s-nfs ~]# vim /etc/exports<br>/data/nfs 10.62.169.0/24(rw,sync,fsid=0)<br>[root@k8s-nfs ~]# systemctl enable rpcbind.service<br>[root@k8s-nfs ~]# systemctl enable nfs-server.service<br>[root@k8s-nfs ~]# systemctl start rpcbind.service <br>[root@k8s-nfs ~]# systemctl start nfs-server.service<br>[root@k8s-nfs ~]# systemctl status rpcbind.service <br>[root@k8s-nfs ~]# systemctl status nfs-server.service<br><br><br>[root@k8s-node1 ~]# showmount -e 10.62.169.145<br>Export list for 10.62.169.145:<br>/data/nfs 10.62.169.0/24<br></code></pre></td></tr></table></figure><h1 id="创建nfs-provisioner的namespaces"><a href="#创建nfs-provisioner的namespaces" class="headerlink" title="创建nfs-provisioner的namespaces"></a>创建nfs-provisioner的namespaces</h1><p>创建用于部署nfs-client-provisioner端的namespaces</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@k8s-master nfs-client]# kubectl create ns nfs<br></code></pre></td></tr></table></figure><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">[root@k8s-master]#</span><span class="bash"> git <span class="hljs-built_in">clone</span> https://github.com/lijiawang/DevOps.git</span><br>[root@k8s-master ~]# cd DevOps/nfs-client/<br>[root@k8s-master nfs-client]# kubectl apply -f rbac.yaml <br>serviceaccount/nfs-client-provisioner created<br>clusterrole.rbac.authorization.k8s.io/nfs-client-provisioner-runner created<br>clusterrolebinding.rbac.authorization.k8s.io/run-nfs-client-provisioner created<br>role.rbac.authorization.k8s.io/leader-locking-nfs-client-provisioner created<br>rolebinding.rbac.authorization.k8s.io/leader-locking-nfs-client-provisioner created<br>[root@k8s-master nfs-client]# cat deployment.yaml <br>---<br>kind: Deployment<br>apiVersion: apps/v1<br>metadata:<br>  name: nfs-client-provisioner<br>  namespace: nfs<br>spec:<br>  replicas: 1<br>  selector:<br>    matchLabels:<br>      app: nfs-client-provisioner<br>  strategy:<br>    type: Recreate<br>  template:<br>    metadata:<br>      labels:<br>        app: nfs-client-provisioner<br>    spec:<br>      serviceAccountName: nfs-client-provisioner<br>      containers:<br>        - name: nfs-client-provisioner<br>          image: lijiawang/nfs-client-provisioner:latest<br>          volumeMounts:<br>            - name: nfs-client-root<br>              mountPath: /persistentvolumes<br>          env:<br>            - name: PROVISIONER_NAME<br>              value: fuseim.pri/ifs<br>            - name: NFS_SERVER<br>              value: 10.62.169.145   # 这里是NFS 服务器的地址<br>            - name: NFS_PATH<br>              value: /data/nfs       # NFS 路径<br>      volumes:<br>        - name: nfs-client-root<br>          nfs:<br>            server: 10.62.169.145<br>            path: /data/nfs<br>[root@k8s-master nfs-client]# kubectl apply -f deployment.yaml <br>deployment.apps/nfs-client-provisioner created<br>[root@k8s-master nfs-client]# kubectl apply -f class.yaml <br>storageclass.storage.k8s.io/managed-nfs-storage created<br></code></pre></td></tr></table></figure><h1 id="验证nfs-client-provisioner是否安装完成"><a href="#验证nfs-client-provisioner是否安装完成" class="headerlink" title="验证nfs-client-provisioner是否安装完成"></a>验证nfs-client-provisioner是否安装完成</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@k8s-master nfs-client]# kubectl get pod -n nfs<br>NAME                                      READY   STATUS    RESTARTS   AGE<br>nfs-client-provisioner-64b94d544d-9fsnf   1/1     Running   0          100s<br>[root@k8s-master nfs-client]# kubectl get storageclasses<br>NAME                  PROVISIONER      RECLAIMPOLICY   VOLUMEBINDINGMODE   ALLOWVOLUMEEXPANSION   AGE<br>managed-nfs-storage   fuseim.pri/ifs   Delete          Immediate           false                  5h36m<br></code></pre></td></tr></table></figure><h1 id="使用storageclasses"><a href="#使用storageclasses" class="headerlink" title="使用storageclasses"></a>使用storageclasses</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@k8s-master nfs-client]# cat test-pod.yml <br>kind: PersistentVolumeClaim<br>apiVersion: v1<br>metadata:<br>  name: test-claim<br>  annotations:<br>    volume.beta.kubernetes.io/storage-class: &quot;managed-nfs-storage&quot;<br>spec:<br>  accessModes:<br>    - ReadWriteMany<br>  resources:<br>    requests:<br>      storage: 1Mi<br>---<br>kind: Pod<br>apiVersion: v1<br>metadata:<br>  name: test-pod<br>spec:<br>  containers:<br>  - name: test-pod<br>    image: lijiawang/busybox:1.24<br>    command:<br>      - &quot;/bin/sh&quot;<br>    args:<br>      - &quot;-c&quot;<br>      - &quot;touch /mnt/SUCCESS &amp;&amp; exit 0 || exit 1 &amp;&amp; sleep 100&quot;<br>    volumeMounts:<br>      - name: nfs-pvc<br>        mountPath: &quot;/mnt&quot;<br>  restartPolicy: &quot;Never&quot;<br>  volumes:<br>    - name: nfs-pvc<br>      persistentVolumeClaim:<br>        claimName: test-claim<br>[root@k8s-master nfs-client]# kubectl  apply -f test-pod.yml <br>persistentvolumeclaim/test-claim created<br>pod/test-pod created<br><br>[root@k8s-master nfs-client]# kubectl get pvc<br>NAME         STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS          AGE<br>test-claim   Bound    pvc-73ea81a1-b34d-4b0c-a374-69ca9078d378   1Mi        RWX            managed-nfs-storage   17s<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;nfs-client-provisioner 是一个Kubernetes的简易NFS的外部provisioner，本身不提供NFS，需要现有的NFS服务器提供存储&lt;br&gt;这里的 k8s 版本为 v1.19.4&lt;/p&gt;
&lt;/blockquote&gt;
&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>cephrgw与openstack keystone集成</title>
    <link href="https://www.lijiawang.org/posts/cephrgw%E4%B8%8Eopenstack-keystone%E9%9B%86%E6%88%90/"/>
    <id>https://www.lijiawang.org/posts/cephrgw%E4%B8%8Eopenstack-keystone%E9%9B%86%E6%88%90/</id>
    <published>2021-01-24T04:04:02.000Z</published>
    <updated>2021-01-24T04:04:47.550Z</updated>
    
    
    
    
    <category term="OpenStack" scheme="https://www.lijiawang.org/categories/OpenStack/"/>
    
    
    <category term="ceph" scheme="https://www.lijiawang.org/tags/ceph/"/>
    
  </entry>
  
  <entry>
    <title>使用ceph提供对象存储</title>
    <link href="https://www.lijiawang.org/posts/%E4%BD%BF%E7%94%A8ceph%E6%8F%90%E4%BE%9B%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8/"/>
    <id>https://www.lijiawang.org/posts/%E4%BD%BF%E7%94%A8ceph%E6%8F%90%E4%BE%9B%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8/</id>
    <published>2021-01-13T02:50:24.000Z</published>
    <updated>2021-01-13T03:10:41.576Z</updated>
    
    <content type="html"><![CDATA[<h1 id="查看ceph集群状态检查rgw服务是否正常"><a href="#查看ceph集群状态检查rgw服务是否正常" class="headerlink" title="查看ceph集群状态检查rgw服务是否正常"></a>查看ceph集群状态检查rgw服务是否正常</h1><p>首先先提供一个装有ceph rgw服务的ceph集群，安装方式我就在这里不演示了，详细请见<a href="https://www.lijiawang.org/posts/ceph-deploy-%E5%AE%89%E8%A3%85ceph/">ceph-deploy安装ceph集群</a>这篇文章</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@ceph--1 ~]# ceph -s<br>  cluster:<br>    id:     faa2e2c4-98bc-47c4-a5b4-a478721b7ea2<br>    health: HEALTH_OK<br><br>  services:<br>    mon: 3 daemons, quorum ceph--1,ceph--2,ceph--3 (age 47h)<br>    mgr: ceph--1(active, since 4d), standbys: ceph--2, ceph--3<br>    mds: cephfs:1 &#123;0=ceph--2=up:active&#125; 2 up:standby<br>    osd: 3 osds: 3 up (since 4d), 3 in (since 4d)<br>    rgw: 3 daemons active (ceph--1, ceph--2, ceph--3)<br><br>  task status:<br>    scrub status:<br>        mds.ceph--2: idle<br><br>  data:<br>    pools:   7 pools, 208 pgs<br>    objects: 315 objects, 101 MiB<br>    usage:   3.3 GiB used, 147 GiB / 150 GiB avail<br>    pgs:     208 active+clean<br><br>  io:<br>    client:   4.0 KiB/s rd, 0 B/s wr, 3 op/s rd, 2 op/s wr<br><span class="hljs-meta">#</span><span class="bash"> radosgw端口默认为7480</span><br>[root@ceph--1 ~]# netstat -antupl |grep 7480<br>tcp        0      0 0.0.0.0:7480            0.0.0.0:*               LISTEN      15194/radosgw<br>tcp6       0      0 :::7480                 :::*                    LISTEN      15194/radosgw<br></code></pre></td></tr></table></figure><h1 id="修改rgw的默认端口"><a href="#修改rgw的默认端口" class="headerlink" title="修改rgw的默认端口"></a>修改rgw的默认端口</h1><p>ceph支持修改rgw的默认端口，下面我将rgw默认端口7480 修改为80端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@ceph--1 ceph-deploy]# cat ceph.conf <br>[client.rgw.ceph--1]<br>host = ceph--1<br>rgw frontends = &quot;civetweb port=80&quot;<br>[client.rgw.ceph--2]<br>host = ceph--2<br>rgw frontends = &quot;civetweb port=80&quot;<br>[client.rgw.ceph--3]<br>host = ceph--3<br>rgw frontends = &quot;civetweb port=80&quot;<br><br>[root@ceph--1 ceph-deploy]# ceph-deploy  --overwrite-conf  config push ceph--1 ceph--2 ceph--3<br><span class="hljs-meta">#</span><span class="bash"> systemctl start ceph-radosgw@rgw.`hostname -s` <span class="hljs-comment"># 重启所有主机上的ceph rgw服务</span></span><br></code></pre></td></tr></table></figure><h1 id="验证是否修改成功"><a href="#验证是否修改成功" class="headerlink" title="验证是否修改成功"></a>验证是否修改成功</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@ceph--1 ceph-deploy]# netstat -antupl |grep radosgw<br>tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      35167/radosgw<br>tcp        0      0 10.140.11.8:33980       10.140.11.24:6800       ESTABLISHED 35167/radosgw<br>tcp        0      0 10.140.11.8:36764       10.140.11.8:6802        ESTABLISHED 35167/radosgw<br>tcp        0      0 10.140.11.8:44946       10.140.11.8:6800        ESTABLISHED 35167/radosgw<br>tcp        0      0 10.140.11.8:51116       10.140.11.8:3300        ESTABLISHED 35167/radosgw<br>tcp        0      0 10.140.11.8:42700       10.140.11.6:6800        ESTABLISHED 35167/radosgw<br>tcp        0      0 10.140.11.8:44926       10.140.11.8:6800        ESTABLISHED 35167/radosgw<br>tcp        0      0 10.140.11.8:33960       10.140.11.24:6800       ESTABLISHED 35167/radosgw<br>tcp        0      0 10.140.11.8:42678       10.140.11.6:6800        ESTABLISHED 35167/radosgw<br>tcp        0      0 10.140.11.8:51134       10.140.11.8:3300        ESTABLISHED 35167/radosgw<br>tcp        0      0 10.140.11.8:36782       10.140.11.8:6802        ESTABLISHED 35167/radosgw<br>[root@ceph--1 ceph-deploy]# curl http://ceph--1<br>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;ListAllMyBucketsResult xmlns=&quot;http://s3.amazonaws.com/doc/2006-03-01/&quot;&gt;&lt;Owner&gt;&lt;ID&gt;anonymous&lt;/ID&gt;&lt;DisplayName&gt;&lt;/DisplayName&gt;&lt;/Owner&gt;&lt;Buckets&gt;&lt;/Buckets&gt;&lt;/ListAllMyBucketsResult&gt;<br></code></pre></td></tr></table></figure><h1 id="使用S3访问CEPH-RGW"><a href="#使用S3访问CEPH-RGW" class="headerlink" title="使用S3访问CEPH RGW"></a>使用S3访问CEPH RGW</h1><h2 id="为S3的访问创建账号"><a href="#为S3的访问创建账号" class="headerlink" title="为S3的访问创建账号"></a>为S3的访问创建账号</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@ceph--1 ~]# radosgw-admin  user create --uid ceph-s3-user --display-name &quot;Ceph S3 User Dome&quot;<br>&#123;<br>    &quot;user_id&quot;: &quot;ceph-s3-user&quot;,<br>    &quot;display_name&quot;: &quot;Ceph S3 User Dome&quot;,<br>    &quot;email&quot;: &quot;&quot;,<br>    &quot;suspended&quot;: 0,<br>    &quot;max_buckets&quot;: 1000,<br>    &quot;subusers&quot;: [],<br>    &quot;keys&quot;: [<br>        &#123;<br>            &quot;user&quot;: &quot;ceph-s3-user&quot;,<br>            &quot;access_key&quot;: &quot;9HR6Y9PAGBYFKRW5U6XM&quot;,   <br>            &quot;secret_key&quot;: &quot;51dSEB2WqZATowS71GPJPo8CoGG2VQZM63ndGfKl&quot;<br>        &#125;<br>    ],<br>    &quot;swift_keys&quot;: [],<br>    &quot;caps&quot;: [],<br>    &quot;op_mask&quot;: &quot;read, write, delete&quot;,<br>    &quot;default_placement&quot;: &quot;&quot;,<br>    &quot;default_storage_class&quot;: &quot;&quot;,<br>    &quot;placement_tags&quot;: [],<br>    &quot;bucket_quota&quot;: &#123;<br>        &quot;enabled&quot;: false,<br>        &quot;check_on_raw&quot;: false,<br>        &quot;max_size&quot;: -1,<br>        &quot;max_size_kb&quot;: 0,<br>        &quot;max_objects&quot;: -1<br>    &#125;,<br>    &quot;user_quota&quot;: &#123;<br>        &quot;enabled&quot;: false,<br>        &quot;check_on_raw&quot;: false,<br>        &quot;max_size&quot;: -1,<br>        &quot;max_size_kb&quot;: 0,<br>        &quot;max_objects&quot;: -1<br>    &#125;,<br>    &quot;temp_url_keys&quot;: [],<br>    &quot;type&quot;: &quot;rgw&quot;,<br>    &quot;mfa_ids&quot;: []<br>&#125;<br><br>[root@ceph--1 ~]# radosgw-admin  user list<br>[<br>    &quot;ceph-s3-user&quot;<br>]<br><br>[root@ceph--1 ~]# radosgw-admin  user info --uid ceph-s3-user<br><br><br>&#123;<br>    &quot;user_id&quot;: &quot;ceph-s3-user&quot;,<br>    &quot;display_name&quot;: &quot;Ceph S3 User Dome&quot;,<br>    &quot;email&quot;: &quot;&quot;,<br>    &quot;suspended&quot;: 0,<br>    &quot;max_buckets&quot;: 1000,<br>    &quot;subusers&quot;: [],<br>    &quot;keys&quot;: [<br>        &#123;<br>            &quot;user&quot;: &quot;ceph-s3-user&quot;,<br>            &quot;access_key&quot;: &quot;9HR6Y9PAGBYFKRW5U6XM&quot;,<br>            &quot;secret_key&quot;: &quot;51dSEB2WqZATowS71GPJPo8CoGG2VQZM63ndGfKl&quot;<br>        &#125;<br>    ],<br>    &quot;swift_keys&quot;: [],<br>    &quot;caps&quot;: [],<br>    &quot;op_mask&quot;: &quot;read, write, delete&quot;,<br>    &quot;default_placement&quot;: &quot;&quot;,<br>    &quot;default_storage_class&quot;: &quot;&quot;,<br>    &quot;placement_tags&quot;: [],<br>    &quot;bucket_quota&quot;: &#123;<br>        &quot;enabled&quot;: false,<br>        &quot;check_on_raw&quot;: false,<br>        &quot;max_size&quot;: -1,<br>        &quot;max_size_kb&quot;: 0,<br>        &quot;max_objects&quot;: -1<br>    &#125;,<br>    &quot;user_quota&quot;: &#123;<br>        &quot;enabled&quot;: false,<br>        &quot;check_on_raw&quot;: false,<br>        &quot;max_size&quot;: -1,<br>        &quot;max_size_kb&quot;: 0,<br>        &quot;max_objects&quot;: -1<br>    &#125;,<br>    &quot;temp_url_keys&quot;: [],<br>    &quot;type&quot;: &quot;rgw&quot;,<br>    &quot;mfa_ids&quot;: []<br>&#125;<br>将access_key和secret_key记录下来<br><br></code></pre></td></tr></table></figure><h2 id="安装配置S3"><a href="#安装配置S3" class="headerlink" title="安装配置S3"></a>安装配置S3</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@ceph--1 ~]# yum install s3cmd -y<br>[root@ceph--1 ~]# s3cmd --configure<br><br>Enter new values or accept defaults in brackets with Enter.<br>Refer to user manual for detailed description of all options.<br><br>Access key and Secret key are your identifiers for Amazon S3. Leave them empty for using the env variables.<br>Access Key: 9HR6Y9PAGBYFKRW5U6XM<br>Secret Key: 51dSEB2WqZATowS71GPJPo8CoGG2VQZM63ndGfKl<br>Default Region [US]: <br><br>Use &quot;s3.amazonaws.com&quot; for S3 Endpoint and not modify it to the target Amazon S3.<br>S3 Endpoint [s3.amazonaws.com]: 10.140.11.8:80<br><br>Use &quot;%(bucket)s.s3.amazonaws.com&quot; to the target Amazon S3. &quot;%(bucket)s&quot; and &quot;%(location)s&quot; vars can be used<br>if the target S3 system supports dns based buckets.<br>DNS-style bucket+hostname:port template for accessing a bucket [%(bucket)s.s3.amazonaws.com]: 10.140.11.8:80/%(bucket)s<br><br>Encryption password is used to protect your files from reading<br>by unauthorized persons while in transfer to S3<br>Encryption password:<br>Path to GPG program [/usr/bin/gpg]: <br><br>When using secure HTTPS protocol all communication with Amazon S3<br>servers is protected from 3rd party eavesdropping. This method is<br>slower than plain HTTP, and can only be proxied with Python 2.7 or newer<br>Use HTTPS protocol [Yes]: no<br><br>On some networks all internet access must go through a HTTP proxy.<br>Try setting it here if you can&#x27;t connect to S3 directly<br>HTTP Proxy server name:<br><br>New settings:<br>  Access Key: 9HR6Y9PAGBYFKRW5U6XM<br>  Secret Key: 51dSEB2WqZATowS71GPJPo8CoGG2VQZM63ndGfKl<br>  Default Region: US<br>  S3 Endpoint: 10.140.11.8:80<br>  DNS-style bucket+hostname:port template for accessing a bucket: 10.140.11.8:80/%(bucket)s<br>  Encryption password:<br>  Path to GPG program: /usr/bin/gpg<br>  Use HTTPS protocol: False<br>  HTTP Proxy server name:<br>  HTTP Proxy server port: 0<br><br>Test access with supplied credentials? [Y/n] y<br>Please wait, attempting to list all buckets...<br>Success. Your access key and secret key worked fine :-)<br><br>Now verifying that encryption works...<br>Not configured. Never mind.<br><br>Save settings? [y/N] y<br>Configuration saved to &#x27;/root/.s3cfg&#x27;<br><span class="hljs-meta">#</span><span class="bash"> 在这个交互配置过程中，只配置了其中access_key和secret_key.</span><br></code></pre></td></tr></table></figure><h2 id="使用S3操作ceph-RGW"><a href="#使用S3操作ceph-RGW" class="headerlink" title="使用S3操作ceph RGW"></a>使用S3操作ceph RGW</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@ceph--1 ~]# s3cmd mb s3://s3cmd-demo   # 创建bucket<br>Bucket &#x27;s3://s3cmd-demo/&#x27; created<br>[root@ceph--1 ~]# s3cmd ls<br>2021-01-10 08:00  s3://s3cmd-demo<br>[root@ceph--1 ~]# s3cmd put /etc/fstab s3://s3cmd-demo/fstab-demo   # 上传文件<br>upload: &#x27;/etc/fstab&#x27; -&gt; &#x27;s3://s3cmd-demo/fstab-demo&#x27;  [1 of 1]<br> 42 of 42   100% in    2s    20.23 B/s  done<br>[root@ceph--1 ~]# s3cmd ls s3://s3cmd-demo<br>2021-01-10 08:09           42  s3://s3cmd-demo/fstab-demo<br>[root@ceph--1 ~]# s3cmd get s3://s3cmd-demo/fstab-demo lijiawang123 下载文件<br>download: &#x27;s3://s3cmd-demo/fstab-demo&#x27; -&gt; &#x27;lijiawang123&#x27;  [1 of 1]<br> 42 of 42   100% in    0s     2.83 KB/s  done<br>[root@ceph--1 ~]# cat lijiawang123   #验证文件<br>LABEL=cloudimg-rootfs / ext4 defaults 0 1<br>[root@ceph--1 ~]# cat /etc/fstab <br>LABEL=cloudimg-rootfs / ext4 defaults 0 1<br></code></pre></td></tr></table></figure><h1 id="使用swift访问CEPH-RGW"><a href="#使用swift访问CEPH-RGW" class="headerlink" title="使用swift访问CEPH RGW"></a>使用swift访问CEPH RGW</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> 在已创建S3用户数添加swift_keys</span><br>[root@ceph--1 ~]# radosgw-admin subuser create --uid ceph-s3-user --subuser=ceph-s3-user:swift  --access=full<br>&#123;<br>    &quot;user_id&quot;: &quot;ceph-s3-user&quot;,<br>    &quot;display_name&quot;: &quot;Ceph S3 User Dome&quot;,<br>    &quot;email&quot;: &quot;&quot;,<br>    &quot;suspended&quot;: 0,<br>    &quot;max_buckets&quot;: 1000,<br>    &quot;subusers&quot;: [<br>        &#123;<br>            &quot;id&quot;: &quot;ceph-s3-user:swift&quot;,<br>            &quot;permissions&quot;: &quot;full-control&quot;<br>        &#125;<br>    ],<br>    &quot;keys&quot;: [<br>        &#123;<br>            &quot;user&quot;: &quot;ceph-s3-user&quot;,<br>            &quot;access_key&quot;: &quot;9HR6Y9PAGBYFKRW5U6XM&quot;,<br>            &quot;secret_key&quot;: &quot;51dSEB2WqZATowS71GPJPo8CoGG2VQZM63ndGfKl&quot;<br>        &#125;<br>    ],<br>    &quot;swift_keys&quot;: [<br>        &#123;<br>            &quot;user&quot;: &quot;ceph-s3-user:swift&quot;,<br>            &quot;secret_key&quot;: &quot;wLVnoP1hg6M1wMz4H6oBiBMUhFRSx5IgYvtCh6Ed&quot;<br>        &#125;<br>    ],<br>    &quot;caps&quot;: [],<br>    &quot;op_mask&quot;: &quot;read, write, delete&quot;,<br>    &quot;default_placement&quot;: &quot;&quot;,<br>    &quot;default_storage_class&quot;: &quot;&quot;,<br>    &quot;placement_tags&quot;: [],<br>    &quot;bucket_quota&quot;: &#123;<br>        &quot;enabled&quot;: false,<br>        &quot;check_on_raw&quot;: false,<br>        &quot;max_size&quot;: -1,<br>        &quot;max_size_kb&quot;: 0,<br>        &quot;max_objects&quot;: -1<br>    &#125;,<br>    &quot;user_quota&quot;: &#123;<br>        &quot;enabled&quot;: false,<br>        &quot;check_on_raw&quot;: false,<br>        &quot;max_size&quot;: -1,<br>        &quot;max_size_kb&quot;: 0,<br>        &quot;max_objects&quot;: -1<br>    &#125;,<br>    &quot;temp_url_keys&quot;: [],<br>    &quot;type&quot;: &quot;rgw&quot;,<br>    &quot;mfa_ids&quot;: []<br>&#125;<br><span class="hljs-meta">#</span><span class="bash"> 验证</span><br>[root@ceph--1 ~]# swift -V 1 -A http://10.140.11.8:80/auth -U ceph-s3-user:swift -K wLVnoP1hg6M1wMz4H6oBiBMUhFRSx5IgYvtCh6Ed list<br>s3cmd-demo<br><span class="hljs-meta">#</span><span class="bash"> 设置环境</span><br>[root@ceph--1 ~]# cat swift.rc <br>export ST_AUTH=http://10.140.11.8:80/auth <br>export ST_USER=ceph-s3-user:swift<br>export ST_KEY=wLVnoP1hg6M1wMz4H6oBiBMUhFRSx5IgYvtCh6Ed<br><br>[root@ceph--1 ~]# . swift.rc<br><br>[root@ceph--1 ~]# swift  list<br>s3cmd-demo<br>[root@ceph--1 ~]# cat swift.rc <br>export ST_AUTH=http://10.140.11.8:80/auth <br>export ST_USER=ceph-s3-user:swift<br>export ST_KEY=wLVnoP1hg6M1wMz4H6oBiBMUhFRSx5IgYvtCh6Ed<br><br>[root@ceph--1 ~]# . swift.rc <br>[root@ceph--1 ~]# swift  list<br>s3cmd-demo<br>[root@ceph--1 ~]# swift post swift-demo   # 创建bucket<br>[root@ceph--1 ~]# swift  list<br>s3cmd-demo<br>swift-demo<br>[root@ceph--1 ~]# swift upload  swift-demo /etc/passwd  # 上传文件<br>etc/passwd<br>[root@ceph--1 ~]# swift  list swift-demo<br>etc/passwd<br>[root@ceph--1 ~]# swift download swift-demo etc/passwd  # 下载文件<br>etc/passwd [auth 0.014s, headers 0.017s, total 0.017s, 0.460 MB/s]<br>[root@ceph--1 ~]# ls etc/passwd <br>etc/passwd<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;查看ceph集群状态检查rgw服务是否正常&quot;&gt;&lt;a href=&quot;#查看ceph集群状态检查rgw服务是否正常&quot; class=&quot;headerlink&quot; title=&quot;查看ceph集群状态检查rgw服务是否正常&quot;&gt;&lt;/a&gt;查看ceph集群状态检查rgw服务是否正常&lt;/</summary>
      
    
    
    
    <category term="ceph" scheme="https://www.lijiawang.org/categories/ceph/"/>
    
    
    <category term="ceph" scheme="https://www.lijiawang.org/tags/ceph/"/>
    
  </entry>
  
  <entry>
    <title>使用ceph提供块存储</title>
    <link href="https://www.lijiawang.org/posts/%E4%BD%BF%E7%94%A8ceph%E6%8F%90%E4%BE%9B%E5%9D%97%E5%AD%98%E5%82%A8/"/>
    <id>https://www.lijiawang.org/posts/%E4%BD%BF%E7%94%A8ceph%E6%8F%90%E4%BE%9B%E5%9D%97%E5%AD%98%E5%82%A8/</id>
    <published>2021-01-07T08:16:43.000Z</published>
    <updated>2021-01-13T02:47:42.020Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ceph的块存储"><a href="#ceph的块存储" class="headerlink" title="ceph的块存储"></a><code>ceph</code>的块存储</h1><h1 id="创建一个POOL"><a href="#创建一个POOL" class="headerlink" title="创建一个POOL"></a>创建一个POOL</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@ceph--1 ~]# ceph osd pool create ceph-demo 16 16<br>pool &#x27;ceph-demo&#x27; created<br>[root@ceph--1 ~]# rbd -p ceph-demo ls<br></code></pre></td></tr></table></figure><h1 id="创建rbd"><a href="#创建rbd" class="headerlink" title="创建rbd"></a>创建rbd</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@ceph--1 ~]# rbd create -p ceph-demo --image rbd-demo.img --size 1G<br>[root@ceph--1 ~]# rbd -p ceph-demo ls<br>rbd-demo.img<br>[root@ceph--1 ~]# rbd create ceph-demo/rbd-demo-1.img --size 1G   # 也可以这么创建<br>[root@ceph--1 ~]# rbd -p ceph-demo ls<br>rbd-demo-1.img<br>rbd-demo.img<br></code></pre></td></tr></table></figure><h1 id="将RBD映射到主机"><a href="#将RBD映射到主机" class="headerlink" title="将RBD映射到主机"></a>将RBD映射到主机</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@ceph--1 ~]# rbd -p ceph-demo ls<br>rbd-demo-1.img<br>rbd-demo.img<br>[root@ceph--1 ~]# rbd info ceph-demo/rbd-demo.img<br>rbd image &#x27;rbd-demo.img&#x27;:<br>        size 1 GiB in 256 objects<br>        order 22 (4 MiB objects)<br>        snapshot_count: 0<br>        id: 1686fe84952f<br>        block_name_prefix: rbd_data.1686fe84952f<br>        format: 2<br>        features: layering, exclusive-lock, object-map, fast-diff, deep-flatten<br>        op_features:<br>        flags:<br>        create_timestamp: Thu Jan  7 15:06:15 2021<br>        access_timestamp: Thu Jan  7 15:06:15 2021<br>        modify_timestamp: Thu Jan  7 15:06:15 2021<br>[root@ceph--1 ~]# rbd map  ceph-demo/rbd-demo.img<br>rbd: sysfs write failed<br>RBD image feature set mismatch. You can disable features unsupported by the kernel with &quot;rbd feature disable ceph-demo/rbd-demo.img object-map fast-diff deep-flatten&quot;.<br>In some cases useful info is found in syslog - try &quot;dmesg | tail&quot;.<br>rbd: map failed: (6) No such device or address<br>[root@ceph--1 ~]# rbd -p ceph-demo ls<br>rbd-demo-1.img<br>rbd-demo.img<br>[root@ceph--1 ~]# rbd feature disable ceph-demo/rbd-demo.img deep-flatten<br>[root@ceph--1 ~]# rbd feature disable ceph-demo/rbd-demo.img fast-diff<br>[root@ceph--1 ~]# rbd feature disable ceph-demo/rbd-demo.img object-map<br>[root@ceph--1 ~]# rbd feature disable ceph-demo/rbd-demo.img exclusive-lock<br>[root@ceph--1 ~]# rbd info ceph-demo/rbd-demo.img<br>rbd image &#x27;rbd-demo.img&#x27;:<br>        size 1 GiB in 256 objects<br>        order 22 (4 MiB objects)<br>        snapshot_count: 0<br>        id: 16e0aec0c2a8<br>        block_name_prefix: rbd_data.16e0aec0c2a8<br>        format: 2<br>        features: layering<br>        op_features:<br>        flags:<br>        create_timestamp: Thu Jan  7 15:18:34 2021<br>        access_timestamp: Thu Jan  7 15:18:34 2021<br>        modify_timestamp: Thu Jan  7 15:18:34 2021<br><br>[root@ceph--1 ~]# rbd map  ceph-demo/rbd-demo.img<br>/dev/rbd0<br>[root@ceph--1 ~]# rbd device list<br>id pool      namespace image        snap device    <br>0  ceph-demo           rbd-demo.img -    /dev/rbd0<br>[root@ceph--1 ~]# fdisk -l /dev/rbd0<br><br>Disk /dev/rbd0: 1073 MB, 1073741824 bytes, 2097152 sectors<br>Units = sectors of 1 * 512 = 512 bytes<br>Sector size (logical/physical): 512 bytes / 512 bytes<br>I/O size (minimum/optimal): 4194304 bytes / 4194304 bytes<br></code></pre></td></tr></table></figure><h1 id="挂载该设备"><a href="#挂载该设备" class="headerlink" title="挂载该设备"></a>挂载该设备</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@ceph--1 ~]# mkdir /mnt/ceph-demo<br>[root@ceph--1 ~]# mkfs.ext4 /dev/rbd0<br>mke2fs 1.42.9 (28-Dec-2013)<br>Discarding device blocks: done<br>Filesystem label=<br>OS type: Linux<br>Block size=4096 (log=2)<br>Fragment size=4096 (log=2)<br>Stride=1024 blocks, Stripe width=1024 blocks<br>65536 inodes, 262144 blocks<br>13107 blocks (5.00%) reserved for the super user<br>First data block=0<br>Maximum filesystem blocks=268435456<br>8 block groups<br>32768 blocks per group, 32768 fragments per group<br>8192 inodes per group<br>Superblock backups stored on blocks:<br>        32768, 98304, 163840, 229376<br><br>Allocating group tables: done<br>Writing inode tables: done<br>Creating journal (8192 blocks): done<br>Writing superblocks and filesystem accounting information: done<br>[root@ceph--1 ~]# df -Th /dev/rbd0<br>Filesystem     Type  Size  Used Avail Use% Mounted on<br>/dev/rbd0      ext4  976M  2.6M  907M   1% /mnt/ceph-demo<br><br>[root@ceph--1 ~]# cd /mnt/ceph-demo/<br>[root@ceph--1 ceph-demo]# ls -l<br>total 16<br>drwx------ 2 root root 16384 Jan  7 15:48 lost+found<br>[root@ceph--1 ceph-demo]# cp /etc/passwd .<br>[root@ceph--1 ceph-demo]# ls<br>lost+found  passwd<br></code></pre></td></tr></table></figure><h1 id="RBD扩容"><a href="#RBD扩容" class="headerlink" title="RBD扩容"></a>RBD扩容</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@ceph--1 ~]# rbd info ceph-demo/rbd-demo.img<br>rbd image &#x27;rbd-demo.img&#x27;:<br>        size 1 GiB in 256 objects<br>        order 22 (4 MiB objects)<br>        snapshot_count: 0<br>        id: 16e0aec0c2a8<br>        block_name_prefix: rbd_data.16e0aec0c2a8<br>        format: 2<br>        features: layering<br>        op_features:<br>        flags:<br>        create_timestamp: Thu Jan  7 15:18:34 2021<br>        access_timestamp: Thu Jan  7 15:18:34 2021<br>        modify_timestamp: Thu Jan  7 15:18:34 2021<br>[root@ceph--1 ~]# rbd resize ceph-demo/rbd-demo.img -s 5G  # 扩容到5G<br>Resizing image: 100% complete...done.<br>[root@ceph--1 ~]# rbd info ceph-demo/rbd-demo.img<br>rbd image &#x27;rbd-demo.img&#x27;:<br>        size 5 GiB in 1280 objects<br>        order 22 (4 MiB objects)<br>        snapshot_count: 0<br>        id: 16e0aec0c2a8<br>        block_name_prefix: rbd_data.16e0aec0c2a8<br>        format: 2<br>        features: layering<br>        op_features:<br>        flags:<br>        create_timestamp: Thu Jan  7 15:18:34 2021<br>        access_timestamp: Thu Jan  7 15:18:34 2021<br>        modify_timestamp: Thu Jan  7 15:18:34 2021<br>[root@ceph--1 ~]# df -Th /mnt/ceph-demo    # 扩容挂载点<br>Filesystem     Type  Size  Used Avail Use% Mounted on<br>/dev/rbd0      ext4  976M  2.6M  907M   1% /mnt/ceph-demo<br>[root@ceph--1 ~]# resize2fs  /dev/rbd0<br>resize2fs 1.42.9 (28-Dec-2013)<br>Filesystem at /dev/rbd0 is mounted on /mnt/ceph-demo; on-line resizing required<br>old_desc_blocks = 1, new_desc_blocks = 1<br>The filesystem on /dev/rbd0 is now 1310720 blocks long.<br>[root@ceph--1 ~]# cd /mnt/ceph-demo/<br>[root@ceph--1 ceph-demo]# ls<br>lost+found  passwd<br>[root@ceph--1 ceph-demo]# cat passwd <br><br>[root@ceph--1 ~]# df -Th /mnt/ceph-demo<br>Filesystem     Type  Size  Used Avail Use% Mounted on<br>/dev/rbd0      ext4  4.9G  4.0M  4.7G   1% /mnt/ceph-demo<br></code></pre></td></tr></table></figure><h1 id="RBD数据迁移"><a href="#RBD数据迁移" class="headerlink" title="RBD数据迁移"></a>RBD数据迁移</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs shell">模拟ceph--1主机挂机或吊盘<br>[root@ceph--1 ceph-demo]# umount /mnt/ceph-demo/   # 卸载挂载分区<br>umount: /mnt/ceph-demo: target is busy.<br>        (In some cases useful info about processes that use<br>         the device is found by lsof(8) or fuser(1))<br>[root@ceph--1 ceph-demo]# fuser -mv -k /mnt/ceph-demo/  # 如果报以上错误请用该命令卸载<br>                     USER        PID ACCESS COMMAND<br>/mnt/ceph-demo:      root     kernel mount /mnt/ceph-demo<br>                     root      25679 ..c.. bash<br>[root@ceph--1 ~]# umount /mnt/ceph-demo/<br>[root@ceph--1 ~]# df -T<br>Filesystem         Type           1K-blocks    Used Available Use% Mounted on<br>devtmpfs           devtmpfs         8189812       0   8189812   0% /dev<br>tmpfs              tmpfs            8215516       0   8215516   0% /dev/shm<br>tmpfs              tmpfs            8215516   16956   8198560   1% /run<br>tmpfs              tmpfs            8215516       0   8215516   0% /sys/fs/cgroup<br>/dev/vda1          ext4            98232872 3026300  90975308   4% /<br>tmpfs              tmpfs            8215516      52   8215464   1% /var/lib/ceph/osd/ceph-0<br>tmpfs              tmpfs            1643104       0   1643104   0% /run/user/1000<br>10.140.11.8:6789:/ ceph            48599040       0  48599040   0% /mnt/cephfs<br>ceph-fuse          fuse.ceph-fuse  48599040       0  48599040   0% /mnt/ceph-fuse<br>tmpfs              tmpfs            1643104       0   1643104   0% /run/user/0<br>可以看到ceph-demo已经umount 掉了<br><span class="hljs-meta">#</span><span class="bash"> 使用ceph--2主机挂载该设备</span><br>[root@ceph--1 ceph-demo]# ssh ceph--2<br>[root@ceph--2 ~]# rbd device list<br>[root@ceph--2 ~]# rbd -p ceph-demo ls<br>rbd-demo.img<br>[root@ceph--2 ~]# rbd map ceph-demo/rbd-demo.img<br>/dev/rbd0<br>[root@ceph--2 ~]# mkdir ljw<br>[root@ceph--2 ~]# mount /dev/rbd0 /root/ljw/<br>[root@ceph--2 ljw]# df -Th /root/ljw<br>Filesystem     Type  Size  Used Avail Use% Mounted on<br>/dev/rbd0      ext4  4.9G  4.0M  4.7G   1% /root/ljw<br></code></pre></td></tr></table></figure><h1 id="数据验证"><a href="#数据验证" class="headerlink" title="数据验证"></a>数据验证</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@ceph--2 ~]# cd /root/ljw/<br>[root@ceph--2 ljw]# ls<br>lost+found  passwd<br>[root@ceph--2 ljw]# cat passwd<br>[root@ceph--2 ljw]# cp /etc/fstab .<br>[root@ceph--2 ljw]# ls <br>fstab  lost+found  passwd<br><br></code></pre></td></tr></table></figure><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="https://blog.csdn.net/wdz306ling/article/details/87930133">https://blog.csdn.net/wdz306ling/article/details/87930133</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;ceph的块存储&quot;&gt;&lt;a href=&quot;#ceph的块存储&quot; class=&quot;headerlink&quot; title=&quot;ceph的块存储&quot;&gt;&lt;/a&gt;&lt;code&gt;ceph&lt;/code&gt;的块存储&lt;/h1&gt;&lt;h1 id=&quot;创建一个POOL&quot;&gt;&lt;a href=&quot;#创建一个POOL</summary>
      
    
    
    
    <category term="ceph" scheme="https://www.lijiawang.org/categories/ceph/"/>
    
    
    <category term="ceph" scheme="https://www.lijiawang.org/tags/ceph/"/>
    
  </entry>
  
  <entry>
    <title>使用ceph提供文件存储</title>
    <link href="https://www.lijiawang.org/posts/%E4%BD%BF%E7%94%A8ceph%E6%8F%90%E4%BE%9B%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8/"/>
    <id>https://www.lijiawang.org/posts/%E4%BD%BF%E7%94%A8ceph%E6%8F%90%E4%BE%9B%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8/</id>
    <published>2021-01-07T03:23:33.000Z</published>
    <updated>2021-01-07T03:28:48.691Z</updated>
    
    <content type="html"><![CDATA[<p>上篇文章我讲了如果<a href="https://www.lijiawang.org/posts/ceph-deploy-%E5%AE%89%E8%A3%85ceph/">使用ceph-deploy搭建一个ceph完整的集群</a>，这次我来说下如何使用ceph的文件存储</p><a id="more"></a><h1 id="查看ceph集群状态"><a href="#查看ceph集群状态" class="headerlink" title="查看ceph集群状态"></a>查看ceph集群状态</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@ceph--1 ~]# ceph -s<br>  cluster:<br>    id:     faa2e2c4-98bc-47c4-a5b4-a478721b7ea2<br>    health: HEALTH_OK<br><br>  services:<br>    mon: 3 daemons, quorum ceph--1,ceph--2,ceph--3 (age 18h)<br>    mgr: ceph--1(active, since 17h), standbys: ceph--2, ceph--3<br>    mds:  3 up:standby<br>    osd: 3 osds: 3 up (since 17h), 3 in (since 17h)<br>    rgw: 3 daemons active (ceph--1, ceph--2, ceph--3)<br><br>  task status:<br><br>  data:<br>    pools:   4 pools, 128 pgs<br>    objects: 219 objects, 1.2 KiB<br>    usage:   3.0 GiB used, 147 GiB / 150 GiB avail<br>    pgs:     128 active+clean<br><br>[root@ceph--1 ~]# ceph mds stat<br> 3 up:standby<br></code></pre></td></tr></table></figure><blockquote><p>如果想使用ceph的文件存储，必须需要启动ceph-mds组件。同时一个Ceph文件系统至少需要两个RADOS池，一个用于数据，另一个用于元数据，对元数据池使用更高的复制级别，因为此池中的任何数据丢失都可能导致整个文件系统无法访问。<br>对元数据池使用较低延迟的存储（例如SSD），因为这将直接影响在客户端上观察到的文件系统操作的延迟。</p></blockquote><h1 id="创建数据和元数据POOL"><a href="#创建数据和元数据POOL" class="headerlink" title="创建数据和元数据POOL"></a>创建数据和元数据POOL</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@ceph--1 ~]# ceph osd pool create cephfs_data 32<br>pool &#x27;cephfs_data&#x27; created<br>[root@ceph--1 ~]# ceph osd pool create cephfs_metadata 32<br>pool &#x27;cephfs_metadata&#x27; created<br>[root@ceph--1 ~]# ceph osd lspools<br>1 .rgw.root<br>2 default.rgw.control<br>3 default.rgw.meta<br>4 default.rgw.log<br>5 cephfs_data<br>6 cephfs_metadata<br></code></pre></td></tr></table></figure><h1 id="创建ceph文件系统"><a href="#创建ceph文件系统" class="headerlink" title="创建ceph文件系统"></a>创建ceph文件系统</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@ceph--1 ~]# ceph fs new cephfs cephfs_metadata cephfs_data<br>new fs with metadata pool 6 and data pool 5<br>[root@ceph--1 ~]# ceph fs ls<br>name: cephfs, metadata pool: cephfs_metadata, data pools: [cephfs_data ]<br>[root@ceph--1 ~]# ceph mds stat<br>cephfs:1 &#123;0=ceph--2=up:active&#125; 2 up:standby<br>[root@ceph--1 ~]# ceph -s<br>  cluster:<br>    id:     faa2e2c4-98bc-47c4-a5b4-a478721b7ea2<br>    health: HEALTH_OK<br><br>  services:<br>    mon: 3 daemons, quorum ceph--1,ceph--2,ceph--3 (age 18h)<br>    mgr: ceph--1(active, since 17h), standbys: ceph--2, ceph--3<br>    mds: cephfs:1 &#123;0=ceph--2=up:active&#125; 2 up:standby<br>    osd: 3 osds: 3 up (since 18h), 3 in (since 18h)<br>    rgw: 3 daemons active (ceph--1, ceph--2, ceph--3)<br><br>  task status:<br>    scrub status:<br>        mds.ceph--2: idle<br><br>  data:<br>    pools:   6 pools, 192 pgs<br>    objects: 241 objects, 3.4 KiB<br>    usage:   3.0 GiB used, 147 GiB / 150 GiB avail<br>    pgs:     192 active+clean<br></code></pre></td></tr></table></figure><blockquote><p>挂载文件系统一般分为内核级别挂载和系统用户空间挂载，现在linux内核已经提供内核级别挂载</p></blockquote><h1 id="内核级别挂载"><a href="#内核级别挂载" class="headerlink" title="内核级别挂载"></a>内核级别挂载</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@ceph--1 cephfs]# lsmod |grep ceph   # centos 提供的内核节点挂载模块<br>ceph                  363016  1<br>libceph               306750  1 ceph<br>libcrc32c              12644  1 libceph<br>dns_resolver           13140  1 libceph<br>[root@ceph--1 ~]# which mount.ceph        #查看该模块<br>/sbin/mount.ceph<br>[root@ceph--1 ~]# rpm -qf /sbin/mount.ceph<br>ceph-common-14.2.16-0.el7.x86_64<br>[root@ceph--1 ~]# mkdir -p /mnt/cephfs/   创建挂载点<br>[root@ceph--1 ~]# mount -t ceph 10.140.11.8:6789:/ /mnt/cephfs/ -o name=admin<br>[root@ceph--1 ~]# df -h<br>Filesystem          Size  Used Avail Use% Mounted on<br>devtmpfs            7.9G     0  7.9G   0% /dev<br>tmpfs               7.9G     0  7.9G   0% /dev/shm<br>tmpfs               7.9G   17M  7.9G   1% /run<br>tmpfs               7.9G     0  7.9G   0% /sys/fs/cgroup<br>/dev/vda1            94G  2.7G   87G   3% /<br>tmpfs               7.9G   52K  7.9G   1% /var/lib/ceph/osd/ceph-0<br>tmpfs               1.6G     0  1.6G   0% /run/user/1000<br>10.140.11.8:6789:/   47G     0   47G   0% /mnt/cephfs<br>[root@ceph--1 ~]# ceph df<br>RAW STORAGE:<br>    CLASS     SIZE        AVAIL       USED       RAW USED     %RAW USED<br>    hdd       150 GiB     147 GiB     14 MiB      3.0 GiB          2.01<br>    TOTAL     150 GiB     147 GiB     14 MiB      3.0 GiB          2.01<br><br>POOLS:<br>    POOL                    ID     PGS     STORED      OBJECTS     USED        %USED     MAX AVAIL<br>    .rgw.root                1      32     1.2 KiB           4     768 KiB         0        46 GiB<br>    default.rgw.control      2      32         0 B           8         0 B         0        46 GiB<br>    default.rgw.meta         3      32         0 B           0         0 B         0        46 GiB<br>    default.rgw.log          4      32         0 B         207         0 B         0        46 GiB<br>    cephfs_data              5      32         0 B           0         0 B         0        46 GiB<br>    cephfs_metadata          6      32     2.9 KiB          22     1.5 MiB         0        46 GiB<br></code></pre></td></tr></table></figure><h1 id="验证内核级别的挂载点"><a href="#验证内核级别的挂载点" class="headerlink" title="验证内核级别的挂载点"></a>验证内核级别的挂载点</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@ceph--1 ~]# cd /mnt/cephfs/<br>[root@ceph--1 cephfs]# ls<br>[root@ceph--1 cephfs]# ls -l<br>total 0<br>[root@ceph--1 cephfs]# touch lijiawang<br>[root@ceph--1 cephfs]# echo &quot;aaaaaaaaaaaaaaaaaaaaa&quot; &gt; lijiawang <br>[root@ceph--1 cephfs]# cat lijiawang <br></code></pre></td></tr></table></figure><h1 id="用户空间挂载"><a href="#用户空间挂载" class="headerlink" title="用户空间挂载"></a>用户空间挂载</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@ceph--1 ~]# yum -y install ceph-fuse<br>[root@ceph--1 ~]# mkdir /mnt/ceph-fuse   # 创建挂载点<br>[root@ceph--1 ~]# ceph-fuse -n client.admin -m 10.140.11.8:6789,10.140.11.6:6789,10.140.11.24:6789 /mnt/ceph-fuse/<br>2021-01-06 09:03:28.223 7fcdd94d1f80 -1 init, newargv = 0x5588725df4c0 newargc=9<br>ceph-fuse[23357]: starting ceph client<br>ceph-fuse[23357]: starting fuse<br>[root@ceph--1 ~]# df -h<br>Filesystem          Size  Used Avail Use% Mounted on<br>devtmpfs            7.9G     0  7.9G   0% /dev<br>tmpfs               7.9G     0  7.9G   0% /dev/shm<br>tmpfs               7.9G   17M  7.9G   1% /run<br>tmpfs               7.9G     0  7.9G   0% /sys/fs/cgroup<br>/dev/vda1            94G  2.8G   87G   4% /<br>tmpfs               7.9G   52K  7.9G   1% /var/lib/ceph/osd/ceph-0<br>tmpfs               1.6G     0  1.6G   0% /run/user/1000<br>10.140.11.8:6789:/   47G     0   47G   0% /mnt/cephfs<br>ceph-fuse            47G     0   47G   0% /mnt/ceph-fuse<br></code></pre></td></tr></table></figure><h1 id="验证用户空间级别别的挂载点"><a href="#验证用户空间级别别的挂载点" class="headerlink" title="验证用户空间级别别的挂载点"></a>验证用户空间级别别的挂载点</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@ceph--1 ~]# cd /mnt/ceph-fuse<br>[root@ceph--1 ceph-fuse]# ls -l<br>total 1<br>-rw-r--r-- 1 root root 22 Jan  6 08:56 lijiawang<br>[root@ceph--1 ceph-fuse]# cat lijiawang <br>aaaaaaaaaaaaaaaaaaaaa<br>[root@ceph--1 ceph-fuse]# df -T|grep ceph-fuse<br>ceph-fuse          fuse.ceph-fuse  48746496       0  48746496   0% /mnt/ceph-fuse<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;上篇文章我讲了如果&lt;a href=&quot;https://www.lijiawang.org/posts/ceph-deploy-%E5%AE%89%E8%A3%85ceph/&quot;&gt;使用ceph-deploy搭建一个ceph完整的集群&lt;/a&gt;，这次我来说下如何使用ceph的文件存储&lt;/p&gt;</summary>
    
    
    
    <category term="ceph" scheme="https://www.lijiawang.org/categories/ceph/"/>
    
    
    <category term="ceph" scheme="https://www.lijiawang.org/tags/ceph/"/>
    
    <category term="cephfs" scheme="https://www.lijiawang.org/tags/cephfs/"/>
    
  </entry>
  
  <entry>
    <title>ceph-deploy 安装ceph</title>
    <link href="https://www.lijiawang.org/posts/ceph-deploy-%E5%AE%89%E8%A3%85ceph/"/>
    <id>https://www.lijiawang.org/posts/ceph-deploy-%E5%AE%89%E8%A3%85ceph/</id>
    <published>2021-01-06T05:14:32.000Z</published>
    <updated>2021-01-06T07:52:18.350Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ceph-安装"><a href="#ceph-安装" class="headerlink" title="ceph 安装"></a>ceph 安装</h1><p>使用ceph-deploy 安装ceph，ceph-deploy现在只能安装nautilus或者之前的版本，octopus和octopus以后的版本不在使用ceph-deploy方式安装，而是建议使用cephadm来安装，后期我会写一个cephadm安装配置ceph集群。</p><h1 id="准备机器"><a href="#准备机器" class="headerlink" title="准备机器"></a>准备机器</h1><p>下面的机器是我用kvm虚化出来3台，每个机器上有一个数据盘vdb</p><table><thead><tr><th>主机</th><th>应用</th></tr></thead><tbody><tr><td>ceph–1</td><td>ceph-deploy ceph-mon ceph-mgr ceph-raw ceph-mds ceph-osd</td></tr><tr><td>ceph–2</td><td>ceph-mon ceph-mgr ceph-raw ceph-mds ceph-osd</td></tr><tr><td>ceph–3</td><td>ceph-mon ceph-mgr ceph-raw ceph-mds ceph-osd</td></tr></tbody></table><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> 所有机器配置hosts主机名解析</span><br><span class="hljs-meta">#</span><span class="bash"> cat /etc/hosts</span><br>127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4<br>::1         localhost localhost.localdomain localhost6 localhost6.localdomain6<br>10.140.11.8  ceph--1<br>10.140.11.6  ceph--2<br>10.140.11.24 ceph--3<br><span class="hljs-meta">#</span><span class="bash"> lsblk</span> <br>NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT<br>sr0     11:0    1  478K  0 rom<br>vda    253:0    0  100G  0 disk<br>└─vda1 253:1    0  100G  0 part /<br>vdb    253:16   0   50G  0 disk<br></code></pre></td></tr></table></figure><h1 id="deploy节点到ceph主机配置免密登录"><a href="#deploy节点到ceph主机配置免密登录" class="headerlink" title="deploy节点到ceph主机配置免密登录"></a>deploy节点到ceph主机配置免密登录</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@ceph--1 ~]# ssh-keygen <br>Generating public/private rsa key pair.<br>Enter file in which to save the key (/root/.ssh/id_rsa): <br>Enter passphrase (empty for no passphrase): <br>Enter same passphrase again:<br>Your identification has been saved in /root/.ssh/id_rsa.<br>Your public key has been saved in /root/.ssh/id_rsa.pub.<br>The key fingerprint is:<br>SHA256:g981QUE32gwwVNoVB2aSzyTDEUmg2CQdSTgi05eYUWM root@ceph--1.localdomain<br>The key&#x27;s randomart image is:<br>+---[RSA 2048]----+<br>|   ..=E=++=B@*Oo.|<br>|  o =.=*o. =*@.o |<br>|   o o..o . +*o  |<br>|       .     .o  |<br>|      . S   o    |<br>|       . o . .   |<br>|        . .      |<br>|                 |<br>|                 |<br>+----[SHA256]-----+<br><br>[root@ceph--1 ~]# ssh-copy-id ceph--1<br>[root@ceph--1 ~]# ssh-copy-id ceph--2<br>[root@ceph--1 ~]# ssh-copy-id ceph--3<br></code></pre></td></tr></table></figure><h1 id="所有节点配置国内ceph源"><a href="#所有节点配置国内ceph源" class="headerlink" title="所有节点配置国内ceph源"></a>所有节点配置国内ceph源</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> cat /etc/yum.repos.d/ceph.repo</span><br>[norch]<br>name=norch<br>baseurl=https://mirrors.aliyun.com/ceph/rpm-nautilus/el7/noarch/<br>enabled=1<br>gpgcheck=0<br><br>[x86_64]<br>name=x86_64<br>baseurl=https://mirrors.aliyun.com/ceph/rpm-nautilus/el7/x86_64/<br>enabled=1<br>gpgcheck=0<br></code></pre></td></tr></table></figure><h1 id="在ceph–1节点配置安装并配置ceph-deploy节点"><a href="#在ceph–1节点配置安装并配置ceph-deploy节点" class="headerlink" title="在ceph–1节点配置安装并配置ceph-deploy节点"></a>在ceph–1节点配置安装并配置ceph-deploy节点</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@ceph--1 ~]# mkdir ceph-deploy<br>[root@ceph--1 ~]# yum -y install python-setuptools ceph-deploy<br>[root@ceph--1 ceph-deploy]# ceph-deploy new ceph--1<br>[ceph_deploy.conf][DEBUG ] found configuration file at: /root/.cephdeploy.conf<br>[ceph_deploy.cli][INFO  ] Invoked (2.0.1): /bin/ceph-deploy new ceph--1<br>[ceph_deploy.cli][INFO  ] ceph-deploy options:<br>[ceph_deploy.cli][INFO  ]  username                      : None<br>[ceph_deploy.cli][INFO  ]  func                          : &lt;function new at 0x7f4162516de8&gt;<br>[ceph_deploy.cli][INFO  ]  verbose                       : False<br>[ceph_deploy.cli][INFO  ]  overwrite_conf                : False<br>[ceph_deploy.cli][INFO  ]  quiet                         : False<br>[ceph_deploy.cli][INFO  ]  cd_conf                       : &lt;ceph_deploy.conf.cephdeploy.Conf instance at 0x7f4161c98e18&gt;<br>[ceph_deploy.cli][INFO  ]  cluster                       : ceph<br>[ceph_deploy.cli][INFO  ]  ssh_copykey                   : True<br>[ceph_deploy.cli][INFO  ]  mon                           : [&#x27;ceph--1&#x27;]<br>[ceph_deploy.cli][INFO  ]  public_network                : None<br>[ceph_deploy.cli][INFO  ]  ceph_conf                     : None<br>[ceph_deploy.cli][INFO  ]  cluster_network               : None<br>[ceph_deploy.cli][INFO  ]  default_release               : False<br>[ceph_deploy.cli][INFO  ]  fsid                          : None<br>[ceph_deploy.new][DEBUG ] Creating new cluster named ceph<br>[ceph_deploy.new][INFO  ] making sure passwordless SSH succeeds<br>[ceph--1][DEBUG ] connected to host: ceph--1 <br>[ceph--1][DEBUG ] detect platform information from remote host<br>[ceph--1][DEBUG ] detect machine type<br>[ceph--1][DEBUG ] find the location of an executable<br>[ceph--1][INFO  ] Running command: /usr/sbin/ip link show<br>[ceph--1][INFO  ] Running command: /usr/sbin/ip addr show<br>[ceph--1][DEBUG ] IP addresses found: [u&#x27;10.140.11.8&#x27;]<br>[ceph_deploy.new][DEBUG ] Resolving host ceph--1<br>[ceph_deploy.new][DEBUG ] Monitor ceph--1 at 10.140.11.8<br>[ceph_deploy.new][DEBUG ] Monitor initial members are [&#x27;ceph--1&#x27;]<br>[ceph_deploy.new][DEBUG ] Monitor addrs are [&#x27;10.140.11.8&#x27;]<br>[ceph_deploy.new][DEBUG ] Creating a random mon key...<br>[ceph_deploy.new][DEBUG ] Writing monitor keyring to ceph.mon.keyring...<br>[ceph_deploy.new][DEBUG ] Writing initial config to ceph.conf...<br></code></pre></td></tr></table></figure><h1 id="所有节点安装ceph基础软件包"><a href="#所有节点安装ceph基础软件包" class="headerlink" title="所有节点安装ceph基础软件包"></a>所有节点安装ceph基础软件包</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> yum -y install ceph ceph-mon ceph-mgr ceph-radosgw ceph-mds ceph-mgr-dashboard</span><br></code></pre></td></tr></table></figure><h1 id="使用ceph-deploy创建mon节点"><a href="#使用ceph-deploy创建mon节点" class="headerlink" title="使用ceph-deploy创建mon节点"></a>使用ceph-deploy创建mon节点</h1><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs yaml">[<span class="hljs-string">root@ceph--1</span> <span class="hljs-string">ceph-deploy</span>]<span class="hljs-comment"># ceph-deploy mon create-initial</span><br>[<span class="hljs-string">root@ceph--1</span> <span class="hljs-string">ceph-deploy</span>]<span class="hljs-comment"># ceph-deploy mon add ceph--2 # 添加mon 节点</span><br>[<span class="hljs-string">root@ceph--1</span> <span class="hljs-string">ceph-deploy</span>]<span class="hljs-comment"># ceph-deploy mon add ceph--3</span><br>[<span class="hljs-string">root@ceph--1</span> <span class="hljs-string">ceph-deploy</span>]<span class="hljs-comment"># ceph-deploy admin ceph--1 ceph--2 ceph--3  # 同步配置文件</span><br>[<span class="hljs-string">root@ceph--1</span> <span class="hljs-string">ceph-deploy</span>]<span class="hljs-comment"># ceph -s</span><br>  <span class="hljs-attr">cluster:</span><br>    <span class="hljs-attr">id:</span>     <span class="hljs-string">faa2e2c4-98bc-47c4-a5b4-a478721b7ea2</span><br>    <span class="hljs-attr">health:</span> <span class="hljs-string">HEALTH_OK</span><br><br>  <span class="hljs-attr">services:</span><br>    <span class="hljs-attr">mon:</span> <span class="hljs-number">3</span> <span class="hljs-string">daemons,</span> <span class="hljs-string">quorum</span> <span class="hljs-string">ceph--1,ceph--2,ceph--3</span> <span class="hljs-string">(age</span> <span class="hljs-string">49s)</span><br>    <span class="hljs-attr">mgr:</span> <span class="hljs-literal">no</span> <span class="hljs-string">daemons</span> <span class="hljs-string">active</span><br>    <span class="hljs-attr">osd: 0 osds:</span> <span class="hljs-number">0</span> <span class="hljs-string">up,</span> <span class="hljs-number">0</span> <span class="hljs-string">in</span><br><br>  <span class="hljs-attr">data:</span><br>    <span class="hljs-attr">pools:</span>   <span class="hljs-number">0</span> <span class="hljs-string">pools,</span> <span class="hljs-number">0</span> <span class="hljs-string">pgs</span><br>    <span class="hljs-attr">objects:</span> <span class="hljs-number">0</span> <span class="hljs-string">objects,</span> <span class="hljs-number">0</span> <span class="hljs-string">B</span><br>    <span class="hljs-attr">usage:</span>   <span class="hljs-number">0</span> <span class="hljs-string">B</span> <span class="hljs-string">used,</span> <span class="hljs-number">0</span> <span class="hljs-string">B</span> <span class="hljs-string">/</span> <span class="hljs-number">0</span> <span class="hljs-string">B</span> <span class="hljs-string">avail</span><br>    <span class="hljs-attr">pgs:</span><br><br>[<span class="hljs-string">root@ceph--1</span> <span class="hljs-string">ceph-deploy</span>]<span class="hljs-comment"># ceph-deploy mgr create ceph--1 ceph--2 ceph--3</span><br>[<span class="hljs-string">root@ceph--1</span> <span class="hljs-string">ceph-deploy</span>]<span class="hljs-comment"># ceph -s</span><br>  <span class="hljs-attr">cluster:</span><br>    <span class="hljs-attr">id:</span>     <span class="hljs-string">faa2e2c4-98bc-47c4-a5b4-a478721b7ea2</span><br>    <span class="hljs-attr">health:</span> <span class="hljs-string">HEALTH_WARN</span><br>            <span class="hljs-string">OSD</span> <span class="hljs-string">count</span> <span class="hljs-number">0</span> <span class="hljs-string">&lt;</span> <span class="hljs-string">osd_pool_default_size</span> <span class="hljs-number">3</span><br><br>  <span class="hljs-attr">services:</span><br>    <span class="hljs-attr">mon:</span> <span class="hljs-number">3</span> <span class="hljs-string">daemons,</span> <span class="hljs-string">quorum</span> <span class="hljs-string">ceph--1,ceph--2,ceph--3</span> <span class="hljs-string">(age</span> <span class="hljs-string">2m)</span><br>    <span class="hljs-attr">mgr:</span> <span class="hljs-string">ceph--1(active,</span> <span class="hljs-string">since</span> <span class="hljs-string">14m),</span> <span class="hljs-attr">standbys:</span> <span class="hljs-string">ceph--2,</span> <span class="hljs-string">ceph--3</span><br>    <span class="hljs-attr">osd: 0 osds:</span> <span class="hljs-number">0</span> <span class="hljs-string">up,</span> <span class="hljs-number">0</span> <span class="hljs-string">in</span><br><br>  <span class="hljs-attr">data:</span><br>    <span class="hljs-attr">pools:</span>   <span class="hljs-number">0</span> <span class="hljs-string">pools,</span> <span class="hljs-number">0</span> <span class="hljs-string">pgs</span><br>    <span class="hljs-attr">objects:</span> <span class="hljs-number">0</span> <span class="hljs-string">objects,</span> <span class="hljs-number">0</span> <span class="hljs-string">B</span><br>    <span class="hljs-attr">usage:</span>   <span class="hljs-number">0</span> <span class="hljs-string">B</span> <span class="hljs-string">used,</span> <span class="hljs-number">0</span> <span class="hljs-string">B</span> <span class="hljs-string">/</span> <span class="hljs-number">0</span> <span class="hljs-string">B</span> <span class="hljs-string">avail</span><br>    <span class="hljs-attr">pgs:</span><br></code></pre></td></tr></table></figure><h1 id="创建osd"><a href="#创建osd" class="headerlink" title="创建osd"></a>创建osd</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@ceph--1 ceph-deploy]# ceph-deploy osd create ceph--1 --data /dev/vdb <br>[root@ceph--1 ceph-deploy]# ceph-deploy osd create ceph--2 --data /dev/vdb <br>[root@ceph--1 ceph-deploy]# ceph-deploy osd create ceph--3 --data /dev/vdb <br>[root@ceph--1 ceph-deploy]# ceph -s<br>  cluster:<br>    id:     faa2e2c4-98bc-47c4-a5b4-a478721b7ea2<br>    health: HEALTH_OK<br><br>  services:<br>    mon: 3 daemons, quorum ceph--1,ceph--2,ceph--3 (age 8m)<br>    mgr: ceph--1(active, since 20m), standbys: ceph--2, ceph--3<br>    osd: 3 osds: 3 up (since 32s), 3 in (since 32s)<br><br>  data:<br>    pools:   0 pools, 0 pgs<br>    objects: 0 objects, 0 B<br>    usage:   3.0 GiB used, 147 GiB / 150 GiB avail<br>    pgs:<br></code></pre></td></tr></table></figure><h1 id="使用ceph-deploy配置ceph对象存储ceph-raw"><a href="#使用ceph-deploy配置ceph对象存储ceph-raw" class="headerlink" title="使用ceph-deploy配置ceph对象存储ceph-raw"></a>使用ceph-deploy配置ceph对象存储ceph-raw</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@ceph--1 ceph-deploy]# ceph-deploy rgw create ceph--1 ceph--2 ceph--3<br></code></pre></td></tr></table></figure><h1 id="使用ceph-deploy配置ceph文件存储ceph-mds"><a href="#使用ceph-deploy配置ceph文件存储ceph-mds" class="headerlink" title="使用ceph-deploy配置ceph文件存储ceph-mds"></a>使用ceph-deploy配置ceph文件存储ceph-mds</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@ceph--1 ceph-deploy]# ceph-deploy mds create ceph--1 ceph--2 ceph--3<br>[root@ceph--1 ceph-deploy]# ceph -s<br>  cluster:<br>    id:     faa2e2c4-98bc-47c4-a5b4-a478721b7ea2<br>    health: HEALTH_OK<br><br>  services:<br>    mon: 3 daemons, quorum ceph--1,ceph--2,ceph--3 (age 17m)<br>    mgr: ceph--1(active, since 29m), standbys: ceph--2, ceph--3<br>    mds:  3 up:standby<br>    osd: 3 osds: 3 up (since 9m), 3 in (since 9m)<br>    rgw: 3 daemons active (ceph--1, ceph--2, ceph--3)<br><br>  task status:<br><br>  data:<br>    pools:   4 pools, 128 pgs<br>    objects: 187 objects, 1.2 KiB<br>    usage:   3.0 GiB used, 147 GiB / 150 GiB avail<br>    pgs:     128 active+clean<br><br>  io:<br>    client:   83 KiB/s rd, 0 B/s wr, 82 op/s rd, 54 op/s wr<br></code></pre></td></tr></table></figure><h1 id="开启并设置ceph-dashboard"><a href="#开启并设置ceph-dashboard" class="headerlink" title="开启并设置ceph-dashboard"></a>开启并设置ceph-dashboard</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@ceph--1 ceph-deploy]# ceph  mgr module enable  dashboard<br>[root@ceph--1 ceph-deploy]# ceph  dashboard create-self-signed-cert<br>Self-signed certificate created<br>[root@ceph--1 ceph-deploy]# ceph config set mgr mgr/dashboard/server_addr 10.140.11.8<br>[root@ceph--1 ceph-deploy]# ceph config set mgr mgr/dashboard/server_port 8080<br>[root@ceph--1 ceph-deploy]# ceph config set mgr mgr/dashboard/ssl_server_port 8443<br>[root@ceph--1 ceph-deploy]# ceph dashboard set-login-credentials admin admin<br>******************************************************************<br>***          WARNING: this command is deprecated.              ***<br>*** Please use the ac-user-* related commands to manage users. ***<br>******************************************************************<br>Username and password updated<br>systemctl restart ceph-mgr@ceph-node1<br>[root@ceph--1 ceph-deploy]# ceph mgr services<br>&#123;<br>    &quot;dashboard&quot;: &quot;https://ceph--1:8443/&quot;<br>&#125;<br></code></pre></td></tr></table></figure><p>请用谷歌浏览器访问<a href="https://10.140.11.8:8443/#/dashboard">https://10.140.11.8:8443/#/dashboard</a><br>账号密码admin/admin<br><img src="https://ljw.howieli.cn/blog/2021-01-06/ceph-01.png" alt="dashboard"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;ceph-安装&quot;&gt;&lt;a href=&quot;#ceph-安装&quot; class=&quot;headerlink&quot; title=&quot;ceph 安装&quot;&gt;&lt;/a&gt;ceph 安装&lt;/h1&gt;&lt;p&gt;使用ceph-deploy 安装ceph，ceph-deploy现在只能安装nautilus或者之前</summary>
      
    
    
    
    <category term="ceph" scheme="https://www.lijiawang.org/categories/ceph/"/>
    
    
    <category term="ceph" scheme="https://www.lijiawang.org/tags/ceph/"/>
    
    <category term="ceph-deploy" scheme="https://www.lijiawang.org/tags/ceph-deploy/"/>
    
  </entry>
  
  <entry>
    <title>Tekton安装及Hello world</title>
    <link href="https://www.lijiawang.org/posts/Tekton%E5%AE%89%E8%A3%85%E5%8F%8AHello-world/"/>
    <id>https://www.lijiawang.org/posts/Tekton%E5%AE%89%E8%A3%85%E5%8F%8AHello-world/</id>
    <published>2021-01-06T02:16:19.000Z</published>
    <updated>2021-01-06T02:27:14.481Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h1 id="准备k8s集群"><a href="#准备k8s集群" class="headerlink" title="准备k8s集群"></a>准备k8s集群</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@k8s-master ~]# kubectl get nodes<br>NAME         STATUS   ROLES    AGE   VERSION<br>k8s-master   Ready    master   28d   v1.19.4<br>k8s-node01   Ready    &lt;none&gt;   28d   v1.19.4<br>k8s-node02   Ready    &lt;none&gt;   28d   v1.19.4<br>k8s-node03   Ready    &lt;none&gt;   28d   v1.19.4<br>k8s-node04   Ready    &lt;none&gt;   28d   v1.19.4<br></code></pre></td></tr></table></figure><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"># <span class="hljs-selector-tag">kubectl</span> <span class="hljs-selector-tag">apply</span> <span class="hljs-selector-tag">--filename</span> <span class="hljs-selector-tag">https</span>://<span class="hljs-selector-tag">storage</span><span class="hljs-selector-class">.googleapis</span><span class="hljs-selector-class">.com</span>/<span class="hljs-selector-tag">tekton-releases</span>/<span class="hljs-selector-tag">pipeline</span>/<span class="hljs-selector-tag">latest</span>/<span class="hljs-selector-tag">release</span><span class="hljs-selector-class">.yaml</span><br></code></pre></td></tr></table></figure><p>检查安装的tekton相关的CRD</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># kubectl api-resources |grep tekton</span><br><span class="hljs-string">clustertasks</span>                                      <span class="hljs-string">tekton.dev</span>                         <span class="hljs-literal">false</span>        <span class="hljs-string">ClusterTask</span><br><span class="hljs-string">conditions</span>                                        <span class="hljs-string">tekton.dev</span>                         <span class="hljs-literal">true</span>         <span class="hljs-string">Condition</span><br><span class="hljs-string">pipelineresources</span>                                 <span class="hljs-string">tekton.dev</span>                         <span class="hljs-literal">true</span>         <span class="hljs-string">PipelineResource</span><br><span class="hljs-string">pipelineruns</span>                      <span class="hljs-string">pr,prs</span>          <span class="hljs-string">tekton.dev</span>                         <span class="hljs-literal">true</span>         <span class="hljs-string">PipelineRun</span><br><span class="hljs-string">pipelines</span>                                         <span class="hljs-string">tekton.dev</span>                         <span class="hljs-literal">true</span>         <span class="hljs-string">Pipeline</span><br><span class="hljs-string">runs</span>                                              <span class="hljs-string">tekton.dev</span>                         <span class="hljs-literal">true</span>         <span class="hljs-string">Run</span><br><span class="hljs-string">taskruns</span>                          <span class="hljs-string">tr,trs</span>          <span class="hljs-string">tekton.dev</span>                         <span class="hljs-literal">true</span>         <span class="hljs-string">TaskRun</span><br><span class="hljs-string">tasks</span>                                             <span class="hljs-string">tekton.dev</span>                         <span class="hljs-literal">true</span>         <span class="hljs-string">Task</span><br></code></pre></td></tr></table></figure><p>查看pod</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment"># kubectl get pods --namespace tekton-pipelines</span><br><span class="hljs-attribute">NAME</span>                                           READY   STATUS    RESTARTS   AGE<br><span class="hljs-attribute">tekton</span>-pipelines-controller-<span class="hljs-number">5</span>cdb<span class="hljs-number">46974</span>f-lfnrs   <span class="hljs-number">1</span>/<span class="hljs-number">1</span>     Running   <span class="hljs-number">0</span>          <span class="hljs-number">6</span>d<br><span class="hljs-attribute">tekton</span>-pipelines-webhook-<span class="hljs-number">6479</span>d<span class="hljs-number">769</span>ff-<span class="hljs-number">7</span>ct<span class="hljs-number">5</span>g      <span class="hljs-number">1</span>/<span class="hljs-number">1</span>     Running   <span class="hljs-number">0</span>          <span class="hljs-number">6</span>d<br></code></pre></td></tr></table></figure><h1 id="安装CLI"><a href="#安装CLI" class="headerlink" title="安装CLI"></a>安装CLI</h1><p>CLI：<a href="https://github.com/tektoncd/cli#installing-tkn">https://github.com/tektoncd/cli#installing-tkn</a><br>我这是centos7操作系统</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs vim"># rpm -Uvh http<span class="hljs-variable">s:</span>//github.<span class="hljs-keyword">com</span>/tektoncd/cli/releases/download/v0.<span class="hljs-number">14.0</span>/tektoncd-cli-<span class="hljs-number">0.14</span>.<span class="hljs-number">0</span>_Linux-<span class="hljs-number">64</span>bit.rpm<br># tkn -h<br>CLI <span class="hljs-keyword">for</span> tekton pipelines<br><br>Usage:<br>tkn [flags]<br>tkn [<span class="hljs-keyword">command</span>]<br><br>Available Command<span class="hljs-variable">s:</span><br>  clustertask           Manage ClusterTasks<br>  clustertriggerbinding Manage ClusterTriggerBindings<br>  condition             Manage Conditions<br>  eventlistener         Manage EventListeners<br>  hub                   Interact with tekton hub<br>  pipeline              Manage pipelines<br>  pipelinerun           Manage PipelineRuns<br>  resource              Manage pipeline resources<br>  task                  Manage Tasks<br>  taskrun               Manage TaskRuns<br>  triggerbinding        Manage TriggerBindings<br>  triggertemplate       Manage TriggerTemplates<br><br>Other Command<span class="hljs-variable">s:</span><br>  completion            Prints <span class="hljs-keyword">shell</span> completion scripts<br>  <span class="hljs-keyword">version</span>               Prints <span class="hljs-keyword">version</span> information<br><br>Flag<span class="hljs-variable">s:</span><br>  -h, --<span class="hljs-keyword">help</span>   <span class="hljs-keyword">help</span> <span class="hljs-keyword">for</span> tkn<br><br>Use <span class="hljs-string">&quot;tkn [command] --help&quot;</span> <span class="hljs-keyword">for</span> more information about <span class="hljs-keyword">a</span> <span class="hljs-keyword">command</span>.<br>http<span class="hljs-variable">s:</span>//github.<span class="hljs-keyword">com</span>/tektoncd/cli#installing-tkn<br></code></pre></td></tr></table></figure><h1 id="Tekton：hello-world"><a href="#Tekton：hello-world" class="headerlink" title="Tekton：hello world"></a>Tekton：hello world</h1><p>创建一个简单的Task, 只有一个step就是打印出”hello world”</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-meta"># cat hello_task.yml </span><br><span class="hljs-symbol">apiVersion:</span> tekton.dev/v1alpha1<br><span class="hljs-symbol">kind:</span> Task<br><span class="hljs-symbol">metadata:</span><br><span class="hljs-symbol">  name:</span> echo-hello-world<br><span class="hljs-symbol">spec:</span><br><span class="hljs-symbol">  steps:</span><br>    - name: echo<br><span class="hljs-symbol">      image:</span> alpine<br><span class="hljs-symbol">      command:</span><br>        - echo<br><span class="hljs-symbol">      args:</span><br>        - <span class="hljs-string">&quot;hello world&quot;</span><br></code></pre></td></tr></table></figure><p>创建一个TaskRun执行上面的Task</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-meta"># cat hello_task_run.yml </span><br><span class="hljs-symbol">apiVersion:</span> tekton.dev/v1alpha1<br><span class="hljs-symbol">kind:</span> TaskRun<br><span class="hljs-symbol">metadata:</span><br><span class="hljs-symbol">  name:</span> echo-hello-world-task-run<br><span class="hljs-symbol">spec:</span><br><span class="hljs-symbol">  taskRef:</span><br><span class="hljs-symbol">    name:</span> echo-hello-world<br></code></pre></td></tr></table></figure><p>运行task</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sqf"><span class="hljs-meta"># kubectl apply -f hello_task.yml </span><br>task.tekton.dev/<span class="hljs-built_in">echo</span>-hello-world created<br><span class="hljs-meta"># kubectl get task</span><br><span class="hljs-built_in">NAME</span>               AGE<br><span class="hljs-built_in">echo</span>-hello-world   <span class="hljs-number">12</span>s<br><span class="hljs-meta"># tkn task list</span><br><span class="hljs-built_in">NAME</span>               DESCRIPTION   AGE<br><span class="hljs-built_in">echo</span>-hello-world                 <span class="hljs-number">1</span> minute ago<br></code></pre></td></tr></table></figure><p>运行一个taskrun</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css"># <span class="hljs-selector-tag">kubectl</span> <span class="hljs-selector-tag">apply</span> <span class="hljs-selector-tag">-f</span> <span class="hljs-selector-tag">hello_task_run</span><span class="hljs-selector-class">.yml</span> <br><span class="hljs-selector-tag">taskrun</span><span class="hljs-selector-class">.tekton</span><span class="hljs-selector-class">.dev</span>/<span class="hljs-selector-tag">echo-hello-world-task-run</span> <span class="hljs-selector-tag">created</span><br></code></pre></td></tr></table></figure><p>检查TaskRun的输出, 执行命令</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs sqf"><span class="hljs-meta"># tkn taskrun list</span><br><span class="hljs-built_in">NAME</span>                        STARTED          DURATION    STATUS<br><span class="hljs-built_in">echo</span>-hello-world-task-run   <span class="hljs-number">25</span> seconds ago   <span class="hljs-number">6</span> seconds   Succeeded<br><span class="hljs-meta"># kubectl get taskrun</span><br><span class="hljs-built_in">NAME</span>                        SUCCEEDED   REASON      STARTTIME   COMPLETIONTIME<br><span class="hljs-built_in">echo</span>-hello-world-task-run   <span class="hljs-literal">True</span>        Succeeded   <span class="hljs-number">37</span>s         <span class="hljs-number">31</span>s<br><br><span class="hljs-meta"># kubectl get pod</span><br><span class="hljs-built_in">NAME</span>                                  READY   STATUS      RESTARTS   AGE<br><span class="hljs-built_in">echo</span>-hello-world-task-run-pod-<span class="hljs-number">8</span>xnvb   <span class="hljs-number">0</span>/<span class="hljs-number">1</span>     Completed   <span class="hljs-number">0</span>          <span class="hljs-number">74</span>s<br><br>可以看到有一个pod生成<br><br><br><span class="hljs-meta"># tkn taskrun describe echo-hello-world-task-run</span><br><span class="hljs-built_in">Name</span>:              <span class="hljs-built_in">echo</span>-hello-world-task-run<br>Namespace:         <span class="hljs-keyword">default</span><br>Task Ref:          <span class="hljs-built_in">echo</span>-hello-world<br>Service Account:   <span class="hljs-keyword">default</span><br>Timeout:           <span class="hljs-number">1</span>h0m0s<br>Labels:<br> app.kubernetes.io/managed-by=tekton-pipelines<br> tekton.dev/task=<span class="hljs-built_in">echo</span>-hello-world<br><br>Status<br><br>STARTED        DURATION    STATUS<br><span class="hljs-number">1</span> minute ago   <span class="hljs-number">6</span> seconds   Succeeded<br><br>Input <span class="hljs-built_in">Resources</span><br><br>No input <span class="hljs-built_in">resources</span><br><br>Output <span class="hljs-built_in">Resources</span><br><br>No output <span class="hljs-built_in">resources</span><br><br><span class="hljs-built_in">Params</span><br><br>No <span class="hljs-built_in">params</span><br><br>Results<br><br>No results<br><br>Workspaces<br><br>No workspaces<br><br>Steps<br><br><span class="hljs-built_in">NAME</span>     STATUS<br><span class="hljs-built_in">echo</span>   Completed<br><br>Sidecars<br><br>No sidecars<br></code></pre></td></tr></table></figure><p>Succeeded状态表示task执行成功.</p><p>查看实际的输出，执行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># tkn taskrun logs echo-hello-world-task-run</span><br>[<span class="hljs-built_in">echo</span>] hello world<br></code></pre></td></tr></table></figure><p>可以看到结果如下</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-string">[echo]</span> hello world<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;准备k8s集群&quot;&gt;&lt;a href=&quot;#准备k8s集群&quot; class=&quot;headerlink&quot; title=&quot;准备k8s集群&quot;&gt;&lt;/a&gt;准备k8s集群&lt;/h1&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;ta</summary>
      
    
    
    
    <category term="tekton" scheme="https://www.lijiawang.org/categories/tekton/"/>
    
    
    <category term="kubernetes" scheme="https://www.lijiawang.org/tags/kubernetes/"/>
    
    <category term="CI/CD" scheme="https://www.lijiawang.org/tags/CI-CD/"/>
    
  </entry>
  
  <entry>
    <title>2020年总结</title>
    <link href="https://www.lijiawang.org/posts/2020%E5%B9%B4%E6%80%BB%E7%BB%93/"/>
    <id>https://www.lijiawang.org/posts/2020%E5%B9%B4%E6%80%BB%E7%BB%93/</id>
    <published>2020-12-31T05:19:26.000Z</published>
    <updated>2020-12-31T05:19:26.508Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>openstack instance vm_power_state 状态置为 NOSTATE</title>
    <link href="https://www.lijiawang.org/posts/openstack-instance-vm-power-state-%E7%8A%B6%E6%80%81%E7%BD%AE%E4%B8%BA-NOSTATE/"/>
    <id>https://www.lijiawang.org/posts/openstack-instance-vm-power-state-%E7%8A%B6%E6%80%81%E7%BD%AE%E4%B8%BA-NOSTATE/</id>
    <published>2019-11-08T15:37:21.000Z</published>
    <updated>2020-12-31T06:55:14.044Z</updated>
    
    <content type="html"><![CDATA[<h3 id="openstack-上的instance运行正常，但是power-state状态为NOSTATE，导致instance热迁移失败"><a href="#openstack-上的instance运行正常，但是power-state状态为NOSTATE，导致instance热迁移失败" class="headerlink" title="openstack 上的instance运行正常，但是power_state状态为NOSTATE，导致instance热迁移失败"></a>openstack 上的instance运行正常，但是power_state状态为NOSTATE，导致instance热迁移失败</h3><h3 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h3><p>1、再一次热迁移时候发现迁移时候报以下错误</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment"># openstack server migrate --live node-53 86487ef4-cc12-4be6-995e-46f5ac093901</span><br><span class="hljs-attribute">Cannot</span> &#x27;os-migrateLive&#x27; instance <span class="hljs-number">86487</span>ef<span class="hljs-number">4</span>-cc<span class="hljs-number">12</span>-<span class="hljs-number">4</span>be<span class="hljs-number">6</span>-<span class="hljs-number">995</span>e-<span class="hljs-number">46</span>f<span class="hljs-number">5</span>ac<span class="hljs-number">093901</span> while it is in power_state <span class="hljs-number">0</span> (HTTP <span class="hljs-number">409</span>) (Request-ID: req-<span class="hljs-number">6</span>c<span class="hljs-number">14</span>e<span class="hljs-number">0</span>ee-c<span class="hljs-number">3</span>df-<span class="hljs-number">42</span>de-<span class="hljs-number">873</span>d-<span class="hljs-number">9</span>ecc<span class="hljs-number">8</span>ad<span class="hljs-number">215</span>cc)<br></code></pre></td></tr></table></figure><p>2、查看实例，发现虚拟机运行正常，但是 power_state 为 NOSTATE</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs gherkin"><span class="hljs-comment"># openstack server show 86487ef4-cc12-4be6-995e-46f5ac093901</span><br>+-------------------------------------+----------------------------------------------------------------+<br>|<span class="hljs-string"> Field                               </span>|<span class="hljs-string"> Value                                                          </span>|<br>+-------------------------------------+----------------------------------------------------------------+<br>|<span class="hljs-string"> OS-DCF:diskConfig                   </span>|<span class="hljs-string"> MANUAL                                                         </span>|<br>|<span class="hljs-string"> OS-EXT-AZ:availability_zone         </span>|<span class="hljs-string"> m_cpu+san                                                      </span>|<br>|<span class="hljs-string"> OS-EXT-SRV-ATTR:host                </span>|<span class="hljs-string"> node-27                                                        </span>|<br>|<span class="hljs-string"> OS-EXT-SRV-ATTR:hypervisor_hostname </span>|<span class="hljs-string"> node-27                                                        </span>|<br>|<span class="hljs-string"> OS-EXT-SRV-ATTR:instance_name       </span>|<span class="hljs-string"> instance-000071aa                                              </span>|<br>|<span class="hljs-string"> OS-EXT-STS:power_state              </span>|<span class="hljs-string"> NOSTATE                                                        </span>|<br>|<span class="hljs-string"> OS-EXT-STS:task_state               </span>|<span class="hljs-string"> None                                                           </span>|<br>|<span class="hljs-string"> OS-EXT-STS:vm_state                 </span>|<span class="hljs-string"> active                                                         </span>|<br>|<span class="hljs-string"> OS-SRV-USG:launched_at              </span>|<span class="hljs-string"> 2018-09-21T05:40:36.000000                                     </span>|<br>|<span class="hljs-string"> OS-SRV-USG:terminated_at            </span>|<span class="hljs-string"> None                                                           </span>|<br>|<span class="hljs-string"> accessIPv4                          </span>|<span class="hljs-string">                                                                </span>|<br>|<span class="hljs-string"> accessIPv6                          </span>|<span class="hljs-string">                                                                </span>|<br>|<span class="hljs-string"> addresses                           </span>|<span class="hljs-string"> vlan_10.122.44.0/23=10.122.45.53                               </span>|<br>|<span class="hljs-string"> config_drive                        </span>|<span class="hljs-string"> True                                                           </span>|<br>|<span class="hljs-string"> created                             </span>|<span class="hljs-string"> 2018-09-21T05:40:31Z                                           </span>|<br>|<span class="hljs-string"> flavor                              </span>|<span class="hljs-string"> 16-64-100 (1cbe4ea1-8a67-4027-afd4-8f31a8b94851)               </span>|<br>|<span class="hljs-string"> hostId                              </span>|<span class="hljs-string"> 2730fa3d62e347ddb67e155f6eed973787a868c82316f7e6ba641b10       </span>|<br>|<span class="hljs-string"> id                                  </span>|<span class="hljs-string"> 86487ef4-cc12-4be6-995e-46f5ac093901                           </span>|<br>|<span class="hljs-string"> image                               </span>|<span class="hljs-string"> lenovo-centos-7-release (b9f8f864-4217-4ac6-a116-62ecfa0fc074) </span>|<br>|<span class="hljs-string"> key_name                            </span>|<span class="hljs-string"> None                                                           </span>|<br>|<span class="hljs-string"> name                                </span>|<span class="hljs-string"> SLP3YM7HRCX                                                    </span>|<br>|<span class="hljs-string"> progress                            </span>|<span class="hljs-string"> 100                                                            </span>|<br>|<span class="hljs-string"> project_id                          </span>|<span class="hljs-string"> e992715df18a417997c068e5f9834b0f                               </span>|<br>|<span class="hljs-string"> properties                          </span>|<span class="hljs-string">                                                                </span>|<br>|<span class="hljs-string"> security_groups                     </span>|<span class="hljs-string"> name=&#x27;default&#x27;                                                 </span>|<br>|<span class="hljs-string"> status                              </span>|<span class="hljs-string"> ACTIVE                                                         </span>|<br>|<span class="hljs-string"> updated                             </span>|<span class="hljs-string"> 2019-10-09T07:58:58Z                                           </span>|<br>|<span class="hljs-string"> user_id                             </span>|<span class="hljs-string"> af518aeb935c4d258f8cb7d302c83797                               </span>|<br>|<span class="hljs-string"> volumes_attached                    </span>|<span class="hljs-string"> id=&#x27;a821856b-409f-4e6e-becd-eb4b2344c7d8&#x27;                      </span>|<br>+-------------------------------------+----------------------------------------------------------------+<br></code></pre></td></tr></table></figure><h3 id="查找原因"><a href="#查找原因" class="headerlink" title="查找原因"></a>查找原因</h3><p>列出该虚拟机的历史操作</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs subunit"># nova instance-action-list 86487ef4-cc12<span class="hljs-string">-4</span>be6<span class="hljs-string">-995</span>e<span class="hljs-string">-46</span>f5ac093901<br>+----------------+------------------------------------------+---------+----------------------------+<br>| Action         | Request_ID                               | Message | Start_Time                 |<br>+----------------+------------------------------------------+---------+----------------------------+<br>| create         | req<span class="hljs-string">-4</span>d01a466-ce7a<span class="hljs-string">-48</span>a9-b575-e129b61bcc30 | -       | 2018<span class="hljs-string">-09</span><span class="hljs-string">-21</span>T05:40:30.000000 |<br>| live-migration | req<span class="hljs-string">-2</span>d93bc73-e43f<span class="hljs-string">-4</span>ca6<span class="hljs-string">-88</span>fc-a6ad1a4021a6 | -       | 2018<span class="hljs-string">-09</span><span class="hljs-string">-21</span>T05:44:47.000000 |<br>| live-migration | req<span class="hljs-string">-7</span>fcbfb15<span class="hljs-string">-7</span>e3c<span class="hljs-string">-471</span>d<span class="hljs-string">-8</span>ea5<span class="hljs-string">-020</span>d438d23c3 | -       | 2019<span class="hljs-string">-03</span><span class="hljs-string">-24</span>T13:00:30.000000 |<br>| live-migration | req<span class="hljs-string">-2</span>b009c4f-caef<span class="hljs-string">-4</span>d90<span class="hljs-string">-81</span>fd-d480c1b9efad | Error   | 2019<span class="hljs-string">-10</span><span class="hljs-string">-09</span>T07:00:13.000000 |<br>| live-migration | req-b364724b<span class="hljs-string">-6</span>b28<span class="hljs-string">-4</span>d5f<span class="hljs-string">-8</span>f14<span class="hljs-string">-05</span>d1c4abeceb | Error   | 2019<span class="hljs-string">-10</span><span class="hljs-string">-09</span>T07:07:37.000000 |<br>| live-migration | req<span class="hljs-string">-8669</span>d3b1-e57e<span class="hljs-string">-4</span>b35<span class="hljs-string">-8</span>d40-a110b64f47c8 | Error   | 2019<span class="hljs-string">-10</span><span class="hljs-string">-09</span>T07:29:13.000000 |<br>| live-migration | req-ecec98ca<span class="hljs-string">-3777</span><span class="hljs-string">-4</span>ca3-afcd<span class="hljs-string">-83</span>e36381e038 | Error   | 2019<span class="hljs-string">-10</span><span class="hljs-string">-09</span>T07:55:12.000000 |<br>| live-migration | req<span class="hljs-string">-6378</span>f839<span class="hljs-string">-89</span>c0<span class="hljs-string">-43</span>c0<span class="hljs-string">-8</span>a65<span class="hljs-string">-40</span>e5b775283c | Error   | 2019<span class="hljs-string">-10</span><span class="hljs-string">-09</span>T07:58:14.000000 |<br>| live-migration | req-e966caa7<span class="hljs-string">-06</span>e5<span class="hljs-string">-4</span>a29-a371<span class="hljs-string">-517</span>d98c37121 | Error   | 2019<span class="hljs-string">-10</span><span class="hljs-string">-09</span>T07:58:58.000000 |<br>| live-migration | req<span class="hljs-string">-6</span>c14e0ee-c3df<span class="hljs-string">-42</span>de<span class="hljs-string">-873</span>d<span class="hljs-string">-9</span>ecc8ad215cc | Error   | 2019<span class="hljs-string">-10</span><span class="hljs-string">-09</span>T08:31:47.000000 |<br>+----------------+------------------------------------------+---------+----------------------------+<br></code></pre></td></tr></table></figure><p>列出该实例的迁移记录</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><code class="hljs gherkin"><span class="hljs-comment"># nova  migration-list|grep 86487ef4-cc12-4be6-995e-46f5ac093901</span><br>|<span class="hljs-string"> 84892 </span>|<span class="hljs-string"> -           </span>|<span class="hljs-string"> -         </span>|<span class="hljs-string"> node-27        </span>|<span class="hljs-string"> node-29            </span>|<span class="hljs-string"> -            </span>|<span class="hljs-string"> error         </span>|<span class="hljs-string"> 86487ef4-cc12-4be6-995e-46f5ac093901 </span>|<span class="hljs-string"> 189        </span>|<span class="hljs-string"> 189        </span>|<span class="hljs-string"> 2019-10-09T07:07:37.000000 </span>|<span class="hljs-string"> 2019-10-09T07:07:37.000000 </span>|<span class="hljs-string"> live-migration </span>|<br>|<span class="hljs-string"> 54307 </span>|<span class="hljs-string"> -           </span>|<span class="hljs-string"> -         </span>|<span class="hljs-string"> node-27        </span>|<span class="hljs-string"> node-53            </span>|<span class="hljs-string"> -            </span>|<span class="hljs-string"> error         </span>|<span class="hljs-string"> 86487ef4-cc12-4be6-995e-46f5ac093901 </span>|<span class="hljs-string"> 189        </span>|<span class="hljs-string"> 189        </span>|<span class="hljs-string"> 2019-03-24T13:00:30.000000 </span>|<span class="hljs-string"> 2019-03-24T17:10:10.000000 </span>|<span class="hljs-string"> live-migration </span>|<br>|<span class="hljs-string"> 84904 </span>|<span class="hljs-string"> -           </span>|<span class="hljs-string"> -         </span>|<span class="hljs-string"> node-27        </span>|<span class="hljs-string"> node-53            </span>|<span class="hljs-string"> -            </span>|<span class="hljs-string"> error         </span>|<span class="hljs-string"> 86487ef4-cc12-4be6-995e-46f5ac093901 </span>|<span class="hljs-string"> 189        </span>|<span class="hljs-string"> 189        </span>|<span class="hljs-string"> 2019-10-09T07:29:13.000000 </span>|<span class="hljs-string"> 2019-10-09T07:29:13.000000 </span>|<span class="hljs-string"> live-migration </span>|<br>|<span class="hljs-string"> 84913 </span>|<span class="hljs-string"> -           </span>|<span class="hljs-string"> -         </span>|<span class="hljs-string"> node-27        </span>|<span class="hljs-string"> node-53            </span>|<span class="hljs-string"> -            </span>|<span class="hljs-string"> error         </span>|<span class="hljs-string"> 86487ef4-cc12-4be6-995e-46f5ac093901 </span>|<span class="hljs-string"> 189        </span>|<span class="hljs-string"> 189        </span>|<span class="hljs-string"> 2019-10-09T07:55:12.000000 </span>|<span class="hljs-string"> 2019-10-09T07:55:12.000000 </span>|<span class="hljs-string"> live-migration </span>|<br>|<span class="hljs-string"> 84919 </span>|<span class="hljs-string"> -           </span>|<span class="hljs-string"> -         </span>|<span class="hljs-string"> node-27        </span>|<span class="hljs-string"> node-53            </span>|<span class="hljs-string"> -            </span>|<span class="hljs-string"> error         </span>|<span class="hljs-string"> 86487ef4-cc12-4be6-995e-46f5ac093901 </span>|<span class="hljs-string"> 189        </span>|<span class="hljs-string"> 189        </span>|<span class="hljs-string"> 2019-10-09T07:58:14.000000 </span>|<span class="hljs-string"> 2019-10-09T07:58:14.000000 </span>|<span class="hljs-string"> live-migration </span>|<br>|<span class="hljs-string"> 84922 </span>|<span class="hljs-string"> -           </span>|<span class="hljs-string"> -         </span>|<span class="hljs-string"> node-27        </span>|<span class="hljs-string"> node-53            </span>|<span class="hljs-string"> -            </span>|<span class="hljs-string"> error         </span>|<span class="hljs-string"> 86487ef4-cc12-4be6-995e-46f5ac093901 </span>|<span class="hljs-string"> 189        </span>|<span class="hljs-string"> 189        </span>|<span class="hljs-string"> 2019-10-09T07:58:58.000000 </span>|<span class="hljs-string"> 2019-10-09T07:58:58.000000 </span>|<span class="hljs-string"> live-migration </span>|<br>|<span class="hljs-string"> 84931 </span>|<span class="hljs-string"> -           </span>|<span class="hljs-string"> -         </span>|<span class="hljs-string"> node-27        </span>|<span class="hljs-string"> node-53            </span>|<span class="hljs-string"> -            </span>|<span class="hljs-string"> error         </span>|<span class="hljs-string"> 86487ef4-cc12-4be6-995e-46f5ac093901 </span>|<span class="hljs-string"> 189        </span>|<span class="hljs-string"> 189        </span>|<span class="hljs-string"> 2019-10-09T08:31:47.000000 </span>|<span class="hljs-string"> 2019-10-09T08:31:47.000000 </span>|<span class="hljs-string"> live-migration </span>|<br>|<span class="hljs-string"> 84889 </span>|<span class="hljs-string"> -           </span>|<span class="hljs-string"> -         </span>|<span class="hljs-string"> node-27        </span>|<span class="hljs-string"> node-89            </span>|<span class="hljs-string"> -            </span>|<span class="hljs-string"> error         </span>|<span class="hljs-string"> 86487ef4-cc12-4be6-995e-46f5ac093901 </span>|<span class="hljs-string"> 189        </span>|<span class="hljs-string"> 189        </span>|<span class="hljs-string"> 2019-10-09T07:00:13.000000 </span>|<span class="hljs-string"> 2019-10-09T07:00:13.000000 </span>|<span class="hljs-string"> live-migration </span>|<br>|<span class="hljs-string"> 42241 </span>|<span class="hljs-string"> -           </span>|<span class="hljs-string"> -         </span>|<span class="hljs-string"> node-33        </span>|<span class="hljs-string"> node-27            </span>|<span class="hljs-string"> -            </span>|<span class="hljs-string"> completed     </span>|<span class="hljs-string"> 86487ef4-cc12-4be6-995e-46f5ac093901 </span>|<span class="hljs-string"> 189        </span>|<span class="hljs-string"> 189        </span>|<span class="hljs-string"> 2018-09-21T05:44:48.000000 </span>|<span class="hljs-string"> 2018-09-21T05:45:13.000000 </span>|<span class="hljs-string"> live-migration </span>|<br>可以看到该实例从node-27节点迁移到node-85、node-53、node-29节点均为迁移成功<br>查看instance所在的节点<br><span class="hljs-comment"># ssh node-27</span><br><br>root<span class="hljs-meta">@node-27:~#</span> virsh list --all|<span class="hljs-string">grep instance-000071aa </span><br><span class="hljs-string">root@node-27:~# exit</span><br><span class="hljs-string">logout</span><br><span class="hljs-string">Connection to node-27 closed.</span><br><span class="hljs-string"># ssh node-53</span><br><br><span class="hljs-string">root@node-53:~#  virsh list --all</span>|<span class="hljs-string">grep instance-000071aa</span><br><span class="hljs-string"> 91    instance-000071aa              running</span><br><span class="hljs-string">root@node-53:~# exit</span><br><span class="hljs-string">logout</span><br><span class="hljs-string">Connection to node-53 closed.</span><br><span class="hljs-string"># openstack server show 86487ef4-cc12-4be6-995e-46f5ac093901</span><br><span class="hljs-string">+-------------------------------------+----------------------------------------------------------------+</span><br>|<span class="hljs-string"> Field                               </span>|<span class="hljs-string"> Value                                                          </span>|<br>+-------------------------------------+----------------------------------------------------------------+<br>|<span class="hljs-string"> OS-DCF:diskConfig                   </span>|<span class="hljs-string"> MANUAL                                                         </span>|<br>|<span class="hljs-string"> OS-EXT-AZ:availability_zone         </span>|<span class="hljs-string"> m_cpu+san                                                      </span>|<br>|<span class="hljs-string"> OS-EXT-SRV-ATTR:host                </span>|<span class="hljs-string"> node-27                                                        </span>|<br>|<span class="hljs-string"> OS-EXT-SRV-ATTR:hypervisor_hostname </span>|<span class="hljs-string"> node-27                                                        </span>|<br>|<span class="hljs-string"> OS-EXT-SRV-ATTR:instance_name       </span>|<span class="hljs-string"> instance-000071aa                                              </span>|<br>|<span class="hljs-string"> OS-EXT-STS:power_state              </span>|<span class="hljs-string"> NOSTATE                                                        </span>|<br>|<span class="hljs-string"> OS-EXT-STS:task_state               </span>|<span class="hljs-string"> None                                                           </span>|<br>|<span class="hljs-string"> OS-EXT-STS:vm_state                 </span>|<span class="hljs-string"> active                                                         </span>|<br>|<span class="hljs-string"> OS-SRV-USG:launched_at              </span>|<span class="hljs-string"> 2018-09-21T05:40:36.000000                                     </span>|<br>|<span class="hljs-string"> OS-SRV-USG:terminated_at            </span>|<span class="hljs-string"> None                                                           </span>|<br>|<span class="hljs-string"> accessIPv4                          </span>|<span class="hljs-string">                                                                </span>|<br>|<span class="hljs-string"> accessIPv6                          </span>|<span class="hljs-string">                                                                </span>|<br>|<span class="hljs-string"> addresses                           </span>|<span class="hljs-string"> vlan_10.122.44.0/23=10.122.45.53                               </span>|<br>|<span class="hljs-string"> config_drive                        </span>|<span class="hljs-string"> True                                                           </span>|<br>|<span class="hljs-string"> created                             </span>|<span class="hljs-string"> 2018-09-21T05:40:31Z                                           </span>|<br>|<span class="hljs-string"> flavor                              </span>|<span class="hljs-string"> 16-64-100 (1cbe4ea1-8a67-4027-afd4-8f31a8b94851)               </span>|<br>|<span class="hljs-string"> hostId                              </span>|<span class="hljs-string"> 2730fa3d62e347ddb67e155f6eed973787a868c82316f7e6ba641b10       </span>|<br>|<span class="hljs-string"> id                                  </span>|<span class="hljs-string"> 86487ef4-cc12-4be6-995e-46f5ac093901                           </span>|<br>|<span class="hljs-string"> image                               </span>|<span class="hljs-string"> lenovo-centos-7-release (b9f8f864-4217-4ac6-a116-62ecfa0fc074) </span>|<br>|<span class="hljs-string"> key_name                            </span>|<span class="hljs-string"> None                                                           </span>|<br>|<span class="hljs-string"> name                                </span>|<span class="hljs-string"> SLP3YM7HRCX                                                    </span>|<br>|<span class="hljs-string"> progress                            </span>|<span class="hljs-string"> 100                                                            </span>|<br>|<span class="hljs-string"> project_id                          </span>|<span class="hljs-string"> e992715df18a417997c068e5f9834b0f                               </span>|<br>|<span class="hljs-string"> properties                          </span>|<span class="hljs-string">                                                                </span>|<br>|<span class="hljs-string"> security_groups                     </span>|<span class="hljs-string"> name=&#x27;default&#x27;                                                 </span>|<br>|<span class="hljs-string"> status                              </span>|<span class="hljs-string"> ACTIVE                                                         </span>|<br>|<span class="hljs-string"> updated                             </span>|<span class="hljs-string"> 2019-10-09T08:31:47Z                                           </span>|<br>|<span class="hljs-string"> user_id                             </span>|<span class="hljs-string"> af518aeb935c4d258f8cb7d302c83797                               </span>|<br>|<span class="hljs-string"> volumes_attached                    </span>|<span class="hljs-string"> id=&#x27;a821856b-409f-4e6e-becd-eb4b2344c7d8&#x27;                      </span>|<br>+-------------------------------------+----------------------------------------------------------------+<br>root<span class="hljs-meta">@node-1:~#</span> mysql -unova -pnova<br>MariaDB [(none)]&gt; select <span class="hljs-symbol">*</span> from nova.instances where uuid=&#x27;86487ef4-cc12-4be6-995e-46f5ac093901&#x27;\G;<br><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span> 1. row <span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><br>              created_at: 2018-09-21 05:40:31<br>              updated_at: 2019-10-09 08:31:47<br>              deleted_at: NULL<br>                      id: 29098<br>             internal_id: NULL<br>                 user_id: af518aeb935c4d258f8cb7d302c83797<br>              project_id: e992715df18a417997c068e5f9834b0f<br>               image_ref: b9f8f864-4217-4ac6-a116-62ecfa0fc074<br>               kernel_id: <br>              ramdisk_id: <br>            launch_index: 0<br>                key_name: NULL<br>                key_data: NULL<br>             power_state: 0<br>                vm_state: active<br>               memory_mb: 65536<br>                   vcpus: 16<br>                hostname: slp3ym7hrcx<br>                    host: node-27<br>               user_data: NULL<br>          reservation_id: r-o8dr8ibn<br>             launched_at: 2018-09-21 05:40:36<br>           terminated_at: NULL<br>            display_name: SLP3YM7HRCX<br>     display_description: SLP3YM7HRCX<br>       availability_zone: no_san<br>                  locked: 0<br>                 os_type: NULL<br>             launched_on: node-33<br>        instance_type_id: 189<br>                 vm_mode: NULL<br>                    uuid: 86487ef4-cc12-4be6-995e-46f5ac093901<br>            architecture: NULL<br>        root_device_name: /dev/vda<br>            access_ip_v4: NULL<br>            access_ip_v6: NULL<br>            config_drive: True<br>              task_state: NULL<br>default_ephemeral_device: NULL<br>     default_swap_device: NULL<br>                progress: 100<br>        auto_disk_config: 0<br>      shutdown_terminate: 0<br>       disable_terminate: 0<br>                 root_gb: 100<br>            ephemeral_gb: 0<br>               cell_name: NULL<br>                    node: node-27<br>                 deleted: 0<br>               locked_by: NULL<br>                 cleaned: 1<br>      ephemeral_key_uuid: NULL<br>1 row in set (0.00 sec)<br><br>ERROR: No query specified<br></code></pre></td></tr></table></figure><p>发现实际instance启动在node-53节点上，但是数据库记录在node-27节点上</p><p>manager.py 捕获到 InstanceNotFound 设置 vm_power_state=NOSTATE</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs python">/usr/lib/python2<span class="hljs-number">.7</span>/dist-packages/nova/compute/manager.py<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">_query_driver_power_state_and_sync</span>(<span class="hljs-params">self, context, db_instance</span>):</span><br>        <span class="hljs-keyword">if</span> db_instance.task_state <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>            LOG.info(_LI(<span class="hljs-string">&quot;During sync_power_state the instance has a &quot;</span><br>                         <span class="hljs-string">&quot;pending task (%(task)s). Skip.&quot;</span>),<br>                     &#123;<span class="hljs-string">&#x27;task&#x27;</span>: db_instance.task_state&#125;, instance=db_instance)<br>            <span class="hljs-keyword">return</span><br>        <span class="hljs-comment"># No pending tasks. Now try to figure out the real vm_power_state.</span><br>        <span class="hljs-keyword">try</span>:<br>            vm_instance = self.driver.get_info(db_instance)<br>            vm_power_state = vm_instance.state<br>        <span class="hljs-keyword">except</span> exception.InstanceNotFound:         <span class="hljs-comment"># 可以看到如果InstanceNotFound</span><br>            vm_power_state = power_state.NOSTATE   <span class="hljs-comment"># power_state设置为NOSTATE</span><br>        <span class="hljs-comment"># Note(maoy): the above get_info call might take a long time,</span><br>        <span class="hljs-comment"># for example, because of a broken libvirt driver.</span><br>        <span class="hljs-keyword">try</span>:<br>            self._sync_instance_power_state(context,<br>                                            db_instance,<br>                                            vm_power_state,<br>                                            use_slave=<span class="hljs-literal">True</span>)<br>        <span class="hljs-keyword">except</span> exception.InstanceNotFound:<br>            <span class="hljs-comment"># NOTE(hanlind): If the instance gets deleted during sync,</span><br>            <span class="hljs-comment"># silently ignore.</span><br>            <span class="hljs-keyword">pass</span><br></code></pre></td></tr></table></figure><h3 id="得到原因"><a href="#得到原因" class="headerlink" title="得到原因"></a>得到原因</h3><p>由于之前 migrate ERROR 导致 instance 实际启动的节点和数据库记录的节点不一致，comoute 通过 manager.py 捕获到 InstanceNotFound， 所以把 vm_power_state 状态置为 NOSTATE</p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>更新数据库，将数据库中的instance对应的host、node更新成实际instance启动的节点信息。硬重启虚拟机</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">root<span class="hljs-meta">@node-1:~#</span> mysql -unova -pnova<br>MariaDB [(none)]&gt; update nova.instances set host=&#x27;node-53&#x27; where uuid=&#x27;86487ef4-cc12-4be6-995e-46f5ac093901&#x27;\G;<br>Query OK, 1 row affected (0.00 sec)<br>Rows matched: 1  Changed: 1  Warnings: 0<br><br>ERROR: No query specified<br><br>MariaDB [(none)]&gt; update nova.instances set node=&#x27;node-53&#x27; where uuid=&#x27;86487ef4-cc12-4be6-995e-46f5ac093901&#x27;\G;<br>Query OK, 1 row affected (0.00 sec)<br>Rows matched: 1  Changed: 1  Warnings: 0<br><br>ERROR: No query specified<br><br>MariaDB [(none)]&gt; select <span class="hljs-symbol">*</span> from nova.instances where uuid=&#x27;86487ef4-cc12-4be6-995e-46f5ac093901&#x27;\G;<br><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span> 1. row <span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><br>              created_at: 2018-09-21 05:40:31<br>              updated_at: 2019-10-09 08:31:47<br>              deleted_at: NULL<br>                      id: 29098<br>             internal_id: NULL<br>                 user_id: af518aeb935c4d258f8cb7d302c83797<br>              project_id: e992715df18a417997c068e5f9834b0f<br>               image_ref: b9f8f864-4217-4ac6-a116-62ecfa0fc074<br>               kernel_id: <br>              ramdisk_id: <br>            launch_index: 0<br>                key_name: NULL<br>                key_data: NULL<br>             power_state: 0<br>                vm_state: active<br>               memory_mb: 65536<br>                   vcpus: 16<br>                hostname: slp3ym7hrcx<br>                    host: node-53<br>               user_data: NULL<br>          reservation_id: r-o8dr8ibn<br>             launched_at: 2018-09-21 05:40:36<br>           terminated_at: NULL<br>            display_name: SLP3YM7HRCX<br>     display_description: SLP3YM7HRCX<br>       availability_zone: no_san<br>                  locked: 0<br>                 os_type: NULL<br>             launched_on: node-33<br>        instance_type_id: 189<br>                 vm_mode: NULL<br>                    uuid: 86487ef4-cc12-4be6-995e-46f5ac093901<br>            architecture: NULL<br>        root_device_name: /dev/vda<br>            access_ip_v4: NULL<br>            access_ip_v6: NULL<br>            config_drive: True<br>              task_state: NULL<br>default_ephemeral_device: NULL<br>     default_swap_device: NULL<br>                progress: 100<br>        auto_disk_config: 0<br>      shutdown_terminate: 0<br>       disable_terminate: 0<br>                 root_gb: 100<br>            ephemeral_gb: 0<br>               cell_name: NULL<br>                    node: node-53<br>                 deleted: 0<br>               locked_by: NULL<br>                 cleaned: 1<br>      ephemeral_key_uuid: NULL<br>1 row in set (0.00 sec)<br><br>ERROR: No query specified<br><br>MariaDB [(none)]&gt; exit<br>Bye<br><span class="hljs-comment"># openstack server show 86487ef4-cc12-4be6-995e-46f5ac093901</span><br>+-------------------------------------+----------------------------------------------------------------+<br>|<span class="hljs-string"> Field                               </span>|<span class="hljs-string"> Value                                                          </span>|<br>+-------------------------------------+----------------------------------------------------------------+<br>|<span class="hljs-string"> OS-DCF:diskConfig                   </span>|<span class="hljs-string"> MANUAL                                                         </span>|<br>|<span class="hljs-string"> OS-EXT-AZ:availability_zone         </span>|<span class="hljs-string"> no_san                                                         </span>|<br>|<span class="hljs-string"> OS-EXT-SRV-ATTR:host                </span>|<span class="hljs-string"> node-53                                                        </span>|<br>|<span class="hljs-string"> OS-EXT-SRV-ATTR:hypervisor_hostname </span>|<span class="hljs-string"> node-53                                                        </span>|<br>|<span class="hljs-string"> OS-EXT-SRV-ATTR:instance_name       </span>|<span class="hljs-string"> instance-000071aa                                              </span>|<br>|<span class="hljs-string"> OS-EXT-STS:power_state              </span>|<span class="hljs-string"> NOSTATE                                                        </span>|<br>|<span class="hljs-string"> OS-EXT-STS:task_state               </span>|<span class="hljs-string"> None                                                           </span>|<br>|<span class="hljs-string"> OS-EXT-STS:vm_state                 </span>|<span class="hljs-string"> active                                                         </span>|<br>|<span class="hljs-string"> OS-SRV-USG:launched_at              </span>|<span class="hljs-string"> 2018-09-21T05:40:36.000000                                     </span>|<br>|<span class="hljs-string"> OS-SRV-USG:terminated_at            </span>|<span class="hljs-string"> None                                                           </span>|<br>|<span class="hljs-string"> accessIPv4                          </span>|<span class="hljs-string">                                                                </span>|<br>|<span class="hljs-string"> accessIPv6                          </span>|<span class="hljs-string">                                                                </span>|<br>|<span class="hljs-string"> addresses                           </span>|<span class="hljs-string"> vlan_10.122.44.0/23=10.122.45.53                               </span>|<br>|<span class="hljs-string"> config_drive                        </span>|<span class="hljs-string"> True                                                           </span>|<br>|<span class="hljs-string"> created                             </span>|<span class="hljs-string"> 2018-09-21T05:40:31Z                                           </span>|<br>|<span class="hljs-string"> flavor                              </span>|<span class="hljs-string"> 16-64-100 (1cbe4ea1-8a67-4027-afd4-8f31a8b94851)               </span>|<br>|<span class="hljs-string"> hostId                              </span>|<span class="hljs-string"> f5274ebe433297bc376a4ce09151591735a04d2b6762280866de2729       </span>|<br>|<span class="hljs-string"> id                                  </span>|<span class="hljs-string"> 86487ef4-cc12-4be6-995e-46f5ac093901                           </span>|<br>|<span class="hljs-string"> image                               </span>|<span class="hljs-string"> lenovo-centos-7-release (b9f8f864-4217-4ac6-a116-62ecfa0fc074) </span>|<br>|<span class="hljs-string"> key_name                            </span>|<span class="hljs-string"> None                                                           </span>|<br>|<span class="hljs-string"> name                                </span>|<span class="hljs-string"> SLP3YM7HRCX                                                    </span>|<br>|<span class="hljs-string"> progress                            </span>|<span class="hljs-string"> 100                                                            </span>|<br>|<span class="hljs-string"> project_id                          </span>|<span class="hljs-string"> e992715df18a417997c068e5f9834b0f                               </span>|<br>|<span class="hljs-string"> properties                          </span>|<span class="hljs-string">                                                                </span>|<br>|<span class="hljs-string"> security_groups                     </span>|<span class="hljs-string"> name=&#x27;default&#x27;                                                 </span>|<br>|<span class="hljs-string"> status                              </span>|<span class="hljs-string"> ACTIVE                                                         </span>|<br>|<span class="hljs-string"> updated                             </span>|<span class="hljs-string"> 2019-10-09T08:31:47Z                                           </span>|<br>|<span class="hljs-string"> user_id                             </span>|<span class="hljs-string"> af518aeb935c4d258f8cb7d302c83797                               </span>|<br>|<span class="hljs-string"> volumes_attached                    </span>|<span class="hljs-string"> id=&#x27;a821856b-409f-4e6e-becd-eb4b2344c7d8&#x27;                      </span>|<br>+-------------------------------------+----------------------------------------------------------------+<br><br><br><br><span class="hljs-comment"># nova reboot --hard 86487ef4-cc12-4be6-995e-46f5ac093901</span><br><br><span class="hljs-comment"># openstack  server show 86487ef4-cc12-4be6-995e-46f5ac093901</span><br>+-------------------------------------+----------------------------------------------------------------+<br>|<span class="hljs-string"> Field                               </span>|<span class="hljs-string"> Value                                                          </span>|<br>+-------------------------------------+----------------------------------------------------------------+<br>|<span class="hljs-string"> OS-DCF:diskConfig                   </span>|<span class="hljs-string"> MANUAL                                                         </span>|<br>|<span class="hljs-string"> OS-EXT-AZ:availability_zone         </span>|<span class="hljs-string"> no_san                                                         </span>|<br>|<span class="hljs-string"> OS-EXT-SRV-ATTR:host                </span>|<span class="hljs-string"> node-53                                                        </span>|<br>|<span class="hljs-string"> OS-EXT-SRV-ATTR:hypervisor_hostname </span>|<span class="hljs-string"> node-53                                                        </span>|<br>|<span class="hljs-string"> OS-EXT-SRV-ATTR:instance_name       </span>|<span class="hljs-string"> instance-000071aa                                              </span>|<br>|<span class="hljs-string"> OS-EXT-STS:power_state              </span>|<span class="hljs-string"> Running                                                        </span>|<br>|<span class="hljs-string"> OS-EXT-STS:task_state               </span>|<span class="hljs-string"> None                                                           </span>|<br>|<span class="hljs-string"> OS-EXT-STS:vm_state                 </span>|<span class="hljs-string"> active                                                         </span>|<br>|<span class="hljs-string"> OS-SRV-USG:launched_at              </span>|<span class="hljs-string"> 2018-09-21T05:40:36.000000                                     </span>|<br>|<span class="hljs-string"> OS-SRV-USG:terminated_at            </span>|<span class="hljs-string"> None                                                           </span>|<br>|<span class="hljs-string"> accessIPv4                          </span>|<span class="hljs-string">                                                                </span>|<br>|<span class="hljs-string"> accessIPv6                          </span>|<span class="hljs-string">                                                                </span>|<br>|<span class="hljs-string"> addresses                           </span>|<span class="hljs-string"> vlan_10.122.44.0/23=10.122.45.53                               </span>|<br>|<span class="hljs-string"> config_drive                        </span>|<span class="hljs-string"> True                                                           </span>|<br>|<span class="hljs-string"> created                             </span>|<span class="hljs-string"> 2018-09-21T05:40:31Z                                           </span>|<br>|<span class="hljs-string"> flavor                              </span>|<span class="hljs-string"> 16-64-100 (1cbe4ea1-8a67-4027-afd4-8f31a8b94851)               </span>|<br>|<span class="hljs-string"> hostId                              </span>|<span class="hljs-string"> 4bfe001f6fa4d443f283121b56139ef8bfbff47be8106387cc19edc6       </span>|<br>|<span class="hljs-string"> id                                  </span>|<span class="hljs-string"> 86487ef4-cc12-4be6-995e-46f5ac093901                           </span>|<br>|<span class="hljs-string"> image                               </span>|<span class="hljs-string"> lenovo-centos-7-release (b9f8f864-4217-4ac6-a116-62ecfa0fc074) </span>|<br>|<span class="hljs-string"> key_name                            </span>|<span class="hljs-string"> None                                                           </span>|<br>|<span class="hljs-string"> name                                </span>|<span class="hljs-string"> SLP3YM7HRCX                                                    </span>|<br>|<span class="hljs-string"> progress                            </span>|<span class="hljs-string"> 0                                                              </span>|<br>|<span class="hljs-string"> project_id                          </span>|<span class="hljs-string"> e992715df18a417997c068e5f9834b0f                               </span>|<br>|<span class="hljs-string"> properties                          </span>|<span class="hljs-string">                                                                </span>|<br>|<span class="hljs-string"> security_groups                     </span>|<span class="hljs-string"> name=&#x27;default&#x27;                                                 </span>|<br>|<span class="hljs-string"> status                              </span>|<span class="hljs-string"> ACTIVE                                                         </span>|<br>|<span class="hljs-string"> updated                             </span>|<span class="hljs-string"> 2019-10-09T10:04:19Z                                           </span>|<br>|<span class="hljs-string"> user_id                             </span>|<span class="hljs-string"> af518aeb935c4d258f8cb7d302c83797                               </span>|<br>|<span class="hljs-string"> volumes_attached                    </span>|<span class="hljs-string"> id=&#x27;a821856b-409f-4e6e-becd-eb4b2344c7d8&#x27;                      </span>|<br>|<span class="hljs-string">                                     </span>|<span class="hljs-string"> id=&#x27;ff7d2dad-1954-4906-ae18-95c76a09b442&#x27;                      </span>|<br>+-------------------------------------+----------------------------------------------------------------+<br><br><span class="hljs-comment"># openstack server migrate --live node-89 86487ef4-cc12-4be6-995e-46f5ac093901</span><br><br><span class="hljs-comment"># openstack  server show 86487ef4-cc12-4be6-995e-46f5ac093901</span><br>+-------------------------------------+----------------------------------------------------------------+<br>|<span class="hljs-string"> Field                               </span>|<span class="hljs-string"> Value                                                          </span>|<br>+-------------------------------------+----------------------------------------------------------------+<br>|<span class="hljs-string"> OS-DCF:diskConfig                   </span>|<span class="hljs-string"> MANUAL                                                         </span>|<br>|<span class="hljs-string"> OS-EXT-AZ:availability_zone         </span>|<span class="hljs-string"> Contingency                                                    </span>|<br>|<span class="hljs-string"> OS-EXT-SRV-ATTR:host                </span>|<span class="hljs-string"> node-89                                                        </span>|<br>|<span class="hljs-string"> OS-EXT-SRV-ATTR:hypervisor_hostname </span>|<span class="hljs-string"> node-89                                                        </span>|<br>|<span class="hljs-string"> OS-EXT-SRV-ATTR:instance_name       </span>|<span class="hljs-string"> instance-000071aa                                              </span>|<br>|<span class="hljs-string"> OS-EXT-STS:power_state              </span>|<span class="hljs-string"> Running                                                        </span>|<br>|<span class="hljs-string"> OS-EXT-STS:task_state               </span>|<span class="hljs-string"> None                                                           </span>|<br>|<span class="hljs-string"> OS-EXT-STS:vm_state                 </span>|<span class="hljs-string"> active                                                         </span>|<br>|<span class="hljs-string"> OS-SRV-USG:launched_at              </span>|<span class="hljs-string"> 2018-09-21T05:40:36.000000                                     </span>|<br>|<span class="hljs-string"> OS-SRV-USG:terminated_at            </span>|<span class="hljs-string"> None                                                           </span>|<br>|<span class="hljs-string"> accessIPv4                          </span>|<span class="hljs-string">                                                                </span>|<br>|<span class="hljs-string"> accessIPv6                          </span>|<span class="hljs-string">                                                                </span>|<br>|<span class="hljs-string"> addresses                           </span>|<span class="hljs-string"> vlan_10.122.44.0/23=10.122.45.53                               </span>|<br>|<span class="hljs-string"> config_drive                        </span>|<span class="hljs-string"> True                                                           </span>|<br>|<span class="hljs-string"> created                             </span>|<span class="hljs-string"> 2018-09-21T05:40:31Z                                           </span>|<br>|<span class="hljs-string"> flavor                              </span>|<span class="hljs-string"> 16-64-100 (1cbe4ea1-8a67-4027-afd4-8f31a8b94851)               </span>|<br>|<span class="hljs-string"> hostId                              </span>|<span class="hljs-string"> 4bfe001f6fa4d443f283121b56139ef8bfbff47be8106387cc19edc6       </span>|<br>|<span class="hljs-string"> id                                  </span>|<span class="hljs-string"> 86487ef4-cc12-4be6-995e-46f5ac093901                           </span>|<br>|<span class="hljs-string"> image                               </span>|<span class="hljs-string"> lenovo-centos-7-release (b9f8f864-4217-4ac6-a116-62ecfa0fc074) </span>|<br>|<span class="hljs-string"> key_name                            </span>|<span class="hljs-string"> None                                                           </span>|<br>|<span class="hljs-string"> name                                </span>|<span class="hljs-string"> SLP3YM7HRCX                                                    </span>|<br>|<span class="hljs-string"> progress                            </span>|<span class="hljs-string"> 0                                                              </span>|<br>|<span class="hljs-string"> project_id                          </span>|<span class="hljs-string"> e992715df18a417997c068e5f9834b0f                               </span>|<br>|<span class="hljs-string"> properties                          </span>|<span class="hljs-string">                                                                </span>|<br>|<span class="hljs-string"> security_groups                     </span>|<span class="hljs-string"> name=&#x27;default&#x27;                                                 </span>|<br>|<span class="hljs-string"> status                              </span>|<span class="hljs-string"> ACTIVE                                                         </span>|<br>|<span class="hljs-string"> updated                             </span>|<span class="hljs-string"> 2019-10-09T10:04:19Z                                           </span>|<br>|<span class="hljs-string"> user_id                             </span>|<span class="hljs-string"> af518aeb935c4d258f8cb7d302c83797                               </span>|<br>|<span class="hljs-string"> volumes_attached                    </span>|<span class="hljs-string"> id=&#x27;a821856b-409f-4e6e-becd-eb4b2344c7d8&#x27;                      </span>|<br>|<span class="hljs-string">                                     </span>|<span class="hljs-string"> id=&#x27;ff7d2dad-1954-4906-ae18-95c76a09b442&#x27;                      </span>|<br>+-------------------------------------+----------------------------------------------------------------+<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;openstack-上的instance运行正常，但是power-state状态为NOSTATE，导致instance热迁移失败&quot;&gt;&lt;a href=&quot;#openstack-上的instance运行正常，但是power-state状态为NOSTATE，导致insta</summary>
      
    
    
    
    <category term="openstack" scheme="https://www.lijiawang.org/categories/openstack/"/>
    
    
    <category term="openstack" scheme="https://www.lijiawang.org/tags/openstack/"/>
    
  </entry>
  
  <entry>
    <title>使用kubeadm升级kubernetes集群</title>
    <link href="https://www.lijiawang.org/posts/%E4%BD%BF%E7%94%A8kubeadm%E5%8D%87%E7%BA%A7kubernetes%E9%9B%86%E7%BE%A4/"/>
    <id>https://www.lijiawang.org/posts/%E4%BD%BF%E7%94%A8kubeadm%E5%8D%87%E7%BA%A7kubernetes%E9%9B%86%E7%BE%A4/</id>
    <published>2019-09-23T14:38:14.000Z</published>
    <updated>2021-01-04T05:44:18.875Z</updated>
    
    <content type="html"><![CDATA[<h3 id="kubeadm升级k8s集群-v1-15-3-to-v1-16-0版"><a href="#kubeadm升级k8s集群-v1-15-3-to-v1-16-0版" class="headerlink" title="kubeadm升级k8s集群(v1.15.3 to v1.16.0版)"></a><code>kubeadm</code>升级<code>k8s</code>集群(<code>v1.15.3 to v1.16.0</code>版)</h3><blockquote><p><code>Kubernetes</code>在2019年9月18日发布了年度的第三个版本<code>1.16</code>,本篇文章介绍使用<code>kubeadm</code>升级现在有的集群到<code>v1.16.0</code>。</p></blockquote><h3 id="Kubernetes-1-16版本的发布徽章"><a href="#Kubernetes-1-16版本的发布徽章" class="headerlink" title="Kubernetes 1.16版本的发布徽章"></a><code>Kubernetes 1.16</code>版本的发布徽章</h3><p><img src="https://ljw.howieli.cn/blog/2019-9-23/Kubernetes%201.16%E7%89%88%E6%9C%AC%E7%9A%84%E5%8F%91%E5%B8%83%E5%BE%BD%E7%AB%A0.jpg" alt="Kubernetes 1.16版本的发布徽章"></p><h3 id="查看k8s集群版本"><a href="#查看k8s集群版本" class="headerlink" title="查看k8s集群版本"></a>查看<code>k8s</code>集群版本</h3><p>查看当前的<code>k8s</code>版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@k8s-master ~]# kubectl get nodes<br>NAME         STATUS   ROLES    AGE   VERSION<br>k8s-master   Ready    master   20d   v1.15.3<br>k8s-node1    Ready    &lt;none&gt;   20d   v1.15.3<br>k8s-node2    Ready    &lt;none&gt;   20d   v1.15.3<br>k8s-node3    Ready    &lt;none&gt;   20d   v1.15.3<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@k8s-master ~]# kubeadm version<br>kubeadm version: &amp;version.Info&#123;Major:&quot;1&quot;, Minor:&quot;15&quot;, GitVersion:&quot;v1.15.3&quot;, GitCommit:&quot;2d3c76f9091b6bec110a5e63777c332469e0cba2&quot;, GitTreeState:&quot;clean&quot;, BuildDate:&quot;2019-08-19T11:11:18Z&quot;, GoVersion:&quot;go1.12.9&quot;, Compiler:&quot;gc&quot;, Platform:&quot;linux/amd64&quot;&#125;<br></code></pre></td></tr></table></figure><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">[root@k8s-<span class="hljs-keyword">master</span> <span class="hljs-title">~]# kubelet</span> --<span class="hljs-keyword">version</span><br>Kubernetes v1.<span class="hljs-number">15.3</span><br><br><br>[root@k8s-<span class="hljs-keyword">master</span> <span class="hljs-title">~]# systemctl</span> status kubelet.service |grep Active<br>   Active: active (running) since Fri <span class="hljs-number">2019</span>-<span class="hljs-number">08</span>-<span class="hljs-number">30</span> <span class="hljs-number">07</span>:<span class="hljs-number">26</span>:<span class="hljs-number">33</span> EDT; <span class="hljs-number">3</span> weeks <span class="hljs-number">0</span> days ago<br></code></pre></td></tr></table></figure><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-selector-attr">[root@k8s-master yum.repos.d]</span># <span class="hljs-selector-tag">kubectl</span> <span class="hljs-selector-tag">version</span><br><span class="hljs-selector-tag">Client</span> <span class="hljs-selector-tag">Version</span>: <span class="hljs-selector-tag">version</span><span class="hljs-selector-class">.Info</span>&#123;<span class="hljs-attribute">Major</span>:<span class="hljs-string">&quot;1&quot;</span>, <span class="hljs-attribute">Minor</span>:<span class="hljs-string">&quot;15&quot;</span>, <span class="hljs-attribute">GitVersion</span>:<span class="hljs-string">&quot;v1.15.3&quot;</span>, <span class="hljs-attribute">GitCommit</span>:<span class="hljs-string">&quot;2d3c76f9091b6bec110a5e63777c332469e0cba2&quot;</span>, <span class="hljs-attribute">GitTreeState</span>:<span class="hljs-string">&quot;clean&quot;</span>, <span class="hljs-attribute">BuildDate</span>:<span class="hljs-string">&quot;2019-08-19T11:13:54Z&quot;</span>, <span class="hljs-attribute">GoVersion</span>:<span class="hljs-string">&quot;go1.12.9&quot;</span>, <span class="hljs-attribute">Compiler</span>:<span class="hljs-string">&quot;gc&quot;</span>, <span class="hljs-attribute">Platform</span>:<span class="hljs-string">&quot;linux/amd64&quot;</span>&#125;<br><span class="hljs-selector-tag">Server</span> <span class="hljs-selector-tag">Version</span>: <span class="hljs-selector-tag">version</span><span class="hljs-selector-class">.Info</span>&#123;<span class="hljs-attribute">Major</span>:<span class="hljs-string">&quot;1&quot;</span>, <span class="hljs-attribute">Minor</span>:<span class="hljs-string">&quot;15&quot;</span>, <span class="hljs-attribute">GitVersion</span>:<span class="hljs-string">&quot;v1.15.3&quot;</span>, <span class="hljs-attribute">GitCommit</span>:<span class="hljs-string">&quot;2d3c76f9091b6bec110a5e63777c332469e0cba2&quot;</span>, <span class="hljs-attribute">GitTreeState</span>:<span class="hljs-string">&quot;clean&quot;</span>, <span class="hljs-attribute">BuildDate</span>:<span class="hljs-string">&quot;2019-08-19T11:05:50Z&quot;</span>, <span class="hljs-attribute">GoVersion</span>:<span class="hljs-string">&quot;go1.12.9&quot;</span>, <span class="hljs-attribute">Compiler</span>:<span class="hljs-string">&quot;gc&quot;</span>, <span class="hljs-attribute">Platform</span>:<span class="hljs-string">&quot;linux/amd64&quot;</span>&#125;<br></code></pre></td></tr></table></figure><h3 id="查看版本支持"><a href="#查看版本支持" class="headerlink" title="查看版本支持"></a>查看版本支持</h3><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs llvm">[root<span class="hljs-title">@k8s-master</span> yum.repos.d]# yum list kubelet kubeadm kubectl<br>Loaded plugins: fastestmirror<span class="hljs-punctuation">,</span> langpacks<br>Loading mirror speeds from cached hostfile<br> * base: mirrors.aliyun.com<br> * extras: mirrors.aliyun.com<br> * updates: mirrors.aliyun.com<br>Installed Packages<br>kubeadm.<span class="hljs-keyword">x</span><span class="hljs-number">86</span>_<span class="hljs-number">64</span>                                                        <span class="hljs-number">1.15</span>.<span class="hljs-number">3</span><span class="hljs-number">-0</span>                                                        <span class="hljs-title">@kubernetes</span><br>kubectl.<span class="hljs-keyword">x</span><span class="hljs-number">86</span>_<span class="hljs-number">64</span>                                                        <span class="hljs-number">1.15</span>.<span class="hljs-number">3</span><span class="hljs-number">-0</span>                                                        <span class="hljs-title">@kubernetes</span><br>kubelet.<span class="hljs-keyword">x</span><span class="hljs-number">86</span>_<span class="hljs-number">64</span>                                                        <span class="hljs-number">1.15</span>.<span class="hljs-number">3</span><span class="hljs-number">-0</span>                                                        <span class="hljs-title">@kubernetes</span><br>Available Packages<br>kubeadm.<span class="hljs-keyword">x</span><span class="hljs-number">86</span>_<span class="hljs-number">64</span>                                                        <span class="hljs-number">1.16</span>.<span class="hljs-number">0</span><span class="hljs-number">-0</span>                                                        kubernetes <br>kubectl.<span class="hljs-keyword">x</span><span class="hljs-number">86</span>_<span class="hljs-number">64</span>                                                        <span class="hljs-number">1.16</span>.<span class="hljs-number">0</span><span class="hljs-number">-0</span>                                                        kubernetes <br>kubelet.<span class="hljs-keyword">x</span><span class="hljs-number">86</span>_<span class="hljs-number">64</span>                                                        <span class="hljs-number">1.16</span>.<span class="hljs-number">0</span><span class="hljs-number">-0</span>                                                        kubernetes <br></code></pre></td></tr></table></figure><h3 id="升级kubelet-kubeadm-kubectl版本到1-16-0-每个节点都执行"><a href="#升级kubelet-kubeadm-kubectl版本到1-16-0-每个节点都执行" class="headerlink" title="升级kubelet kubeadm kubectl版本到1.16.0(每个节点都执行)"></a>升级<code>kubelet</code> <code>kubeadm</code> <code>kubectl</code>版本到<code>1.16.0</code>(每个节点都执行)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@k8s-master ~]# yum install -y kubelet kubeadm kubectl<br><span class="hljs-meta">#</span><span class="bash"> systemctl daemon-reload &amp;&amp; systemctl restart kubelet &amp;&amp; systemctl status kubelet</span><br><br><br>[root@k8s-master ~]# kubectl version<br>Client Version: version.Info&#123;Major:&quot;1&quot;, Minor:&quot;16&quot;, GitVersion:&quot;v1.16.0&quot;, GitCommit:&quot;2bd9643cee5b3b3a5ecbd3af49d09018f0773c77&quot;, GitTreeState:&quot;clean&quot;, BuildDate:&quot;2019-09-18T14:36:53Z&quot;, GoVersion:&quot;go1.12.9&quot;, Compiler:&quot;gc&quot;, Platform:&quot;linux/amd64&quot;&#125;<br>Server Version: version.Info&#123;Major:&quot;1&quot;, Minor:&quot;15&quot;, GitVersion:&quot;v1.15.3&quot;, GitCommit:&quot;2d3c76f9091b6bec110a5e63777c332469e0cba2&quot;, GitTreeState:&quot;clean&quot;, BuildDate:&quot;2019-08-19T11:05:50Z&quot;, GoVersion:&quot;go1.12.9&quot;, Compiler:&quot;gc&quot;, Platform:&quot;linux/amd64&quot;&#125;<br>[root@k8s-master ~]# kubelet --version<br>Kubernetes v1.16.0<br>[root@k8s-master ~]# kubeadm version<br>kubeadm version: &amp;version.Info&#123;Major:&quot;1&quot;, Minor:&quot;16&quot;, GitVersion:&quot;v1.16.0&quot;, GitCommit:&quot;2bd9643cee5b3b3a5ecbd3af49d09018f0773c77&quot;, GitTreeState:&quot;clean&quot;, BuildDate:&quot;2019-09-18T14:34:01Z&quot;, GoVersion:&quot;go1.12.9&quot;, Compiler:&quot;gc&quot;, Platform:&quot;linux/amd64&quot;&#125;<br><br></code></pre></td></tr></table></figure><h3 id="升级k8s集群"><a href="#升级k8s集群" class="headerlink" title="升级k8s集群"></a>升级<code>k8s</code>集群</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@k8s-master ~]# kubectl get nodes<br>NAME         STATUS   ROLES    AGE   VERSION<br>k8s-master   Ready    master   21d   v1.15.3<br>k8s-node1    Ready    &lt;none&gt;   20d   v1.15.3<br>k8s-node2    Ready    &lt;none&gt;   20d   v1.15.3<br>k8s-node3    Ready    &lt;none&gt;   20d   v1.15.3<br></code></pre></td></tr></table></figure><h3 id="升级集群"><a href="#升级集群" class="headerlink" title="升级集群"></a>升级集群</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@k8s-master ~]# kubeadm config print init-defaults &gt; kubeadm1.16.yaml<br><br>[root@k8s-master ~]# cat kubeadm1.16.yaml <br>apiVersion: kubeadm.k8s.io/v1beta2<br>bootstrapTokens:<br>- groups:<br>  - system:bootstrappers:kubeadm:default-node-token<br>  token: abcdef.0123456789abcdef<br>  ttl: 24h0m0s<br>  usages:<br>  - signing<br>  - authentication<br>kind: InitConfiguration<br>localAPIEndpoint:<br>  advertiseAddress: 10.122.17.200<br>  bindPort: 6443<br>nodeRegistration:<br>  criSocket: /var/run/dockershim.sock<br>  name: k8s-master<br>  taints:<br>  - effect: NoSchedule<br>    key: node-role.kubernetes.io/master<br>---<br>apiServer:<br>  timeoutForControlPlane: 4m0s<br>apiVersion: kubeadm.k8s.io/v1beta2<br>certificatesDir: /etc/kubernetes/pki<br>clusterName: kubernetes<br>controllerManager: &#123;&#125;<br>dns:<br>  type: CoreDNS<br>etcd:<br>  local:<br>    dataDir: /var/lib/etcd<br>imageRepository: registry.aliyuncs.com/google_containers<br>kind: ClusterConfiguration<br>kubernetesVersion: v1.16.0<br>networking:<br>  dnsDomain: cluster.local<br>  podSubnet: 192.168.0.0/16<br>  serviceSubnet: 10.96.0.0/12<br>scheduler: &#123;&#125;<br>---<br>apiVersion: kubeproxy.config.k8s.io/v1alpha1<br>kind: KubeProxyConfiguration<br>mode: ipvs<br><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@k8s-master ~]# kubeadm upgrade apply --config kubeadm1.16.yaml<br><br><br>.......<br>.......<br>.......<br>[addons] Applied essential addon: CoreDNS<br>[addons] Applied essential addon: kube-proxy<br><br>[upgrade/successful] SUCCESS! Your cluster was upgraded to &quot;v1.16.0&quot;. Enjoy!<br><br>[upgrade/kubelet] Now that your control plane is upgraded, please proceed with upgrading your kubelets if you haven&#x27;t already done so.<br><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@k8s-master ~]# kubectl version<br>Client Version: version.Info&#123;Major:&quot;1&quot;, Minor:&quot;16&quot;, GitVersion:&quot;v1.16.0&quot;, GitCommit:&quot;2bd9643cee5b3b3a5ecbd3af49d09018f0773c77&quot;, GitTreeState:&quot;clean&quot;, BuildDate:&quot;2019-09-18T14:36:53Z&quot;, GoVersion:&quot;go1.12.9&quot;, Compiler:&quot;gc&quot;, Platform:&quot;linux/amd64&quot;&#125;<br>Server Version: version.Info&#123;Major:&quot;1&quot;, Minor:&quot;16&quot;, GitVersion:&quot;v1.16.0&quot;, GitCommit:&quot;2bd9643cee5b3b3a5ecbd3af49d09018f0773c77&quot;, GitTreeState:&quot;clean&quot;, BuildDate:&quot;2019-09-18T14:27:17Z&quot;, GoVersion:&quot;go1.12.9&quot;, Compiler:&quot;gc&quot;, Platform:&quot;linux/amd64&quot;&#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@k8s-node1 ~]# yum clean all<br>[root@k8s-node1 ~]# yum install -y kubelet kubeadm kubectl<br><br>systemctl daemon-reload &amp;&amp; systemctl restart kubelet &amp;&amp; systemctl status kubelet<br><br><br><br>[root@k8s-node1 ~]# kubectl version<br>Client Version: version.Info&#123;Major:&quot;1&quot;, Minor:&quot;16&quot;, GitVersion:&quot;v1.16.0&quot;, GitCommit:&quot;2bd9643cee5b3b3a5ecbd3af49d09018f0773c77&quot;, GitTreeState:&quot;clean&quot;, BuildDate:&quot;2019-09-18T14:36:53Z&quot;, GoVersion:&quot;go1.12.9&quot;, Compiler:&quot;gc&quot;, Platform:&quot;linux/amd64&quot;&#125;<br>The connection to the server localhost:8080 was refused - did you specify the right host or port?<br>[root@k8s-node1 ~]# kubelet --version<br>Kubernetes v1.16.0<br>[root@k8s-node1 ~]# kubeadm version<br>kubeadm version: &amp;version.Info&#123;Major:&quot;1&quot;, Minor:&quot;16&quot;, GitVersion:&quot;v1.16.0&quot;, GitCommit:&quot;2bd9643cee5b3b3a5ecbd3af49d09018f0773c77&quot;, GitTreeState:&quot;clean&quot;, BuildDate:&quot;2019-09-18T14:34:01Z&quot;, GoVersion:&quot;go1.12.9&quot;, Compiler:&quot;gc&quot;, Platform:&quot;linux/amd64&quot;&#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@k8s-master ~]# kubectl version<br>Client Version: version.Info&#123;Major:&quot;1&quot;, Minor:&quot;16&quot;, GitVersion:&quot;v1.16.0&quot;, GitCommit:&quot;2bd9643cee5b3b3a5ecbd3af49d09018f0773c77&quot;, GitTreeState:&quot;clean&quot;, BuildDate:&quot;2019-09-18T14:36:53Z&quot;, GoVersion:&quot;go1.12.9&quot;, Compiler:&quot;gc&quot;, Platform:&quot;linux/amd64&quot;&#125;<br>Server Version: version.Info&#123;Major:&quot;1&quot;, Minor:&quot;16&quot;, GitVersion:&quot;v1.16.0&quot;, GitCommit:&quot;2bd9643cee5b3b3a5ecbd3af49d09018f0773c77&quot;, GitTreeState:&quot;clean&quot;, BuildDate:&quot;2019-09-18T14:27:17Z&quot;, GoVersion:&quot;go1.12.9&quot;, Compiler:&quot;gc&quot;, Platform:&quot;linux/amd64&quot;&#125;<br><br><br><br>[root@k8s-master ~]# kubectl get nodes<br>NAME         STATUS   ROLES    AGE   VERSION<br>k8s-master   Ready    master   21d   v1.16.0<br>k8s-node1    Ready    &lt;none&gt;   21d   v1.16.0<br>k8s-node2    Ready    &lt;none&gt;   21d   v1.16.0<br>k8s-node3    Ready    &lt;none&gt;   21d   v1.16.0<br><br><br>[root@k8s-master ~]# kubectl get pod -A<br>NAMESPACE       NAME                                        READY   STATUS    RESTARTS   AGE<br>default         curl-6bf6db5c4f-dqw9x                       1/1     Running   2          20d<br>ingress-nginx   nginx-ingress-controller-6956498fcf-jkzbs   1/1     Running   1          16d<br>kube-system     calico-kube-controllers-65b8787765-hx9cr    1/1     Running   1          21d<br>kube-system     calico-node-2rlsz                           1/1     Running   1          21d<br>kube-system     calico-node-5vz46                           1/1     Running   1          21d<br>kube-system     calico-node-6szsd                           1/1     Running   1          21d<br>kube-system     calico-node-s5nmr                           1/1     Running   1          21d<br>kube-system     calicoctl                                   1/1     Running   1          20d<br>kube-system     coredns-58cc8c89f4-cnl45                    1/1     Running   1          26m<br>kube-system     coredns-58cc8c89f4-nj8hr                    1/1     Running   1          9m4s<br>kube-system     etcd-k8s-master                             1/1     Running   0          6m35s<br>kube-system     kube-apiserver-k8s-master                   1/1     Running   0          6m30s<br>kube-system     kube-controller-manager-k8s-master          1/1     Running   0          6m35s<br>kube-system     kube-proxy-52mbf                            1/1     Running   1          26m<br>kube-system     kube-proxy-gf75r                            1/1     Running   1          25m<br>kube-system     kube-proxy-hbvjf                            1/1     Running   1          26m<br>kube-system     kube-proxy-zppdf                            1/1     Running   1          26m<br>kube-system     kube-scheduler-k8s-master                   1/1     Running   0          6m31s<br>kube-system     kubernetes-dashboard-5dc4c54b55-c7sv2       1/1     Running   1          20d<br><br><br>[root@k8s-master ~]# kubectl get pod<br>NAME                    READY   STATUS    RESTARTS   AGE<br>curl-6bf6db5c4f-dqw9x   1/1     Running   2          20d<br><br></code></pre></td></tr></table></figure><h3 id="验证cordns"><a href="#验证cordns" class="headerlink" title="验证cordns"></a>验证<code>cordns</code></h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@k8s-master ~]# kubectl get pod<br>NAME                    READY   STATUS    RESTARTS   AGE<br>curl-6bf6db5c4f-dqw9x   1/1     Running   2          20d<br>[root@k8s-master ~]# kubectl exec -it curl-6bf6db5c4f-dqw9x -- /bin/sh<br>/bin/sh: shopt: not found<br>[ root@curl-6bf6db5c4f-dqw9x:/ ]$ nslookup kubernetes.default<br>Server:    10.96.0.10<br>Address 1: 10.96.0.10 kube-dns.kube-system.svc.cluster.local<br><br>Name:      kubernetes.default<br>Address 1: 10.96.0.1 kubernetes.default.svc.cluster.local<br>[ root@curl-6bf6db5c4f-dqw9x:/ ]$ exit<br>[root@k8s-master ~]# <br></code></pre></td></tr></table></figure><h3 id="未解决的问题"><a href="#未解决的问题" class="headerlink" title="未解决的问题"></a>未解决的问题</h3><p><code>kubectl get cs</code>显示为<code>unknown</code><br>错误提示信息示例如下:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> kubectl get cs</span><br>NAME                 AGE<br>scheduler            &lt;unknown&gt;<br>controller-manager   &lt;unknown&gt;<br>etcd-0               &lt;unknown&gt;<br></code></pre></td></tr></table></figure><p>这个问题似乎对集群没有太大的影响，暂未解决，后续愿意确认之后会继续更新，如果有大神知道如何解决，请指点。</p><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p>1、 <a href="https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm-upgrade/">https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm-upgrade/</a><br>2、 <a href="http://www.sohu.com/a/342118551_198222">http://www.sohu.com/a/342118551_198222</a><br>3、 <a href="https://www.linuxidc.com/Linux/2019-09/160728.htm">https://www.linuxidc.com/Linux/2019-09/160728.htm</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;kubeadm升级k8s集群-v1-15-3-to-v1-16-0版&quot;&gt;&lt;a href=&quot;#kubeadm升级k8s集群-v1-15-3-to-v1-16-0版&quot; class=&quot;headerlink&quot; title=&quot;kubeadm升级k8s集群(v1.15.3 t</summary>
      
    
    
    
    <category term="kubernetes" scheme="https://www.lijiawang.org/categories/kubernetes/"/>
    
    
    <category term="kubeadm" scheme="https://www.lijiawang.org/tags/kubeadm/"/>
    
  </entry>
  
  <entry>
    <title>在k8s上部署ingress-nginx并使用</title>
    <link href="https://www.lijiawang.org/posts/%E5%9C%A8k8s%E4%B8%8A%E9%83%A8%E7%BD%B2ingress-nginx%E5%B9%B6%E4%BD%BF%E7%94%A8/"/>
    <id>https://www.lijiawang.org/posts/%E5%9C%A8k8s%E4%B8%8A%E9%83%A8%E7%BD%B2ingress-nginx%E5%B9%B6%E4%BD%BF%E7%94%A8/</id>
    <published>2019-09-22T14:30:36.000Z</published>
    <updated>2021-01-06T02:23:12.472Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><p>[TOC]</p><h3 id="部署nginx-ingress"><a href="#部署nginx-ingress" class="headerlink" title="部署nginx-ingress"></a>部署<code>nginx-ingress</code></h3><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><p>准备一套<code>k8s</code>环境</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> kubectl get cs</span><br>NAME                 STATUS    MESSAGE             ERROR<br>controller-manager   Healthy   ok                  <br>scheduler            Healthy   ok                  <br>etcd-0               Healthy   &#123;&quot;health&quot;:&quot;true&quot;&#125;   <br><span class="hljs-meta">#</span><span class="bash"> kubectl cluster-info</span><br>Kubernetes master is running at https://10.122.17.200:6443<br>KubeDNS is running at https://10.122.17.200:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy<br><br>To further debug and diagnose cluster problems, use &#x27;kubectl cluster-info dump&#x27;.<br><span class="hljs-meta">#</span><span class="bash"> kubectl get nodes</span><br>NAME         STATUS   ROLES    AGE    VERSION<br>k8s-master   Ready    master   4d1h   v1.15.3<br>k8s-node1    Ready    &lt;none&gt;   4d1h   v1.15.3<br>k8s-node2    Ready    &lt;none&gt;   4d     v1.15.3<br>k8s-node3    Ready    &lt;none&gt;   4d     v1.15.3<br></code></pre></td></tr></table></figure><h3 id="下载安装nginx-ingress的yaml文件"><a href="#下载安装nginx-ingress的yaml文件" class="headerlink" title="下载安装nginx-ingress的yaml文件"></a>下载安装<code>nginx-ingress</code>的<code>yaml</code>文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> wget https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/static/mandatory.yaml</span><br></code></pre></td></tr></table></figure><h3 id="设置nginx-ingress-controller调度节点"><a href="#设置nginx-ingress-controller调度节点" class="headerlink" title="设置nginx-ingress-controller调度节点"></a>设置<code>nginx-ingress-controller</code>调度节点</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> kubectl label nodes k8s-node1 hosts=nginx-ingress-controller</span><br><span class="hljs-meta">#</span><span class="bash"> kubectl get node -l hosts=nginx-ingress-controller --show-labels</span> <br>NAME        STATUS   ROLES    AGE    VERSION   LABELS<br>k8s-node1   Ready    &lt;none&gt;   4d6h   v1.15.3   beta.kubernetes.io/arch=amd64,beta.kubernetes.io/os=linux,hosts=nginx-ingress-controller,kubernetes.io/arch=amd64,kubernetes.io/hostname=k8s-node1,kubernetes.io/os=linux<br></code></pre></td></tr></table></figure><h3 id="修改mandatory-yaml文件"><a href="#修改mandatory-yaml文件" class="headerlink" title="修改mandatory.yaml文件"></a>修改<code>mandatory.yaml</code>文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> vim mandatory.yaml</span><br>......<br>apiVersion: apps/v1<br>kind: Deployment<br>......<br>spec:<br>  replicas: 1<br>  selector:<br>    matchLabels:<br>      app.kubernetes.io/name: ingress-nginx<br>      app.kubernetes.io/part-of: ingress-nginx<br>  template:<br>    ......<br>    spec:<br>      hostNetwork: true    # 使用hostNetwork 模式<br>      nodeSelector:        # 使用nodeSelector<br>        hosts: nginx-ingress-controller   # 选择标签为hosts=nginx-ingress-controller节点<br>      serviceAccountName: nginx-ingress-serviceaccount<br>      containers:<br>        - name: nginx-ingress-controller<br>          image: lijiawang/nginx-ingress-controller:0.25.1   # 更换镜像源<br>  ......<br>......<br></code></pre></td></tr></table></figure><h3 id="执行"><a href="#执行" class="headerlink" title="执行"></a>执行</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> kubectl apply -f mandatory.yaml</span><br><span class="hljs-meta">#</span><span class="bash"> kubectl get pod -n ingress-nginx</span><br><span class="hljs-meta">#</span><span class="bash"> kubectl get pod -n ingress-nginx -o wide</span><br>NAME                                        READY   STATUS    RESTARTS   AGE   IP              NODE        NOMINATED NODE   READINESS GATES<br>nginx-ingress-controller-6956498fcf-jkzbs   1/1     Running   0          55s   10.122.17.204   k8s-node1   &lt;none&gt;           &lt;none&gt;<br></code></pre></td></tr></table></figure><p>可以看到<code>nginx-ingress-controller-6956498fcf-jkzbs</code> <code>POD</code> 调度到了打好标记的<code>k8s-node1</code>。</p><h3 id="登录nginx-ingress-controller节点验证"><a href="#登录nginx-ingress-controller节点验证" class="headerlink" title="登录nginx-ingress-controller节点验证"></a>登录<code>nginx-ingress-controller</code>节点验证</h3><p>因为<code>k8s-node1</code>为<code>nginx-ingress-controller</code>节点，所有登录<code>k8s-node1</code>节点即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> ssh k8s-node1</span><br>[root@k8s-node1 ~]# netstat -lntp|grep 80<br>tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      5901/nginx: master  <br>tcp6       0      0 :::80                   :::*                    LISTEN      5901/nginx: master  <br>[root@k8s-node1 ~]# netstat -lntp|grep 443<br>tcp        0      0 0.0.0.0:443             0.0.0.0:*               LISTEN      5901/nginx: master  <br>tcp6       0      0 :::443                  :::*                    LISTEN      5901/nginx: master  <br>[root@k8s-node1 ~]# exit<br>logout<br>Connection to k8s-node1 closed.<br></code></pre></td></tr></table></figure><h3 id="部署应用"><a href="#部署应用" class="headerlink" title="部署应用"></a>部署应用</h3><p>部署测试应用</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># cat deploy-demon.yaml </span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Service</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">myapp</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">default</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">selector:</span><br>    <span class="hljs-attr">app:</span> <span class="hljs-string">myapp</span><br>    <span class="hljs-attr">release:</span> <span class="hljs-string">canary</span><br>  <span class="hljs-attr">ports:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">http</span><br>    <span class="hljs-attr">port:</span> <span class="hljs-number">80</span><br>    <span class="hljs-attr">targetPort:</span> <span class="hljs-number">80</span><br><span class="hljs-meta">---</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">apps/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Deployment</span><br><span class="hljs-attr">metadata:</span> <br>  <span class="hljs-attr">name:</span> <span class="hljs-string">myapp-deploy</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">replicas:</span> <span class="hljs-number">5</span><br>  <span class="hljs-attr">selector:</span> <br>    <span class="hljs-attr">matchLabels:</span><br>      <span class="hljs-attr">app:</span> <span class="hljs-string">myapp</span><br>      <span class="hljs-attr">release:</span> <span class="hljs-string">canary</span><br>  <span class="hljs-attr">template:</span><br>    <span class="hljs-attr">metadata:</span><br>      <span class="hljs-attr">labels:</span><br>        <span class="hljs-attr">app:</span> <span class="hljs-string">myapp</span><br>        <span class="hljs-attr">release:</span> <span class="hljs-string">canary</span><br>    <span class="hljs-attr">spec:</span><br>      <span class="hljs-attr">containers:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">myapp</span><br>        <span class="hljs-attr">image:</span> <span class="hljs-string">lijiawang/myapp:v2</span><br>        <span class="hljs-attr">ports:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">httpd</span><br>          <span class="hljs-attr">containerPort:</span> <span class="hljs-number">80</span><br><span class="hljs-comment"># kubectl  apply -f deploy-demon.yaml </span><br><span class="hljs-string">service/myapp</span> <span class="hljs-string">created</span><br><span class="hljs-string">deployment.apps/myapp-deploy</span> <span class="hljs-string">created</span><br><span class="hljs-comment"># kubectl get pod </span><br><span class="hljs-string">NAME</span>                           <span class="hljs-string">READY</span>   <span class="hljs-string">STATUS</span>    <span class="hljs-string">RESTARTS</span>   <span class="hljs-string">AGE</span><br><span class="hljs-string">curl-6bf6db5c4f-dqw9x</span>          <span class="hljs-number">1</span><span class="hljs-string">/1</span>     <span class="hljs-string">Running</span>   <span class="hljs-number">1</span>          <span class="hljs-string">16d</span><br><span class="hljs-string">myapp-deploy-c69757d67-9bv4w</span>   <span class="hljs-number">1</span><span class="hljs-string">/1</span>     <span class="hljs-string">Running</span>   <span class="hljs-number">0</span>          <span class="hljs-string">38s</span><br><span class="hljs-string">myapp-deploy-c69757d67-j2kxc</span>   <span class="hljs-number">1</span><span class="hljs-string">/1</span>     <span class="hljs-string">Running</span>   <span class="hljs-number">0</span>          <span class="hljs-string">38s</span><br><span class="hljs-string">myapp-deploy-c69757d67-jgm5v</span>   <span class="hljs-number">1</span><span class="hljs-string">/1</span>     <span class="hljs-string">Running</span>   <span class="hljs-number">0</span>          <span class="hljs-string">38s</span><br><span class="hljs-string">myapp-deploy-c69757d67-n5rxw</span>   <span class="hljs-number">1</span><span class="hljs-string">/1</span>     <span class="hljs-string">Running</span>   <span class="hljs-number">0</span>          <span class="hljs-string">38s</span><br><span class="hljs-string">myapp-deploy-c69757d67-t4nxr</span>   <span class="hljs-number">1</span><span class="hljs-string">/1</span>     <span class="hljs-string">Running</span>   <span class="hljs-number">0</span>          <span class="hljs-string">38s</span><br><span class="hljs-comment"># kubectl get svc</span><br><span class="hljs-string">NAME</span>         <span class="hljs-string">TYPE</span>        <span class="hljs-string">CLUSTER-IP</span>       <span class="hljs-string">EXTERNAL-IP</span>   <span class="hljs-string">PORT(S)</span>   <span class="hljs-string">AGE</span><br><span class="hljs-string">kubernetes</span>   <span class="hljs-string">ClusterIP</span>   <span class="hljs-number">10.96</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>        <span class="hljs-string">&lt;none&gt;</span>        <span class="hljs-number">443</span><span class="hljs-string">/TCP</span>   <span class="hljs-string">17d</span><br><span class="hljs-string">myapp</span>        <span class="hljs-string">ClusterIP</span>   <span class="hljs-number">10.104</span><span class="hljs-number">.246</span><span class="hljs-number">.234</span>   <span class="hljs-string">&lt;none&gt;</span>        <span class="hljs-number">80</span><span class="hljs-string">/TCP</span>    <span class="hljs-string">2m58s</span><br></code></pre></td></tr></table></figure><h3 id="以ingress方式暴露应用"><a href="#以ingress方式暴露应用" class="headerlink" title="以ingress方式暴露应用"></a>以<code>ingress</code>方式暴露应用</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> cat ingress-myapp.yaml</span> <br>apiVersion: extensions/v1beta1<br>kind: Ingress<br>metadata:<br>  name: ingress-myapp<br>  namespace: default<br>  annotations: <br>    kubernetes.io/ingress.class: &quot;nginx&quot;<br>spec:<br>  rules:<br>  - host: myapp.lijw19.com   # 定义域名<br>    http:<br>      paths:<br>      - path: <br>        backend:<br>          serviceName: myapp   # 跟你要爆了的服务的svc名字相同<br>          servicePort: 80     # 要暴露的端口<br><span class="hljs-meta">#</span><span class="bash"> kubectl apply -f ingress-myapp.yaml</span> <br>ingress.extensions/ingress-myapp created<br><span class="hljs-meta">#</span><span class="bash"> kubectl get ingresses.</span><br>NAME            HOSTS              ADDRESS   PORTS   AGE<br>ingress-myapp   myapp.lijw19.com             80      10s<br></code></pre></td></tr></table></figure><p>本地<code>host</code>解析<br><code>windows</code>的<code>hosts</code>文件在<code>c:\windows\system32\drivers\etc</code>下<br>修改<code>host</code>文件，增加以下内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">10.122.17.204 myapp.lijw19.com <br></code></pre></td></tr></table></figure><h3 id="访问应用"><a href="#访问应用" class="headerlink" title="访问应用"></a>访问应用</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> `seq 10`; <span class="hljs-keyword">do</span> curl http://myapp.lijw19.com; <span class="hljs-keyword">done</span></span><br>Hello MyApp | Version: v2 | &lt;a href=&quot;hostname.html&quot;&gt;Pod Name&lt;/a&gt;<br>Hello MyApp | Version: v2 | &lt;a href=&quot;hostname.html&quot;&gt;Pod Name&lt;/a&gt;<br>Hello MyApp | Version: v2 | &lt;a href=&quot;hostname.html&quot;&gt;Pod Name&lt;/a&gt;<br>Hello MyApp | Version: v2 | &lt;a href=&quot;hostname.html&quot;&gt;Pod Name&lt;/a&gt;<br>Hello MyApp | Version: v2 | &lt;a href=&quot;hostname.html&quot;&gt;Pod Name&lt;/a&gt;<br>Hello MyApp | Version: v2 | &lt;a href=&quot;hostname.html&quot;&gt;Pod Name&lt;/a&gt;<br>Hello MyApp | Version: v2 | &lt;a href=&quot;hostname.html&quot;&gt;Pod Name&lt;/a&gt;<br>Hello MyApp | Version: v2 | &lt;a href=&quot;hostname.html&quot;&gt;Pod Name&lt;/a&gt;<br>Hello MyApp | Version: v2 | &lt;a href=&quot;hostname.html&quot;&gt;Pod Name&lt;/a&gt;<br>Hello MyApp | Version: v2 | &lt;a href=&quot;hostname.html&quot;&gt;Pod Name&lt;/a&gt;<br></code></pre></td></tr></table></figure><p>使用浏览器访问<code>http://myapp.lijw19.com</code><br><img src="https://ljw.howieli.cn/blog/2019-9-18/http0.png"></p><p><img src="https://ljw.howieli.cn/blog/2019-9-18/http1.png"><br>这里我们是使用的http访问的，那如果要使用</p><h3 id="使用https访问"><a href="#使用https访问" class="headerlink" title="使用https访问"></a>使用<code>https</code>访问</h3><p>创建证书</p><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs vbnet"># openssl genrsa -out tls.<span class="hljs-keyword">key</span> <span class="hljs-number">2048</span><br>Generating RSA <span class="hljs-keyword">private</span> <span class="hljs-keyword">key</span>, <span class="hljs-number">2048</span> bit <span class="hljs-type">long</span> modulus<br>......................+++<br>.....................................+++<br>e <span class="hljs-built_in">is</span> <span class="hljs-number">65537</span> (<span class="hljs-number">0</span>x10001)<br># ls -l tls.<span class="hljs-keyword">key</span> <br>-rw-r--r-- <span class="hljs-number">1</span> root root <span class="hljs-number">1675</span> Sep <span class="hljs-number">16</span> <span class="hljs-number">08</span>:<span class="hljs-number">43</span> tls.<span class="hljs-keyword">key</span><br># openssl req -<span class="hljs-built_in">new</span> -x509 -<span class="hljs-keyword">key</span> tls.<span class="hljs-keyword">key</span> -out tls.crt<br>You are about <span class="hljs-keyword">to</span> be asked <span class="hljs-keyword">to</span> enter information that will be incorporated<br><span class="hljs-keyword">into</span> your certificate request.<br>What you are about <span class="hljs-keyword">to</span> enter <span class="hljs-built_in">is</span> what <span class="hljs-built_in">is</span> called a Distinguished Name <span class="hljs-built_in">or</span> a DN.<br>There are quite a few fields but you can leave some blank<br><span class="hljs-keyword">For</span> some fields there will be a <span class="hljs-keyword">default</span> value,<br><span class="hljs-keyword">If</span> you enter <span class="hljs-comment">&#x27;.&#x27;, the field will be left blank.</span><br>-----<br>Country Name (<span class="hljs-number">2</span> letter code) [XX]:CN     <br>State <span class="hljs-built_in">or</span> Province Name (full name) []:lijw19<br>Locality Name (eg, city) [<span class="hljs-keyword">Default</span> City]:lijw19<br>Organization Name (eg, company) [<span class="hljs-keyword">Default</span> Company Ltd]:test<br>Organizational Unit Name (eg, section) []:test<br>Common Name (eg, your name <span class="hljs-built_in">or</span> your server<span class="hljs-comment">&#x27;s hostname) []:test.lijw19.com</span><br>Email Address []:<br>[root@k8s-master ~]# ls -l tls.*<br>-rw-r--r-- <span class="hljs-number">1</span> root root <span class="hljs-number">1318</span> Sep <span class="hljs-number">16</span> <span class="hljs-number">08</span>:<span class="hljs-number">46</span> tls.crt<br>-rw-r--r-- <span class="hljs-number">1</span> root root <span class="hljs-number">1675</span> Sep <span class="hljs-number">16</span> <span class="hljs-number">08</span>:<span class="hljs-number">43</span> tls.<span class="hljs-keyword">key</span><br><br></code></pre></td></tr></table></figure><h3 id="证书转成secret"><a href="#证书转成secret" class="headerlink" title="证书转成secret"></a>证书转成<code>secret</code></h3><p>将创建好的证书转成<code>secret</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> kubectl create secret tls lijw-ingress-secret --cert=tls.crt --key=tls.key</span><br>secret/lijw-ingress-secret created<br><span class="hljs-meta">#</span><span class="bash"> kubectl get secrets</span> <br>NAME                  TYPE                                  DATA   AGE<br>default-token-vmfwt   kubernetes.io/service-account-token   3      17d<br>lijw-ingress-secret   kubernetes.io/tls                     2      10s<br><br><br></code></pre></td></tr></table></figure><h3 id="创建https-ingress"><a href="#创建https-ingress" class="headerlink" title="创建https ingress"></a>创建<code>https</code> <code>ingress</code></h3><p>修改下<code>ingress-myapp-https.yaml</code>加入刚刚添加的<code>secret</code>，修改后的文件如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># cat ingress-myapp-https.yaml </span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">extensions/v1beta1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Ingress</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">ingress-myapp-https</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">default</span><br>  <span class="hljs-attr">annotations:</span> <br>    <span class="hljs-attr">kubernetes.io/ingress.class:</span> <span class="hljs-string">&quot;nginx&quot;</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">tls:</span>    <span class="hljs-comment"># 添加了tls这一段</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">test.lijw19.com</span><br>    <span class="hljs-attr">secretName:</span> <span class="hljs-string">lijw-ingress-secret</span>  <span class="hljs-comment"># 到这结束</span><br>  <span class="hljs-attr">rules:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">host:</span> <span class="hljs-string">test.lijw19.com</span><br>    <span class="hljs-attr">http:</span><br>      <span class="hljs-attr">paths:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">path:</span> <br>        <span class="hljs-attr">backend:</span><br>          <span class="hljs-attr">serviceName:</span> <span class="hljs-string">myapp</span><br>          <span class="hljs-attr">servicePort:</span> <span class="hljs-number">80</span><br><br><br><br><br><span class="hljs-comment"># kubectl apply -f ingress-myapp-https.yaml </span><br><span class="hljs-string">ingress.extensions/ingress-myapp-https</span> <span class="hljs-string">created</span><br><span class="hljs-comment"># kubectl get ingresses ingress-myapp-https </span><br><span class="hljs-string">NAME</span>                  <span class="hljs-string">HOSTS</span>             <span class="hljs-string">ADDRESS</span>   <span class="hljs-string">PORTS</span>     <span class="hljs-string">AGE</span><br><span class="hljs-string">ingress-myapp-https</span>   <span class="hljs-string">test.lijw19.com</span>             <span class="hljs-number">80</span><span class="hljs-string">,</span> <span class="hljs-number">443</span>   <span class="hljs-string">13s</span><br></code></pre></td></tr></table></figure><h3 id="本地host解析"><a href="#本地host解析" class="headerlink" title="本地host解析"></a>本地<code>host</code>解析</h3><p><code>windows</code>的<code>hosts</code>文件在<code>c:\windows\system32\drivers\etc</code>下<br>修改<code>host</code>文件，增加以下内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">10.122.17.204 myapp.lijw19.com  test.lijw19.com<br></code></pre></td></tr></table></figure><p>在浏览器访问<code>https://test.lijw19.com</code><br><img src="https://ljw.howieli.cn/blog/2019-9-18/https0.png"></p><p><img src="https://ljw.howieli.cn/blog/2019-9-18/https1.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h3 id=&quot;部署nginx-ingress&quot;&gt;&lt;a href=&quot;#部署nginx-ingress&quot; class=&quot;headerlink&quot; title=&quot;部署nginx-ingress&quot;&gt;&lt;/a&gt;部署&lt;code&gt;n</summary>
      
    
    
    
    <category term="kubernetes" scheme="https://www.lijiawang.org/categories/kubernetes/"/>
    
    
    <category term="kubernets" scheme="https://www.lijiawang.org/tags/kubernets/"/>
    
    <category term="ingress" scheme="https://www.lijiawang.org/tags/ingress/"/>
    
  </entry>
  
  <entry>
    <title>使用kubeadm搭建kubernetes1.15</title>
    <link href="https://www.lijiawang.org/posts/%E4%BD%BF%E7%94%A8kubeadm%E6%90%AD%E5%BB%BAkubernetes1.15/"/>
    <id>https://www.lijiawang.org/posts/%E4%BD%BF%E7%94%A8kubeadm%E6%90%AD%E5%BB%BAkubernetes1.15/</id>
    <published>2019-09-01T14:07:30.000Z</published>
    <updated>2020-12-31T06:54:08.163Z</updated>
    
    <content type="html"><![CDATA[<h3 id="使用kubeadm方式安装kubernetes"><a href="#使用kubeadm方式安装kubernetes" class="headerlink" title="使用kubeadm方式安装kubernetes"></a>使用<code>kubeadm</code>方式安装<code>kubernetes</code></h3><a id="more"></a><p>[TOC]</p><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><p>在所有节点执行，此环节所有的节点操作系统均匀<code>centos7.6</code></p><h4 id="1、配置hosts解析"><a href="#1、配置hosts解析" class="headerlink" title="1、配置hosts解析"></a>1、配置<code>hosts</code>解析</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> cat /etc/hosts</span><br>10.122.17.206 k8s-node3<br>10.122.17.205 k8s-node2<br>10.122.17.204 k8s-node1<br>10.122.17.200 k8s-master<br><span class="hljs-meta">#</span><span class="bash"> masker 主机到node免密</span><br></code></pre></td></tr></table></figure><h4 id="2、禁用防火墙"><a href="#2、禁用防火墙" class="headerlink" title="2、禁用防火墙"></a>2、禁用防火墙</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl stop firewalld<br>systemctl disable firewalld<br></code></pre></td></tr></table></figure><h4 id="3、禁用SELINUX"><a href="#3、禁用SELINUX" class="headerlink" title="3、禁用SELINUX"></a>3、禁用<code>SELINUX</code></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> setenforce 0</span><br><span class="hljs-meta">#</span><span class="bash"> sed -i <span class="hljs-string">&#x27;s/SELINUX=enforcing/SELINUX=disabled/&#x27;</span> /etc/selinux/config</span><br><span class="hljs-meta">#</span><span class="bash"> cat /etc/selinux/config</span><br>SELINUX=disabled<br></code></pre></td></tr></table></figure><h4 id="4、创建-etc-sysctl-d-k8s-conf-添加如下内容-并使修改生效"><a href="#4、创建-etc-sysctl-d-k8s-conf-添加如下内容-并使修改生效" class="headerlink" title="4、创建/etc/sysctl.d/k8s.conf,添加如下内容,并使修改生效"></a>4、创建<code>/etc/sysctl.d/k8s.conf</code>,添加如下内容,并使修改生效</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> cat /etc/sysctl.d/k8s.conf</span> <br>net.bridge.bridge-nf-call-ip6tables = 1<br>net.bridge.bridge-nf-call-iptables = 1<br>net.ipv4.ip_forward = 1<br><span class="hljs-meta">#</span><span class="bash"> modprobe br_netfilter</span><br><span class="hljs-meta">#</span><span class="bash"> sysctl -p /etc/sysctl.d/k8s.conf</span><br></code></pre></td></tr></table></figure><h4 id="5、安装ipvs"><a href="#5、安装ipvs" class="headerlink" title="5、安装ipvs"></a>5、安装ipvs</h4><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs gradle"># cat &gt; <span class="hljs-regexp">/etc/</span>sysconfig<span class="hljs-regexp">/modules/i</span>pvs.modules &lt;&lt;EOF<br>#!<span class="hljs-regexp">/bin/</span>bash<br>modprobe -- ip_vs<br>modprobe -- ip_vs_rr<br>modprobe -- ip_vs_wrr<br>modprobe -- ip_vs_sh<br>modprobe -- nf_conntrack_ipv4<br>EOF<br># chmod <span class="hljs-number">755</span> <span class="hljs-regexp">/etc/</span>sysconfig<span class="hljs-regexp">/modules/i</span>pvs.modules &amp;&amp; bash <span class="hljs-regexp">/etc/</span>sysconfig<span class="hljs-regexp">/modules/i</span>pvs.modules &amp;&amp; lsmod | <span class="hljs-keyword">grep</span> -e ip_vs -e nf_conntrack_ipv4<br></code></pre></td></tr></table></figure><p>上面脚本创建了的<code>/etc/sysconfig/modules/ipvs.modules</code>文件，保证在节点重启后能自动加载所需模块。使用<code>lsmod | grep -e ip_vs -e nf_conntrack_ipv4</code>命令查看是否已经正确加载所需的内核模块。<br>接下来还需要确保各个节点上已经安装了 ipset 软件包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> yum install ipset -y</span><br></code></pre></td></tr></table></figure><p>为了便于查看 <code>ipvs</code> 的代理规则，最好安装一下管理工具 <code>ipvsadm</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> yum -y install ipvsadm -y</span><br></code></pre></td></tr></table></figure><h4 id="6、安装时间同步服务"><a href="#6、安装时间同步服务" class="headerlink" title="6、安装时间同步服务"></a>6、安装时间同步服务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> yum install chrony -y</span><br><span class="hljs-meta">#</span><span class="bash"> systemctl <span class="hljs-built_in">enable</span> chronyd</span><br><span class="hljs-meta">#</span><span class="bash"> systemctl start chronyd</span><br><span class="hljs-meta">#</span><span class="bash"> chronyc sources</span><br></code></pre></td></tr></table></figure><h4 id="7、关闭swap分区"><a href="#7、关闭swap分区" class="headerlink" title="7、关闭swap分区"></a>7、关闭swap分区</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> swapoff -a</span><br></code></pre></td></tr></table></figure><p>修改<code>/etc/fstab</code>文件，注释掉<code>SWAP</code>的自动挂载，使用<code>free -m</code>确认<code>swap</code>已经关闭。<code>swappiness</code>参数调整，修改<code>/etc/sysctl.d/k8s.conf</code>添加下面一行：</p><h4 id="8、安装docker-ce"><a href="#8、安装docker-ce" class="headerlink" title="8、安装docker-ce"></a>8、安装<code>docker-ce</code></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="hljs-meta">#</span><span class="bash"> yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="hljs-meta">#</span><span class="bash"> yum makecache fast</span><br><span class="hljs-meta">#</span><span class="bash"> yum list docker-ce --showduplicates | sort -r</span><br><span class="hljs-meta">#</span><span class="bash"> 可以选择安装一个版本，比如我们这里安装最新版本</span><br><span class="hljs-meta">#</span><span class="bash"> yum install docker-ce-19.03.1-3.el7 -y</span><br></code></pre></td></tr></table></figure><h4 id="9、配置Docker镜像加速器"><a href="#9、配置Docker镜像加速器" class="headerlink" title="9、配置Docker镜像加速器"></a>9、配置<code>Docker</code>镜像加速器</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">cat &lt;&lt;EOF &gt;/etc/docker/daemon.json<br>&#123;<br>  &quot;exec-opts&quot;: [&quot;native.cgroupdriver=systemd&quot;],<br>  &quot;registry-mirrors&quot; : [<br>    &quot;https://ot2k4d59.mirror.aliyuncs.com/&quot;<br>  ]<br>&#125;<br>EOF<br></code></pre></td></tr></table></figure><h4 id="10、启动Docker"><a href="#10、启动Docker" class="headerlink" title="10、启动Docker"></a>10、启动<code>Docker</code></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> systemctl daemon-reload</span><br><span class="hljs-meta">#</span><span class="bash"> systemctl restart docker</span><br><span class="hljs-meta">#</span><span class="bash"> systemctl <span class="hljs-built_in">enable</span> docker</span><br></code></pre></td></tr></table></figure><h4 id="11、安装kubeadm、kubelet、kubectl"><a href="#11、安装kubeadm、kubelet、kubectl" class="headerlink" title="11、安装kubeadm、kubelet、kubectl"></a>11、安装<code>kubeadm</code>、<code>kubelet</code>、<code>kubectl</code></h4><p>配置<code>yum</code>源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">cat &lt;&lt;EOF &gt; /etc/yum.repos.d/kubernetes.repo<br>[kubernetes]<br>name=Kubernetes<br>baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/<br>enabled=1<br>gpgcheck=1<br>repo_gpgcheck=1<br>gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg<br>EOF<br></code></pre></td></tr></table></figure><p>安装<code>kubeadm</code>、<code>kubelet</code>、<code>kubectl</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes -y</span><br><span class="hljs-meta">#</span><span class="bash"> kubeadm version</span><br>kubeadm version: &amp;version.Info&#123;Major:&quot;1&quot;, Minor:&quot;15&quot;, GitVersion:&quot;v1.15.3&quot;, GitCommit:&quot;2d3c76f9091b6bec110a5e63777c332469e0cba2&quot;, GitTreeState:&quot;clean&quot;, BuildDate:&quot;2019-08-19T11:11:18Z&quot;, GoVersion:&quot;go1.12.9&quot;, Compiler:&quot;gc&quot;, Platform:&quot;linux/amd64&quot;&#125;<br></code></pre></td></tr></table></figure><p>将 <code>kubelet</code> 设置成开机启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> systemctl <span class="hljs-built_in">enable</span> kubelet.service</span><br></code></pre></td></tr></table></figure><p>到这里为止上面所有的操作都需要在所有节点执行配置</p><h3 id="初始化集群"><a href="#初始化集群" class="headerlink" title="初始化集群"></a>初始化集群</h3><h4 id="1、在master节点配置配置kubeadm初始文件"><a href="#1、在master节点配置配置kubeadm初始文件" class="headerlink" title="1、在master节点配置配置kubeadm初始文件"></a>1、在master节点配置配置kubeadm初始文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">  kubeadm config <span class="hljs-built_in">print</span> init-defaults &gt; kubeadm.yaml</span><br><span class="hljs-meta">#</span><span class="bash"> cat kubeadm.yaml</span> <br>apiVersion: kubeadm.k8s.io/v1beta2<br>bootstrapTokens:<br>- groups:<br>  - system:bootstrappers:kubeadm:default-node-token<br>  token: abcdef.0123456789abcdef<br>  ttl: 24h0m0s<br>  usages:<br>  - signing<br>  - authentication<br>kind: InitConfiguration<br>localAPIEndpoint:<br>  advertiseAddress: 10.122.17.200   # apiserver 节点内网IP<br>  bindPort: 6443<br>nodeRegistration:<br>  criSocket: /var/run/dockershim.sock<br>  name: k8s-master<br>  taints:<br>  - effect: NoSchedule<br>    key: node-role.kubernetes.io/master<br>---<br>apiServer:<br>  timeoutForControlPlane: 4m0s<br>apiVersion: kubeadm.k8s.io/v1beta2<br>certificatesDir: /etc/kubernetes/pki<br>clusterName: kubernetes<br>controllerManager: &#123;&#125;<br>dns:<br>  type: CoreDNS<br>etcd:<br>  local:<br>    dataDir: /var/lib/etcd<br>imageRepository: registry.aliyuncs.com/google_containers    # 科学上网使用阿里registry源<br>kind: ClusterConfiguration<br>kubernetesVersion: v1.15.3    # k8s版本<br>networking:<br>  dnsDomain: cluster.local<br>  podSubnet: 192.168.0.0/16   # 我们这里是准备安装 calico 网络插件的，需要将 networking.podSubnet 设置为192.168.0.0/16<br>  serviceSubnet: 10.96.0.0/12<br>scheduler: &#123;&#125;<br>---<br>apiVersion: kubeproxy.config.k8s.io/v1alpha1<br>kind: KubeProxyConfiguration<br>mode: ipvs       # kube-proxy 模式<br></code></pre></td></tr></table></figure><h4 id="2、初始化master配置文件"><a href="#2、初始化master配置文件" class="headerlink" title="2、初始化master配置文件"></a>2、初始化<code>master</code>配置文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> kubeadm init --config kubeadm.yaml</span><br>Your Kubernetes control-plane has initialized successfully!<br><br>To start using your cluster, you need to run the following as a regular user:<br><br>  mkdir -p $HOME/.kube<br>  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config<br>  sudo chown $(id -u):$(id -g) $HOME/.kube/config<br><br>You should now deploy a pod network to the cluster.<br>Run &quot;kubectl apply -f [podnetwork].yaml&quot; with one of the options listed at:<br>  https://kubernetes.io/docs/concepts/cluster-administration/addons/<br><br>Then you can join any number of worker nodes by running the following on each as root:<br><br>kubeadm join 10.122.17.200:6443 --token abcdef.0123456789abcdef \<br>    --discovery-token-ca-cert-hash sha256:44a4ed41c1f69a23139b5d1e2bb6ec158d835257c6aab0a7607a122e77f51c04 <br></code></pre></td></tr></table></figure><h4 id="3、拷贝-kubeconfig-文件"><a href="#3、拷贝-kubeconfig-文件" class="headerlink" title="3、拷贝 kubeconfig 文件"></a>3、拷贝 kubeconfig 文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> mkdir -p <span class="hljs-variable">$HOME</span>/.kube</span><br><span class="hljs-meta">#</span><span class="bash"> sudo cp -i /etc/kubernetes/admin.conf <span class="hljs-variable">$HOME</span>/.kube/config</span><br><span class="hljs-meta">#</span><span class="bash"> sudo chown $(id -u):$(id -g) <span class="hljs-variable">$HOME</span>/.kube/config</span><br></code></pre></td></tr></table></figure><h4 id="4、kubectl自动补全"><a href="#4、kubectl自动补全" class="headerlink" title="4、kubectl自动补全"></a>4、kubectl自动补全</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> yum install -y bash-completion</span><br><span class="hljs-meta">#</span><span class="bash"> locate bash_completion</span><br>/etc/bash_completion.d<br>/etc/bash_completion.d/git<br>/etc/bash_completion.d/iprutils<br>/etc/bash_completion.d/oscap<br>/etc/bash_completion.d/redefine_filedir<br>/etc/bash_completion.d/scl.bash<br>/etc/bash_completion.d/yum-utils.bash<br>/etc/profile.d/bash_completion.sh<br>/root/naftis/vendor/github.com/spf13/cobra/bash_completions.go<br>/usr/share/bash-completion/bash_completion<br><span class="hljs-meta">#</span><span class="bash"> <span class="hljs-built_in">source</span> /usr/share/bash-completion/bash_completion</span><br><span class="hljs-meta">#</span><span class="bash"> <span class="hljs-built_in">source</span> &lt;(kubectl completion bash)</span><br><span class="hljs-meta">#</span><span class="bash"> <span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;source /usr/share/bash-completion/bash_completion&#x27;</span> &gt;&gt; .bashrc</span> <br><span class="hljs-meta">#</span><span class="bash"> <span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;source &lt;(kubectl completion bash)&#x27;</span> &gt;&gt;.bashrc</span><br></code></pre></td></tr></table></figure><h3 id="添加计算节点"><a href="#添加计算节点" class="headerlink" title="添加计算节点"></a>添加计算节点</h3><h4 id="1、使用kubeadm添加计算节点"><a href="#1、使用kubeadm添加计算节点" class="headerlink" title="1、使用kubeadm添加计算节点"></a>1、使用<code>kubeadm</code>添加计算节点</h4><p><code>node</code>节点记住初始化集群上面的配置和操作要提前做好，必须安装好<code>kubeadm</code>、<code>kubelet</code>，执行以下命名</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> kubeadm join 10.122.17.200:6443 --token abcdef.0123456789abcdef \</span><br><span class="bash">    --discovery-token-ca-cert-hash sha256:44a4ed41c1f69a23139b5d1e2bb6ec158d835257c6aab0a7607a122e77f51c04</span> <br></code></pre></td></tr></table></figure><p>如果忘记了上面的<code>join</code>命令可以在<code>master</code>节点使用命令<code>kubeadm token create --print-join-command</code>重新获取,如下。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> kubeadm token create --print-join-command</span><br>kubeadm join 10.122.17.200:6443 --token dkb75n.dxkqjiv96eu7ky2s \<br>    --discovery-token-ca-cert-hash sha256:44a4ed41c1f69a23139b5d1e2bb6ec158d835257c6aab0a7607a122e77f51c04 <br></code></pre></td></tr></table></figure><h4 id="2、执行成功后可以在master节点运行kubectl-get-nodes命令"><a href="#2、执行成功后可以在master节点运行kubectl-get-nodes命令" class="headerlink" title="2、执行成功后可以在master节点运行kubectl get nodes命令"></a>2、执行成功后可以在<code>master</code>节点运行<code>kubectl get nodes</code>命令</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> kubectl get nodes</span><br>NAME         STATUS      ROLES    AGE     VERSION<br>k8s-master   NotReady    master   3m    v1.15.3<br>k8s-node1    NotReady    &lt;none&gt;   48m   v1.15.3<br>k8s-node2    NotReady    &lt;none&gt;   24m   v1.15.3<br>k8s-node3    NotReady    &lt;none&gt;   13m   v1.15.3<br></code></pre></td></tr></table></figure><p>可以看到是<code>NotReady</code>状态，这是因为还没有安装网络插件，接下来安装网络插件</p><h3 id="安装calio网络组建"><a href="#安装calio网络组建" class="headerlink" title="安装calio网络组建"></a>安装<code>calio</code>网络组建</h3><p>以下命令在控制节点执行</p><h4 id="1、安装calio网络插件"><a href="#1、安装calio网络插件" class="headerlink" title="1、安装calio网络插件"></a>1、安装<code>calio</code>网络插件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">  wget https://docs.projectcalico.org/v3.8/manifests/calico.yaml</span><br><span class="hljs-meta">#</span><span class="bash">  如果节点是多网卡，可以在资源清单文件中指定内网网卡</span><br><span class="hljs-meta">#</span><span class="bash"> vi calico.yaml</span><br>......<br>spec:<br>  containers:<br>  - env:<br>    - name: DATASTORE_TYPE<br>      value: kubernetes<br>    - name: IP_AUTODETECTION_METHOD  # DaemonSet中添加该环境变量<br>      value: interface=eth0    # 指定内网网卡<br>    - name: WAIT_FOR_DATASTORE<br>      value: &quot;true&quot;<br>......<br><span class="hljs-meta">#</span><span class="bash"> kubectl apply -f calico.yaml  <span class="hljs-comment"># 安装calico网络插件</span></span><br></code></pre></td></tr></table></figure><p>等待一段时间可以查看下<code>pod</code>的状态</p><h4 id="2、查看pod状态"><a href="#2、查看pod状态" class="headerlink" title="2、查看pod状态"></a>2、查看<code>pod</code>状态</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> kubectl get pods -n kube-system</span><br>NAME                                       READY   STATUS    RESTARTS   AGE<br>calico-kube-controllers-65b8787765-hx9cr   1/1     Running   0          3h50m<br>calico-node-2rlsz                          1/1     Running   0          3h18m<br>calico-node-5vz46                          1/1     Running   0          3h50m<br>calico-node-6szsd                          1/1     Running   0          3h50m<br>calico-node-s5nmr                          1/1     Running   0          3h29m<br>coredns-bccdc95cf-9jf8w                    1/1     Running   0          4h8m<br>coredns-bccdc95cf-gk27l                    1/1     Running   0          4h8m<br>etcd-k8s-master                            1/1     Running   0          4h7m<br>kube-apiserver-k8s-master                  1/1     Running   0          4h7m<br>kube-controller-manager-k8s-master         1/1     Running   0          4h7m<br>kube-proxy-5jbft                           1/1     Running   0          3h29m<br>kube-proxy-d9p8w                           1/1     Running   0          3h18m<br>kube-proxy-h6n88                           1/1     Running   0          3h54m<br>kube-proxy-mqgj7                           1/1     Running   0          4h8m<br>kube-scheduler-k8s-master                  1/1     Running   0          4h7m<br></code></pre></td></tr></table></figure><p>网络插件运行成功了，node 状态也正常了：</p><h4 id="3、查看node状态"><a href="#3、查看node状态" class="headerlink" title="3、查看node状态"></a>3、查看<code>node</code>状态</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> kubectl get nodes</span><br>NAME         STATUS   ROLES    AGE     VERSION<br>k8s-master   Ready    master   4h10m   v1.15.3<br>k8s-node1    Ready    &lt;none&gt;   3h55m   v1.15.3<br>k8s-node2    Ready    &lt;none&gt;   3h31m   v1.15.3<br>k8s-node3    Ready    &lt;none&gt;   3h20m   v1.15.3<br></code></pre></td></tr></table></figure><h4 id="4、安装calicoctl"><a href="#4、安装calicoctl" class="headerlink" title="4、安装calicoctl"></a>4、安装calicoctl</h4><p>将<code>calicoctl</code>安装为<code>Kubernetes pod</code><br>使用<code>Kubernetes API</code>数据存储区</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> kubectl apply -f https://docs.projectcalico.org/v3.8/manifests/calicoctl.yaml</span><br></code></pre></td></tr></table></figure><p>然后，您可以使用kubectl运行命令，如下所示</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> kubectl <span class="hljs-built_in">exec</span> -ti -n kube-system calicoctl -- /calicoctl get profiles -o wide</span><br>NAME                                                 LABELS   <br>kns.default                                          map[]    <br>kns.kube-node-lease                                  map[]    <br>kns.kube-public                                      map[]    <br>kns.kube-system                                      map[]    <br>ksa.default.default                                  map[]    <br>ksa.kube-node-lease.default                          map[]    <br>ksa.kube-public.default                              map[]    <br>ksa.kube-system.attachdetach-controller              map[]    <br>ksa.kube-system.bootstrap-signer                     map[]    <br>ksa.kube-system.calico-kube-controllers              map[]    <br>ksa.kube-system.calico-node                          map[]    <br>ksa.kube-system.calicoctl                            map[]    <br>ksa.kube-system.certificate-controller               map[]    <br>ksa.kube-system.clusterrole-aggregation-controller   map[]    <br>ksa.kube-system.coredns                              map[]    <br>ksa.kube-system.cronjob-controller                   map[]    <br>ksa.kube-system.daemon-set-controller                map[]    <br>ksa.kube-system.default                              map[]    <br>ksa.kube-system.deployment-controller                map[]    <br>ksa.kube-system.disruption-controller                map[]    <br>ksa.kube-system.endpoint-controller                  map[]    <br>ksa.kube-system.expand-controller                    map[]    <br>ksa.kube-system.generic-garbage-collector            map[]    <br>ksa.kube-system.horizontal-pod-autoscaler            map[]    <br>ksa.kube-system.job-controller                       map[]    <br>ksa.kube-system.kube-proxy                           map[]    <br>ksa.kube-system.namespace-controller                 map[]    <br>ksa.kube-system.node-controller                      map[]    <br>ksa.kube-system.persistent-volume-binder             map[]    <br>ksa.kube-system.pod-garbage-collector                map[]    <br>ksa.kube-system.pv-protection-controller             map[]    <br>ksa.kube-system.pvc-protection-controller            map[]    <br>ksa.kube-system.replicaset-controller                map[]    <br>ksa.kube-system.replication-controller               map[]    <br>ksa.kube-system.resourcequota-controller             map[]    <br>ksa.kube-system.service-account-controller           map[]    <br>ksa.kube-system.service-controller                   map[]    <br>ksa.kube-system.statefulset-controller               map[]    <br>ksa.kube-system.token-cleaner                        map[]    <br>ksa.kube-system.ttl-controller                       map[]    <br></code></pre></td></tr></table></figure><h4 id="5、设置别名"><a href="#5、设置别名" class="headerlink" title="5、设置别名"></a>5、设置别名</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> <span class="hljs-built_in">alias</span> calicoctl=<span class="hljs-string">&quot;kubectl exec -i -n kube-system calicoctl /calicoctl -- &quot;</span></span><br><span class="hljs-meta">#</span><span class="bash"> <span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;alias calicoctl=&quot;kubectl exec -i -n kube-system calicoctl /calicoctl -- &quot;&#x27;</span> &gt;&gt; .bashrc</span> <br><span class="hljs-meta">#</span><span class="bash"> tail -n 1 .bashrc</span> <br>alias calicoctl=&quot;kubectl exec -i -n kube-system calicoctl /calicoctl -- &quot;<br></code></pre></td></tr></table></figure><h4 id="6、使命别名执行命令"><a href="#6、使命别名执行命令" class="headerlink" title="6、使命别名执行命令"></a>6、使命别名执行命令</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> calicoctl get nodes</span><br>NAME         <br>k8s-master   <br>k8s-node1    <br>k8s-node2    <br>k8s-node3    <br></code></pre></td></tr></table></figure><h4 id="7、测试coredns"><a href="#7、测试coredns" class="headerlink" title="7、测试coredns"></a>7、测试coredns</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> kubectl run curl --image=radial/busyboxplus:curl -it</span> <br>kubectl run --generator=deployment/apps.v1 is DEPRECATED and will be removed in a future version. Use kubectl run --generator=run-pod/v1 or kubectl create instead.<br>If you don&#x27;t see a command prompt, try pressing enter.<br>[ root@curl-6bf6db5c4f-dqw9x:/ ]$ nslookup kubernetes.default<br>Server:    10.96.0.10<br>Address 1: 10.96.0.10 kube-dns.kube-system.svc.cluster.local<br><br>Name:      kubernetes.default<br>Address 1: 10.96.0.1 kubernetes.default.svc.cluster.local<br>[ root@curl-6bf6db5c4f-dqw9x:/ ]$ <br></code></pre></td></tr></table></figure><h3 id="安装Dashboard"><a href="#安装Dashboard" class="headerlink" title="安装Dashboard"></a>安装Dashboard</h3><h4 id="1、下载kubernetes-dashboard-yaml文件"><a href="#1、下载kubernetes-dashboard-yaml文件" class="headerlink" title="1、下载kubernetes-dashboard.yaml文件"></a>1、下载<code>kubernetes-dashboard.yaml</code>文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> wget https://raw.githubusercontent.com/kubernetes/dashboard/v1.10.1/src/deploy/recommended/kubernetes-dashboard.yaml</span><br></code></pre></td></tr></table></figure><h4 id="2、科学上网"><a href="#2、科学上网" class="headerlink" title="2、科学上网"></a>2、科学上网</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> vim kubernetes-dashboard.yaml</span><br><span class="hljs-meta">#</span><span class="bash"> 修改镜像名称</span><br>......<br>containers:<br>- args:<br>  - --auto-generate-certificates<br>  image: registry.aliyuncs.com/google_containers/kubernetes-dashboard-amd64:v1.10.1   # 修改成阿里源<br>  imagePullPolicy: IfNotPresent<br>......<br><span class="hljs-meta">#</span><span class="bash"> 修改Service为NodePort类型</span><br>......<br>selector:<br>  k8s-app: kubernetes-dashboard<br>type: NodePort<br>......<br></code></pre></td></tr></table></figure><h4 id="3、安装Dashboard"><a href="#3、安装Dashboard" class="headerlink" title="3、安装Dashboard"></a>3、安装<code>Dashboard</code></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> kubectl apply -f kubernetes-dashboard.yaml</span><br><span class="hljs-meta">#</span><span class="bash"> kubectl get pods -n kube-system -l k8s-app=kubernetes-dashboard</span><br>NAME                                    READY   STATUS    RESTARTS   AGE<br>kubernetes-dashboard-5dc4c54b55-c7sv2   1/1     Running   0          62s<br>[root@k8s-master ~]# kubectl get pods,svc -n kube-system -l k8s-app=kubernetes-dashboard<br>NAME                                        READY   STATUS    RESTARTS   AGE<br>pod/kubernetes-dashboard-5dc4c54b55-c7sv2   1/1     Running   0          81s<br><br>NAME                           TYPE       CLUSTER-IP       EXTERNAL-IP   PORT(S)         AGE<br>service/kubernetes-dashboard   NodePort   10.107.132.165   &lt;none&gt;        443:30114/TCP   80s<br></code></pre></td></tr></table></figure><h4 id="4、创建一个具有全局所有权限的用户来登录Dashboard"><a href="#4、创建一个具有全局所有权限的用户来登录Dashboard" class="headerlink" title="4、创建一个具有全局所有权限的用户来登录Dashboard"></a>4、创建一个具有全局所有权限的用户来登录<code>Dashboard</code></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> vim rbac.yml</span><br>apiVersion: v1<br>kind: ServiceAccount<br>metadata:<br>  name: admin-user<br>  namespace: kube-system<br>---<br>apiVersion: rbac.authorization.k8s.io/v1<br>kind: ClusterRoleBinding<br>metadata:<br>  name: admin-user<br>roleRef:<br>  apiGroup: rbac.authorization.k8s.io<br>  kind: ClusterRole<br>  name: cluster-admin<br>subjects:<br>- kind: ServiceAccount<br>  name: admin-user<br>  namespace: kube-system<br></code></pre></td></tr></table></figure><p>直接创建</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> kubectl apply -f rbac.yml</span><br><span class="hljs-meta">#</span><span class="bash"> kubectl get secret -n kube-system|grep admin</span><br>admin-user-token-wpqck                           kubernetes.io/service-account-token   3      2m38s<br></code></pre></td></tr></table></figure><h4 id="6、获取登录token"><a href="#6、获取登录token" class="headerlink" title="6、获取登录token"></a>6、获取登录<code>token</code></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep admin-user | awk <span class="hljs-string">&#x27;&#123;print $1&#125;&#x27;</span>)|grep token:</span><br>token:      eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJhZG1pbi11c2VyLXRva2VuLXdwcWNrIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImFkbWluLXVzZXIiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiIwZmUzNTRiYS1mODkxLTQ0M2UtOWUxMy0wNjE3NWEzNWI5NzMiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZS1zeXN0ZW06YWRtaW4tdXNlciJ9.Xqq3V8MmFp5ssCw4Hhzxy9YmdiVxMLsMSXnMaklOkVjHiX4B4kVGED2IDmwTh3wEi2VqYxjkRVm-b_JY2AmCfoaPMUtb4R9OZj414volWgAH1CX4VbFB0o1yr6aP3i8SKmQlQfIweEqYUWDGB5zv3ml1u0WjUGyVJeiXY0GxDAtiROelsKaK4gHGsUlIFZ8izW0xmuGDnT9hvCuztqbGsb78bFmQfAL2dKNB12rLOg01EwF0g88jvtfHiv80yX18ulP46ZK0MFx4YhTrLRjq09rAqCSnMGWPHtBSogKUQhpDkwCze61ByKlG6KM_DhFE7elQkBEj-jwvygDwvn7tMQ<br></code></pre></td></tr></table></figure><h4 id="7、使用Firefox浏览器登录Dashboard"><a href="#7、使用Firefox浏览器登录Dashboard" class="headerlink" title="7、使用Firefox浏览器登录Dashboard"></a>7、使用<code>Firefox</code>浏览器登录<code>Dashboard</code></h4><p><img src="https://ljw.howieli.cn/blog/2019-9-1/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20190830152421.png"></p><p><img src="https://ljw.howieli.cn/blog/2019-9-1/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20190830152716.png"></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;使用kubeadm方式安装kubernetes&quot;&gt;&lt;a href=&quot;#使用kubeadm方式安装kubernetes&quot; class=&quot;headerlink&quot; title=&quot;使用kubeadm方式安装kubernetes&quot;&gt;&lt;/a&gt;使用&lt;code&gt;kubeadm&lt;/code&gt;方式安装&lt;code&gt;kubernetes&lt;/code&gt;&lt;/h3&gt;</summary>
    
    
    
    <category term="kubernetes" scheme="https://www.lijiawang.org/categories/kubernetes/"/>
    
    
    <category term="kubernetes" scheme="https://www.lijiawang.org/tags/kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>harbor搭建</title>
    <link href="https://www.lijiawang.org/posts/harbor%E6%90%AD%E5%BB%BA/"/>
    <id>https://www.lijiawang.org/posts/harbor%E6%90%AD%E5%BB%BA/</id>
    <published>2019-05-31T14:49:17.000Z</published>
    <updated>2021-01-04T05:21:40.923Z</updated>
    
    <content type="html"><![CDATA[<h3 id="harbor介绍"><a href="#harbor介绍" class="headerlink" title="harbor介绍"></a>harbor介绍</h3><p>Harbor是一个用于存储和分发Docker镜像的企业级Registry服务器，通过添加一些企业必需的功能特性，例如安全、标识和管理等，扩展了开源Docker Distribution。作为一个企业级私有Registry服务器，Harbor提供了更好的性能和安全。提升用户使用Registry构建和运行环境传输镜像的效率。Harbor支持安装在多个Registry节点的镜像资源复制，镜像全部保存在私有Registry中， 确保数据和知识产权在公司内部网络中管控。另外，Harbor也提供了高级的安全特性，诸如用户管理，访问控制和活动审计等。</p><a id="more"></a><h3 id="配置网络yum源"><a href="#配置网络yum源" class="headerlink" title="配置网络yum源"></a>配置网络yum源</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">cd</span> /<span class="hljs-selector-tag">etc</span>/<span class="hljs-selector-tag">yum</span><span class="hljs-selector-class">.repos</span><span class="hljs-selector-class">.d</span><br><span class="hljs-selector-tag">rm</span> <span class="hljs-selector-tag">-rf</span> *<br><span class="hljs-selector-tag">cd</span><br><span class="hljs-selector-tag">curl</span> <span class="hljs-selector-tag">-o</span> /<span class="hljs-selector-tag">etc</span>/<span class="hljs-selector-tag">yum</span><span class="hljs-selector-class">.repos</span><span class="hljs-selector-class">.d</span>/<span class="hljs-selector-tag">CentOS-Base</span><span class="hljs-selector-class">.repo</span> <span class="hljs-selector-tag">http</span>://<span class="hljs-selector-tag">mirrors</span><span class="hljs-selector-class">.aliyun</span><span class="hljs-selector-class">.com</span>/<span class="hljs-selector-tag">repo</span>/<span class="hljs-selector-tag">Centos-7</span><span class="hljs-selector-class">.repo</span><br><span class="hljs-selector-tag">wget</span> <span class="hljs-selector-tag">-O</span> /<span class="hljs-selector-tag">etc</span>/<span class="hljs-selector-tag">yum</span><span class="hljs-selector-class">.repos</span><span class="hljs-selector-class">.d</span>/<span class="hljs-selector-tag">epel</span><span class="hljs-selector-class">.repo</span> <span class="hljs-selector-tag">http</span>://<span class="hljs-selector-tag">mirrors</span><span class="hljs-selector-class">.aliyun</span><span class="hljs-selector-class">.com</span>/<span class="hljs-selector-tag">repo</span>/<span class="hljs-selector-tag">epel-7</span><span class="hljs-selector-class">.repo</span><br></code></pre></td></tr></table></figure><h3 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 安装必要的一些系统工具</span><br>yum install -y yum-utils device-mapper-persistent-data lvm2<br><span class="hljs-comment"># 添加软件源信息</span><br>yum-config-manager --add-repo http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/docker-ce/</span>linux<span class="hljs-regexp">/centos/</span>docker-ce.repo<br><span class="hljs-comment"># 更新并安装 Docker-CE</span><br>yum makecache fast<br>yum -y install docker-ce<br><span class="hljs-comment"># 开启Docker服务</span><br>systemctl enable docker<br>systemctl restart docker<br>docker version<br></code></pre></td></tr></table></figure><h3 id="安装docker-compose"><a href="#安装docker-compose" class="headerlink" title="安装docker-compose"></a>安装docker-compose</h3><p>github上地址<a href="https://github.com/docker/compose">https://github.com/docker/compose</a></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">wget https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/docker/</span>compose<span class="hljs-regexp">/releases/</span>download<span class="hljs-regexp">/1.24.0/</span>docker-compose-Linux-x86_64<br>mv  docker-compose-Linux-x86_64 <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/bin/</span>docker-compose<br>chmod +x <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/bin/</span>docker-compose<br><span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/bin/</span>docker-compose version<br></code></pre></td></tr></table></figure><h3 id="安装harbor"><a href="#安装harbor" class="headerlink" title="安装harbor"></a>安装harbor</h3><p>项目地址<a href="https://github.com/goharbor/harbor">https://github.com/goharbor/harbor</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell">wget https://storage.googleapis.com/harbor-releases/release-1.7.0/harbor-offline-installer-v1.7.5.tgz<br>tar  xf harbor-offline-installer-v1.7.5.tgz -C /usr/share/<br>[root@harbor ~]# ll /usr/share/harbor/<br>total 572840<br>drwxr-xr-x. 3 root root        23 May 14 16:08 common<br>-rw-r--r--. 1 root root       939 Apr  1 12:07 docker-compose.chartmuseum.yml<br>-rw-r--r--. 1 root root       975 Apr  1 12:07 docker-compose.clair.yml<br>-rw-r--r--. 1 root root      1434 Apr  1 12:07 docker-compose.notary.yml<br>-rw-r--r--. 1 root root      5608 Apr  1 12:07 docker-compose.yml<br>-rw-r--r--. 1 root root      8033 Apr  1 12:07 harbor.cfg<br>-rw-r--r--. 1 root root 585234819 Apr  1 12:08 harbor.v1.7.5.tar.gz<br>-rwxr-xr-x. 1 root root      5739 Apr  1 12:07 install.sh<br>-rw-r--r--. 1 root root     11347 Apr  1 12:07 LICENSE<br>-rw-r--r--. 1 root root   1263409 Apr  1 12:07 open_source_license<br>-rwxr-xr-x. 1 root root     36337 Apr  1 12:07 prepare<br></code></pre></td></tr></table></figure><h3 id="修改harbor配置文件harbor-cfg"><a href="#修改harbor配置文件harbor-cfg" class="headerlink" title="修改harbor配置文件harbor.cfg"></a>修改harbor配置文件harbor.cfg</h3><p>在刚才解压完的目录下有harbor配置文件: harbor.cfg, 这里有几处必要配置需要修改:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> hostname设置访问地址，可以使用ip、域名，不可以设置为127.0.0.1或localhost</span><br>hostname = 192.168.1.109<br><br><span class="hljs-meta">#</span><span class="bash"> 访问协议，默认是http，也可以设置https，如果设置https，则nginx ssl需要设置on</span><br>ui_url_protocol = http<br><br><span class="hljs-meta">#</span><span class="bash"> mysql数据库root用户默认密码root123，实际使用时修改下</span><br>db_password = root123<br><br><span class="hljs-meta">#</span><span class="bash"> 启动Harbor后，管理员UI登录的密码，默认是Harbor12345</span><br>harbor_admin_password = Harbor12345<br><br><span class="hljs-meta">#</span><span class="bash"> 是否开启自注册</span><br>self_registration = on<br><br><span class="hljs-meta">#</span><span class="bash"> Token有效时间，默认30分钟</span><br>token_expiration = 30<br></code></pre></td></tr></table></figure><h3 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">cd <span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/harbor/</span><br>./install.sh<br></code></pre></td></tr></table></figure><p><img src="https://ljw.howieli.cn/blog/2019-05-14/harborlogin.png"><br><img src="https://ljw.howieli.cn/blog/2019-05-14/harbor1.png"></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs awk">cat <span class="hljs-regexp">/etc/</span>docker/daemon.json <br>&#123;<br>  <span class="hljs-string">&quot;insecure-registries&quot;</span>: [<span class="hljs-string">&quot;10.122.52.227&quot;</span>]<br>&#125;<br><span class="hljs-comment"># 重启docker服务</span><br>systemctl restart docker<br>systemctl restart docker<br></code></pre></td></tr></table></figure><h3 id="将镜像push到Harbor"><a href="#将镜像push到Harbor" class="headerlink" title="将镜像push到Harbor"></a>将镜像push到Harbor</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> images|grep centos<br><span class="hljs-attribute">centos</span>                          latest              <span class="hljs-number">9</span>f<span class="hljs-number">38484</span>d<span class="hljs-number">220</span>f        <span class="hljs-number">2</span> months ago        <span class="hljs-number">202</span>MB<br><br><span class="hljs-attribute">docker</span> tag centos:latest <span class="hljs-number">10.122.52.227</span>/library/centos:latest<br><br><span class="hljs-comment"># docker images|grep centos</span><br><span class="hljs-attribute">10</span>.<span class="hljs-number">122</span>.<span class="hljs-number">52</span>.<span class="hljs-number">227</span>/library/centos    latest              <span class="hljs-number">9</span>f<span class="hljs-number">38484</span>d<span class="hljs-number">220</span>f        <span class="hljs-number">2</span> months ago        <span class="hljs-number">202</span>MB<br><span class="hljs-attribute">centos</span>                          latest              <span class="hljs-number">9</span>f<span class="hljs-number">38484</span>d<span class="hljs-number">220</span>f        <span class="hljs-number">2</span> months ago        <span class="hljs-number">202</span>MB<br><br><span class="hljs-attribute">docker</span> push <span class="hljs-number">10.122.52.227</span>/library/centos:latest<br></code></pre></td></tr></table></figure><p><img src="https://ljw.howieli.cn/blog/2019-05-14/login.png"><br><img src="https://ljw.howieli.cn/blog/2019-05-14/harbor2.png"></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;harbor介绍&quot;&gt;&lt;a href=&quot;#harbor介绍&quot; class=&quot;headerlink&quot; title=&quot;harbor介绍&quot;&gt;&lt;/a&gt;harbor介绍&lt;/h3&gt;&lt;p&gt;Harbor是一个用于存储和分发Docker镜像的企业级Registry服务器，通过添加一些企业必需的功能特性，例如安全、标识和管理等，扩展了开源Docker Distribution。作为一个企业级私有Registry服务器，Harbor提供了更好的性能和安全。提升用户使用Registry构建和运行环境传输镜像的效率。Harbor支持安装在多个Registry节点的镜像资源复制，镜像全部保存在私有Registry中， 确保数据和知识产权在公司内部网络中管控。另外，Harbor也提供了高级的安全特性，诸如用户管理，访问控制和活动审计等。&lt;/p&gt;</summary>
    
    
    
    <category term="docker" scheme="https://www.lijiawang.org/categories/docker/"/>
    
    
    <category term="docker" scheme="https://www.lijiawang.org/tags/docker/"/>
    
    <category term="harbor" scheme="https://www.lijiawang.org/tags/harbor/"/>
    
  </entry>
  
  <entry>
    <title>使用Kubeadm安装最新版Kubernetes 1.12</title>
    <link href="https://www.lijiawang.org/posts/%E4%BD%BF%E7%94%A8Kubeadm%E5%AE%89%E8%A3%85%E6%9C%80%E6%96%B0%E7%89%88Kubernetes-1-12/"/>
    <id>https://www.lijiawang.org/posts/%E4%BD%BF%E7%94%A8Kubeadm%E5%AE%89%E8%A3%85%E6%9C%80%E6%96%B0%E7%89%88Kubernetes-1-12/</id>
    <published>2018-10-25T13:40:57.000Z</published>
    <updated>2020-12-31T06:52:57.796Z</updated>
    
    <content type="html"><![CDATA[<h3 id="使用Kubeadm安装最新版Kubernetes-1-12"><a href="#使用Kubeadm安装最新版Kubernetes-1-12" class="headerlink" title="使用Kubeadm安装最新版Kubernetes 1.12"></a>使用Kubeadm安装最新版Kubernetes 1.12</h3><blockquote><p>kubeadm是Kubernetes官方提供的用于快速安装Kubernetes集群的工具，伴随Kubernetes每个版本的发布都会同步更新，kubeadm会对集群配置方面的一些实践做调整，通过实验kubeadm可以学习到Kubernetes官方在集群配置上一些新的最佳实践。</p></blockquote><a id="more"></a><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><h4 id="系统配置"><a href="#系统配置" class="headerlink" title="系统配置"></a>系统配置</h4><p>我这有三台centos7.5主机如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">172.20.16.243  k8smaster<br>172.20.14.51   node01<br>172.20.14.92   node02<br></code></pre></td></tr></table></figure><p>操作系统都为centos7.5</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> cat /etc/redhat-release</span> <br>CentOS Linux release 7.5.1804 (Core)<br><span class="hljs-meta">#</span><span class="bash"> uname -a</span><br>Linux k8smaster 3.10.0-862.14.4.el7.x86_64 #1 SMP Wed Sep 26 15:12:11 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux<br></code></pre></td></tr></table></figure><h4 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h4><p>测试使用的Kubernetes集群可由一个master主机及一个以上（建议至少两个）node主机组成，本测试环境将由k8smaster、node01和node02三个独立的主机组成，它们分别拥有8核心的CPU及8G的内存资源。</p><h4 id="初始环境"><a href="#初始环境" class="headerlink" title="初始环境"></a>初始环境</h4><p>1.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> yum -y update</span><br></code></pre></td></tr></table></figure><p>2.借助于NTP服务设定各节点时间精确同步；</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install ntpd<br></code></pre></td></tr></table></figure><p>3.配置hosts解析;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> cat /etc/hosts</span><br>127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4<br>::1         localhost localhost.localdomain localhost6 localhost6.localdomain6<br>172.20.16.243  k8smaster<br>172.20.14.51   node01<br>172.20.14.92   node02<br></code></pre></td></tr></table></figure><p>4.关闭各节点的iptables或firewalld服务，并确保它们被禁止随系统引导过程启动；</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl stop firewalld.service <br>systemctl stop iptables.service<br>systemctl disable firewalld.service<br>systemctl disable iptables.service<br></code></pre></td></tr></table></figure><p>5.各节点禁用SELinux；</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">sed -i &#x27;s@^\(SELINUX=\).*@\1disabled@&#x27; /etc/sysconfig/selinux<br>setenforce 0<br></code></pre></td></tr></table></figure><p>6.禁用Swap设备;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> swapoff -a</span><br>而后编辑/etc/fstab配置文件，注释用于挂载Swap设备的所有行;<br><span class="hljs-meta">#</span><span class="bash"> free -m</span> <br>              total        used        free      shared  buff/cache   available<br>Mem:           7805         750        6061          18         993        6655<br>Swap:             0           0           0<br></code></pre></td></tr></table></figure><p>7.若要使用ipvs模型的proxy，各节点还需要载入ipvs相关的各模块；</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> cat /etc/sysconfig/modules/ipvs.modules</span><br><span class="hljs-meta">#</span><span class="bash">!/bin/bash</span><br>ipvs_modules_dir=&quot;/usr/lib/modules/$(uname -r)/kernel/net/netfilter/ipvs&quot;<br>for i in $(ls $ipvs_modules_dir | sed  -r &#x27;s@(.*).ko.xz@\1@&#x27;); do<br>    /sbin/modinfo -F filename $i  &amp;&gt; /dev/null<br>    if [ $? -eq 0 ]; then<br>        /sbin/modprobe $i<br>    fi<br>done<br><span class="hljs-meta">#</span><span class="bash"> chmod +x /etc/sysconfig/modules/ipvs.modules</span> <br><span class="hljs-meta">#</span><span class="bash"> bash /etc/sysconfig/modules/ipvs.modules</span> <br></code></pre></td></tr></table></figure><h3 id="安装k8s相关的软件包-在各节点执行"><a href="#安装k8s相关的软件包-在各节点执行" class="headerlink" title="安装k8s相关的软件包(在各节点执行)"></a>安装k8s相关的软件包(在各节点执行)</h3><h4 id="获取docker-ce的配置仓库文件"><a href="#获取docker-ce的配置仓库文件" class="headerlink" title="获取docker-ce的配置仓库文件"></a>获取docker-ce的配置仓库文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> wget https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo -O /etc/yum.repos.d/docker.repo</span><br></code></pre></td></tr></table></figure><h4 id="配置kubernetes的yum仓库"><a href="#配置kubernetes的yum仓库" class="headerlink" title="配置kubernetes的yum仓库"></a>配置kubernetes的yum仓库</h4><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-comment"># cat /etc/yum.repos.d/kubernetes.repo </span><br><span class="hljs-section">[kubernetes]</span><br><span class="hljs-attr">name</span>=Kubernetes<br><span class="hljs-attr">baseurl</span>=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x<span class="hljs-number">86_64</span>/<br><span class="hljs-attr">gpgcheck</span>=<span class="hljs-number">1</span><br><span class="hljs-attr">gpgkey</span>=https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg<br><span class="hljs-attr">enabled</span>=<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h4 id="安装相关软件包"><a href="#安装相关软件包" class="headerlink" title="安装相关软件包"></a>安装相关软件包</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> yum install -y --<span class="hljs-built_in">setopt</span>=obsoletes=0 docker-ce-17.03.2.ce docker-ce-selinux-17.03.2.ce</span><br><span class="hljs-meta">#</span><span class="bash"> yum install kubelet kubeadm kubectl</span><br></code></pre></td></tr></table></figure><h3 id="配置并启动docker服务-在各节点执行"><a href="#配置并启动docker服务-在各节点执行" class="headerlink" title="配置并启动docker服务(在各节点执行)"></a>配置并启动docker服务(在各节点执行)</h3><p>1.编辑systemctl的Docker启动文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">sed -i &quot;13i ExecStartPost=/usr/sbin/iptables -P FORWARD ACCEPT&quot; /usr/lib/systemd/system/docker.service<br>systemctl daemon-reload<br>systemctl start docker.service<br></code></pre></td></tr></table></figure><p>2.配置Docker源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">mkdir -p /etc/docker<br>echo -e &#x27;&#123;\n&quot;insecure-registries&quot;:[&quot;k8s.gcr.io&quot;, &quot;gcr.io&quot;, &quot;quay.io&quot;]\n&#125;&#x27; &gt;/etc/docker/daemon.json<br>systemctl daemon-reload<br>systemctl restart docker<br></code></pre></td></tr></table></figure><p>3.设置docker和kubelet服务开机自启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> systemctl <span class="hljs-built_in">enable</span> docker kubelet</span><br></code></pre></td></tr></table></figure><h3 id="初始化master节点"><a href="#初始化master节点" class="headerlink" title="初始化master节点"></a>初始化master节点</h3><p>在运行初始化命令之前先运行如下命令单独获取相关的镜像文件，而后再运行后面的kubeadm init命令，以便于观察到镜像文件的下载过程(可选择)。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> kubeadm config images pull</span><br></code></pre></td></tr></table></figure><p>使用kubeadm初始化集群，选择k8smaster作为Master Node，在k8smaster上执行下面的命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">kubeadm init --kubernetes-version=v1.12.1 \<br>    --pod-network-cidr=10.244.0.0/16 \<br>--service-cidr=10.96.0.0/12 <br></code></pre></td></tr></table></figure><p>命令中的各选项简单说明如下：<br>    (1) –kubernetes-version选项的版本号用于指定要部署的Kubenretes程序版本，它需要与当前的kubeadm支持的版本保持一致；<br>    (2) –pod-network-cidr选项用于指定分Pod分配使用的网络地址，它通常应该与要部署使用的网络插件（例如flannel、calico等）的默认设定保持一致，10.244.0.0/16是flannel默认使用的网络；<br>    (3) –service-cidr用于指定为Service分配使用的网络地址，它由kubernetes管理，默认即为10.96.0.0/12.<br>命令运行结束后，请记录最后的kubeadm join命令输出的最后提示的操作步骤,这是初始化node节点要用到的。</p><h3 id="初始化kubectl"><a href="#初始化kubectl" class="headerlink" title="初始化kubectl"></a>初始化kubectl</h3><p>kubectl是kube-apiserver的命令行客户端程序，实现了除系统部署之外的几乎全部的管理操作，是kubernetes管理员使用最多的命令之一。kubectl需经由API server认证及授权后方能执行相应的管理操作，kubeadm部署的集群为其生成了一个具有管理员权限的认证配置文件/etc/kubernetes/admin.conf，它可由kubectl通过默认的“$HOME/.kube/config”的路径进行加载。当然，用户也可在kubectl命令上使用–kubeconfig选项指定一个别的位置<br>复制认证为Kubernetes系统管理员的配置文件至目标用户（例如当前用户root）的家目录下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">mkdir -p $HOME/.kube<br>sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config<br>sudo chown $(id -u):$(id -g) $HOME/.kube/config<br></code></pre></td></tr></table></figure><h3 id="添加flannel网络插件"><a href="#添加flannel网络插件" class="headerlink" title="添加flannel网络插件"></a>添加flannel网络插件</h3><p>Kubernetes系统上Pod网络的实现依赖于第三方插件进行，这类插件有近数十种之多，较为著名的有flannel、calico、canal和kube-router等，简单易用的实现是为CoreOS提供的flannel项目。下面的命令用于在线部署flannel至Kubernetes系统之上：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</span><br></code></pre></td></tr></table></figure><p>检查flannel的pod状态</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">  kubectl get pods -n kube-system -l app=flannel</span><br>NAME                          READY   STATUS    RESTARTS   AGE<br>kube-flannel-ds-amd64-95wzl   1/1     Running   1          22h<br></code></pre></td></tr></table></figure><p>验证master节点是否就绪</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> kubectl get nodes</span><br>NAME        STATUS   ROLES    AGE   VERSION<br>k8smaster   Ready    master   22h   v1.12.1<br></code></pre></td></tr></table></figure><h3 id="添加node节点到集群中-在node01和node02上执行"><a href="#添加node节点到集群中-在node01和node02上执行" class="headerlink" title="添加node节点到集群中(在node01和node02上执行)"></a>添加node节点到集群中(在node01和node02上执行)</h3><p>添加node节点</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> kubeadm join 172.20.16.243:6443 --token 7l22o0.x1rwp6ffh30tppyz --discovery-token-ca-cert-hash sha256:20efefe8d3ef236219dab4c09e26d933fd9b8754099467babaa668076a230f49</span><br></code></pre></td></tr></table></figure><p>检查node节点是否加入集群(在master节点上执行)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> kubectl get nodes</span><br>NAME        STATUS   ROLES    AGE   VERSION<br>k8smaster   Ready    master   22h   v1.12.1<br>node01      Ready    &lt;none&gt;   20h   v1.12.1<br>node02      Ready    &lt;none&gt;   20h   v1.12.1<br></code></pre></td></tr></table></figure><h3 id="如何从集群中移除Node"><a href="#如何从集群中移除Node" class="headerlink" title="如何从集群中移除Node"></a>如何从集群中移除Node</h3><p>如果需要从集群中移除node02这个Node执行下面的命令：<br>在master节点上执行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> kubectl drain node02 --delete-local-data --force --ignore-daemonsets</span><br><span class="hljs-meta">#</span><span class="bash"> kubectl delete node node02</span><br></code></pre></td></tr></table></figure><p>在node02上执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">kubeadm reset<br>ifconfig cni0 down<br>ip link delete cni0<br>ifconfig flannel.1 down<br>ip link delete flannel.1<br>rm -rf /var/lib/cni/<br></code></pre></td></tr></table></figure><h3 id="查看k8s相关的服务是否正常"><a href="#查看k8s相关的服务是否正常" class="headerlink" title="查看k8s相关的服务是否正常"></a>查看k8s相关的服务是否正常</h3><p>几乎所有的kubernetes组件本身也在pod里运行，执行以下命令。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> kubectl get pod --all-namespaces -o wide</span><br>NAMESPACE     NAME                                READY   STATUS    RESTARTS   AGE   IP              NODE        NOMINATED NODE<br>default       myapp-69587444dd-6jdr5              1/1     Running   1          20h   10.244.2.3      node02      &lt;none&gt;<br>kube-system   coredns-576cbf47c7-5wfbp            1/1     Running   30         23h   10.244.0.10     k8smaster   &lt;none&gt;<br>kube-system   coredns-576cbf47c7-qfb87            1/1     Running   30         23h   10.244.0.11     k8smaster   &lt;none&gt;<br>kube-system   etcd-k8smaster                      1/1     Running   1          23h   172.20.16.243   k8smaster   &lt;none&gt;<br>kube-system   kube-apiserver-k8smaster            1/1     Running   1          23h   172.20.16.243   k8smaster   &lt;none&gt;<br>kube-system   kube-controller-manager-k8smaster   1/1     Running   1          23h   172.20.16.243   k8smaster   &lt;none&gt;<br>kube-system   kube-flannel-ds-amd64-95wzl         1/1     Running   1          23h   172.20.16.243   k8smaster   &lt;none&gt;<br>kube-system   kube-flannel-ds-amd64-lc6x7         1/1     Running   1          20h   172.20.14.92    node02      &lt;none&gt;<br>kube-system   kube-flannel-ds-amd64-xdvxf         1/1     Running   1          20h   172.20.14.51    node01      &lt;none&gt;<br>kube-system   kube-proxy-9cq4d                    1/1     Running   1          23h   172.20.16.243   k8smaster   &lt;none&gt;<br>kube-system   kube-proxy-wczgd                    1/1     Running   1          20h   172.20.14.51    node01      &lt;none&gt;<br>kube-system   kube-proxy-xnxxm                    1/1     Running   1          20h   172.20.14.92    node02      &lt;none&gt;<br>kube-system   kube-scheduler-k8smaster            1/1     Running   1          23h   172.20.16.243   k8smaster   &lt;none&gt;<br>kube-system   tiller-deploy-6f6fd74b68-qndkl      1/1     Running   0          19m   10.244.1.2      node01      &lt;none&gt;<br></code></pre></td></tr></table></figure><p>kubelet是唯一没有以容器形式运行的kubernetes组件，在centos7中可以通过systemd服务运行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> systemctl status kubelet.service</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;使用Kubeadm安装最新版Kubernetes-1-12&quot;&gt;&lt;a href=&quot;#使用Kubeadm安装最新版Kubernetes-1-12&quot; class=&quot;headerlink&quot; title=&quot;使用Kubeadm安装最新版Kubernetes 1.12&quot;&gt;&lt;/a&gt;使用Kubeadm安装最新版Kubernetes 1.12&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;kubeadm是Kubernetes官方提供的用于快速安装Kubernetes集群的工具，伴随Kubernetes每个版本的发布都会同步更新，kubeadm会对集群配置方面的一些实践做调整，通过实验kubeadm可以学习到Kubernetes官方在集群配置上一些新的最佳实践。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="kubernetes" scheme="https://www.lijiawang.org/categories/kubernetes/"/>
    
    
    <category term="kubernetes" scheme="https://www.lijiawang.org/tags/kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>kolla部署openstack对接华为san存储</title>
    <link href="https://www.lijiawang.org/posts/kolla%E9%83%A8%E7%BD%B2openstack%E5%AF%B9%E6%8E%A5%E5%8D%8E%E4%B8%BAsan%E5%AD%98%E5%82%A8/"/>
    <id>https://www.lijiawang.org/posts/kolla%E9%83%A8%E7%BD%B2openstack%E5%AF%B9%E6%8E%A5%E5%8D%8E%E4%B8%BAsan%E5%AD%98%E5%82%A8/</id>
    <published>2018-08-02T03:25:25.000Z</published>
    <updated>2020-12-31T06:52:38.463Z</updated>
    
    <content type="html"><![CDATA[<h3 id="kolla部署openstack对接华为san存储"><a href="#kolla部署openstack对接华为san存储" class="headerlink" title="kolla部署openstack对接华为san存储"></a>kolla部署openstack对接华为san存储</h3><p>openstack O版对接华为SAN存储（kolla部署模式）</p><a id="more"></a><h3 id="修改globals-yml文件"><a href="#修改globals-yml文件" class="headerlink" title="修改globals.yml文件"></a>修改globals.yml文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> grep enable_multipathd /etc/kolla/globals.yml</span> <br>enable_multipathd: &quot;yes&quot;<br></code></pre></td></tr></table></figure><h3 id="修改multinode文件"><a href="#修改multinode文件" class="headerlink" title="修改multinode文件"></a>修改multinode文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> vim multinode</span><br><span class="hljs-meta">#</span><span class="bash"> Multipathd</span><br>[multipathd:children]<br>control<br>compute<br></code></pre></td></tr></table></figure><h3 id="修改config下的cinder-conf文件"><a href="#修改config下的cinder-conf文件" class="headerlink" title="修改config下的cinder.conf文件"></a>修改config下的cinder.conf文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> cat /etc/kolla/config/cinder.conf</span> <br>[DEFAULT]<br>enabled_backends = rbd-1,18000V1_FC,18000V1_FC_SAS01,18000V1_FC_SAS02<br>host = drkmcontrol<br><br>[18000V1_FC]<br>volume_driver = cinder.volume.drivers.huawei.huawei_driver.HuaweiFCDriver<br>cinder_huawei_conf_file = /etc/cinder/cinder_huawei_conf.xml<br>volume_backend_name = 18000V1_FC<br><br>[18000V1_FC_SAS01]<br>volume_driver = cinder.volume.drivers.huawei.huawei_driver.HuaweiFCDriver<br>cinder_huawei_conf_file = /etc/cinder/cinder_huawei_sas01_conf.xml<br>volume_backend_name = 18000V1_FC_SAS01<br><br>[18000V1_FC_SAS02]<br>volume_driver = cinder.volume.drivers.huawei.huawei_driver.HuaweiFCDriver<br>cinder_huawei_conf_file = /etc/cinder/cinder_huawei_sas02_conf.xml<br>volume_backend_name = 18000V1_FC_SAS02<br></code></pre></td></tr></table></figure><h3 id="编写xml文件"><a href="#编写xml文件" class="headerlink" title="编写xml文件"></a>编写xml文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> cat /etc/kolla/cinder-volume/cinder_huawei_sas01_conf.xml</span> <br>&lt;?xml version=&#x27;1.0&#x27; encoding=&#x27;UTF-8&#x27;?&gt;<br>&lt;config&gt;<br>    &lt;Storage&gt;<br>        &lt;Product&gt;18000&lt;/Product&gt;<br>        &lt;Protocol&gt;FC&lt;/Protocol&gt;<br>        &lt;RestURL&gt;https://10.15.188.100:8088/deviceManager/rest/&lt;/RestURL&gt;<br>        &lt;UserName&gt;openstack&lt;/UserName&gt;<br>        &lt;UserPassword&gt;VFR$5tgb3$&lt;/UserPassword&gt;<br>    &lt;/Storage&gt;<br>    &lt;LUN&gt; <br>        &lt;StoragePool&gt;StoragePool_SMB0_1;StoragePool_SMB0_2;StoragePool_SMB0_3;StoragePool_SMB0_4&lt;/StoragePool&gt;<br>    &lt;/LUN&gt;<br>&lt;/config&gt;<br><br><br><span class="hljs-meta">#</span><span class="bash"> cat /etc/kolla/cinder-volume/cinder_huawei_sas02_conf.xml</span> <br>&lt;?xml version=&#x27;1.0&#x27; encoding=&#x27;UTF-8&#x27;?&gt;<br>&lt;config&gt;<br>    &lt;Storage&gt;<br>        &lt;Product&gt;18000&lt;/Product&gt;<br>        &lt;Protocol&gt;FC&lt;/Protocol&gt;<br>        &lt;RestURL&gt;https://10.15.188.100:8088/deviceManager/rest/&lt;/RestURL&gt;<br>        &lt;UserName&gt;openstack&lt;/UserName&gt;<br>        &lt;UserPassword&gt;VFR$5tgb3$&lt;/UserPassword&gt;<br>    &lt;/Storage&gt;<br>    &lt;LUN&gt; <br>        &lt;StoragePool&gt;StoragePool_SMB0_5;StoragePool_SMB1_1;StoragePool_SMB1_2&lt;/StoragePool&gt;<br>    &lt;/LUN&gt;<br>&lt;/config&gt;<br><br><br><span class="hljs-meta">#</span><span class="bash"> cat /etc/kolla/cinder-volume/cinder_huawei_conf.xml</span> <br>&lt;?xml version=&#x27;1.0&#x27; encoding=&#x27;UTF-8&#x27;?&gt;<br>&lt;config&gt;<br>    &lt;Storage&gt;<br>        &lt;Product&gt;18000&lt;/Product&gt;<br>        &lt;Protocol&gt;FC&lt;/Protocol&gt;<br>        &lt;RestURL&gt;https://10.15.188.100:8088/deviceManager/rest/&lt;/RestURL&gt;<br>        &lt;UserName&gt;openstack&lt;/UserName&gt;<br>        &lt;UserPassword&gt;VFR$5tgb3$&lt;/UserPassword&gt;<br>    &lt;/Storage&gt;<br>    &lt;LUN&gt; <br>        &lt;StoragePool&gt;StoragePool_SMB0_8&lt;/StoragePool&gt;<br>    &lt;/LUN&gt;<br>&lt;/config&gt;<br></code></pre></td></tr></table></figure><h3 id="修改cinder-volume-json-j2-增加以下内容"><a href="#修改cinder-volume-json-j2-增加以下内容" class="headerlink" title="修改cinder-volume.json.j2,增加以下内容"></a>修改cinder-volume.json.j2,增加以下内容</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> vim /usr/share/kolla-ansible/ansible/roles/cinder/templates/cinder-volume.json.j2</span><br>        &#123;<br>            &quot;source&quot;: &quot;&#123;&#123; container_config_directory &#125;&#125;/cinder_*_conf.xml&quot;,<br>            &quot;dest&quot;: &quot;/etc/cinder/&quot;,<br>            &quot;owner&quot;: &quot;cinder&quot;,<br>            &quot;perm&quot;: &quot;0600&quot;<br>        &#125;,<br></code></pre></td></tr></table></figure><h3 id="利用ansible下发配置文件"><a href="#利用ansible下发配置文件" class="headerlink" title="利用ansible下发配置文件"></a>利用ansible下发配置文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> ansible -i multinode control -m copy -a <span class="hljs-string">&quot;src=/etc/kolla/cinder-volume/cinder_huawei_* dest=/etc/kolla/cinder-volume/&quot;</span></span><br></code></pre></td></tr></table></figure><h3 id="部署cinder"><a href="#部署cinder" class="headerlink" title="部署cinder"></a>部署cinder</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> kolla-ansible -i multinode reconfigure -t cinder</span><br><br><span class="hljs-meta">#</span><span class="bash"> cinder service-list</span><br>+------------------+------------------------------+------+---------+-------+----------------------------+-----------------+<br>| Binary           | Host                         | Zone | Status  | State | Updated_at                 | Disabled Reason |<br>+------------------+------------------------------+------+---------+-------+----------------------------+-----------------+<br>| cinder-backup    | drkmcontrol                  | nova | enabled | up    | 2018-06-27T02:13:58.000000 | -               |<br>| cinder-scheduler | drkmcontrol                  | nova | enabled | up    | 2018-06-27T02:13:52.000000 | -               |<br>| cinder-volume    | drkmcontrol@18000V1_FC       | nova | enabled | up    | 2018-06-27T02:13:58.000000 | -               |<br>| cinder-volume    | drkmcontrol@18000V1_FC_SAS01 | nova | enabled | up    | 2018-06-27T02:13:51.000000 | -               |<br>| cinder-volume    | drkmcontrol@18000V1_FC_SAS02 | nova | enabled | up    | 2018-06-27T02:13:51.000000 | -               |<br>| cinder-volume    | drkmcontrol@rbd-1            | nova | enabled | up    | 2018-06-27T02:13:56.000000 | -               |<br>+------------------+------------------------------+------+---------+-------+----------------------------+-----------------+<br></code></pre></td></tr></table></figure><h3 id="查看HBA卡ww暗号"><a href="#查看HBA卡ww暗号" class="headerlink" title="查看HBA卡ww暗号"></a>查看HBA卡ww暗号</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@drkm01070104u config]# cat /sys/class/fc_host/host2/port_id <br>0x3f0000<br>[root@drkm01070104u config]# cat /sys/class/fc_host/host1/port_id <br>0x350000<br><br></code></pre></td></tr></table></figure><h3 id="配置cinder多后端"><a href="#配置cinder多后端" class="headerlink" title="配置cinder多后端"></a>配置cinder多后端</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> cinder type-create Ceph</span><br><br><span class="hljs-meta">#</span><span class="bash"> cinder type-list</span><br>+--------------------------------------+------------------+-------------+-----------+<br>| ID                                   | Name             | Description | Is_Public |<br>+--------------------------------------+------------------+-------------+-----------+<br>| 2996c5a8-e312-42b8-b7f1-ca649a32eadb | 标准云盘FC01-SAN |             | True      |<br>| 8f77dc78-689d-40ae-a673-dba37eaf7004 | 标准云盘FC02-SAN |             | True      |<br>| ac318ed1-7de2-4ebb-8233-c35301ba77bd | Ceph             |             | True      |<br>| bb5298dc-3790-4f06-8e26-b28c3fc7b56e | 高性能FC-SAN     |             | True      |<br>+--------------------------------------+------------------+-------------+-----------+<br><br><span class="hljs-meta">#</span><span class="bash"> cinder type-key Ceph <span class="hljs-built_in">set</span> volume_backend_name=rbd-1</span><br><span class="hljs-meta">#</span><span class="bash"> cinder  extra-specs-list</span><br>+--------------------------------------+------------------+---------------------------------------------+<br>| ID                                   | Name             | extra_specs                                 |<br>+--------------------------------------+------------------+---------------------------------------------+<br>| 2996c5a8-e312-42b8-b7f1-ca649a32eadb | 标准云盘FC01-SAN | &#123;&#x27;volume_backend_name&#x27;: &#x27;18000V1_FC_SAS01&#x27;&#125; |<br>| 8f77dc78-689d-40ae-a673-dba37eaf7004 | 标准云盘FC02-SAN | &#123;&#x27;volume_backend_name&#x27;: &#x27;18000V1_FC_SAS02&#x27;&#125; |<br>| ac318ed1-7de2-4ebb-8233-c35301ba77bd | Ceph             | &#123;&#x27;volume_backend_name&#x27;: &#x27;rbd-1&#x27;&#125;            |<br>| bb5298dc-3790-4f06-8e26-b28c3fc7b56e | 高性能FC-SAN     | &#123;&#x27;volume_backend_name&#x27;: &#x27;18000V1_FC&#x27;&#125;       |<br>+--------------------------------------+------------------+---------------------------------------------+<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;kolla部署openstack对接华为san存储&quot;&gt;&lt;a href=&quot;#kolla部署openstack对接华为san存储&quot; class=&quot;headerlink&quot; title=&quot;kolla部署openstack对接华为san存储&quot;&gt;&lt;/a&gt;kolla部署openstack对接华为san存储&lt;/h3&gt;&lt;p&gt;openstack O版对接华为SAN存储（kolla部署模式）&lt;/p&gt;</summary>
    
    
    
    <category term="openstack" scheme="https://www.lijiawang.org/categories/openstack/"/>
    
    
    <category term="openstack" scheme="https://www.lijiawang.org/tags/openstack/"/>
    
  </entry>
  
  <entry>
    <title>docker网络</title>
    <link href="https://www.lijiawang.org/posts/docker%E7%BD%91%E7%BB%9C/"/>
    <id>https://www.lijiawang.org/posts/docker%E7%BD%91%E7%BB%9C/</id>
    <published>2018-06-14T01:44:58.000Z</published>
    <updated>2020-12-31T06:52:19.062Z</updated>
    
    <content type="html"><![CDATA[<h3 id="docker四种单节点网络"><a href="#docker四种单节点网络" class="headerlink" title="docker四种单节点网络"></a>docker四种单节点网络</h3><p><code>Docker</code>在创建容器时有四种网络模式，<code>bridge</code>为默认不需要用<code>-–net</code>去指定，其他三种模式需要在创建容器时使用<code>–-net</code>去指定。<br>四种单节点网络模式如下：<br><code>none</code>模式，使用<code>–-net=none</code>指定；<br><code>host</code>模式，使用<code>–-net=host</code>指定；<br><code>bridge</code>模式，使用<code>–-net=bridge</code>指定，默认设置；<br><code>container</code>模式，使用<code>–-net=container</code>:容器名称或ID指定。<br>在<code>Docker</code>安装时会自动在<code>host</code>上创建三个网络,我们可以通过<code>docker network ls</code>查看：<br><img src="https://ljw.howieli.cn/blog/2018-06-12/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20180612122600.png"></p><a id="more"></a><h3 id="none网络"><a href="#none网络" class="headerlink" title="none网络"></a>none网络</h3><p><code>none</code> 网络就是什么都没有的网络。挂在这个网络下的容器除了 <code>lo</code>，没有其他任何网卡。容器创建时，可以通过 <code>--network=none</code> 指定使用 <code>none</code> 网络。<br><img src="https://ljw.howieli.cn/blog/2018-06-12/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20180612155934.png"><br>此模式下创建容器是不会为容器配置任何网络参数的，如：容器网卡、<code>IP</code>、通信路由等，全部需要自己去配置。<br>其应用场景，封闭意味着隔离，一些对安全性要求高并且不需要联网的应用可以使用 <code>none</code> 网络，比如唯一用途是生成随机密码，就可以放到 <code>none</code> 网络中避免密码被窃取。</p><h3 id="host网络"><a href="#host网络" class="headerlink" title="host网络"></a>host网络</h3><p>连接到 <code>host</code> 网络的容器共享 <code>Docker host</code> 的网络栈，容器的网络配置与 host 完全一样。可以通过 <code>--network=host</code>指定使用 <code>host</code> 网络。<br><code>Host</code> 模式并没有为容器创建一个隔离的网络环境。而之所以称之为<code>host</code>模式，是因为该模式下的 <code>Docker</code> 容器会和 <code>host</code> 宿主机共享同一个网络 <code>namespace</code>，故 <code>Docker Container</code>可以和宿主机一样，使用宿主机的<code>eth0</code>，实现和外界的通信。换言之，<code>Docker Container</code>的 <code>IP</code> 地址即为宿主机 <code>eth0</code> 的 <code>IP</code> 地址。其特点包括：</p><ul><li>这种模式下的容器没有隔离的 <code>network namespace</code></li><li>容器的 <code>IP</code> 地址同 <code>Docker host</code> 的 <code>IP</code> 地址</li><li>需要注意容器中服务的端口号不能与 <code>Docker host</code> 上已经使用的端口号相冲突</li><li><code>host</code> 模式能够和其它模式共存</li></ul><p><img src="https://ljw.howieli.cn/blog/2018-06-12/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20180612160912.png"></p><p>直接使用 <code>Docker host</code> 的网络最大的好处就是性能，如果容器对网络传输效率有较高要求，则可以选择 <code>host</code> 网络。当然不便之处就是牺牲一些灵活性，比如要考虑端口冲突问题，<code>Docker host</code> 上已经使用的端口就不能再用了.<br><code>Docker host</code> 的另一个用途是让容器可以直接配置 <code>host</code> 网路。比如某些跨 <code>host</code> 的网络解决方案，其本身也是以容器方式运行的，这些方案需要对网络进行配置，比如管理 <code>iptables</code>。</p><h3 id="bridge网络"><a href="#bridge网络" class="headerlink" title="bridge网络"></a>bridge网络</h3><p><code>Docker</code> 安装时会创建一个命名为 <code>docker0</code> 的 <code>linux bridge</code>。如果不指定<code>--network</code>，创建的容器默认都会挂到 <code>docker0</code> 上。<br><img src="https://ljw.howieli.cn/blog/2018-06-12/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20180612165740.png"><br>当前 <code>docker0</code> 上没有任何其他网络设备，我们创建一个容器看看有什么变化。<br><img src="https://ljw.howieli.cn/blog/2018-06-12/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20180612170225.png"></p><p>当创建httpd容器后，一个新的网络接口<code>veth303a751</code>被挂到了<code>docker0</code>上，<code>veth303a751</code>就是新创建的虚拟网卡。当<code>stop</code>掉<code>httpd</code>容器虚拟网卡消失。<br>下图是<code>docker bridge</code>模式网络架构图<br><img src="https://ljw.howieli.cn/blog/2018-06-12/docker0.png"></p><p><code>host</code>网络关键就是<code>NAT</code>，我们可以查看一下<code>docker host</code>上的<code>iptables</code>规则<br><img src="https://ljw.howieli.cn/blog/2018-06-12/docker3.png"><br>其含义是：如果网桥 <code>docker0</code> 收到来自 <code>172.17.0.0/16</code> 网段的外出包，把它交给 <code>MASQUERADE</code> 处理。而 <code>MASQUERADE</code> 的处理方式是将包的源地址替换成 <code>host</code> 的地址发送出去，即做了一次网络地址转换（<code>NAT</code>）。</p><h3 id="container网络"><a href="#container网络" class="headerlink" title="container网络"></a>container网络</h3><p>这个模式指定新创建的容器和已经存在的一个容器共享一个<code>Network Namespace</code>，而不是和宿主机共享。新创建的容器不会创建自己的网卡，配置自己的<code>IP</code>，而是和一个指定的容器共享IP、端口范围等。同样，两个容器除了网络方面，其他的如文件系统、进程列表等还是隔离的。两个容器的进程可以通过<code>lo</code>网卡设备通信。<br>使用<code>–-net=container:CONIAINER ID</code>模式启动容器：<br><img src="https://ljw.howieli.cn/blog/2018-06-12/docker1.png"></p><p><img src="https://ljw.howieli.cn/blog/2018-06-12/docker2.png"></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;docker四种单节点网络&quot;&gt;&lt;a href=&quot;#docker四种单节点网络&quot; class=&quot;headerlink&quot; title=&quot;docker四种单节点网络&quot;&gt;&lt;/a&gt;docker四种单节点网络&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Docker&lt;/code&gt;在创建容器时有四种网络模式，&lt;code&gt;bridge&lt;/code&gt;为默认不需要用&lt;code&gt;-–net&lt;/code&gt;去指定，其他三种模式需要在创建容器时使用&lt;code&gt;–-net&lt;/code&gt;去指定。&lt;br&gt;四种单节点网络模式如下：&lt;br&gt;&lt;code&gt;none&lt;/code&gt;模式，使用&lt;code&gt;–-net=none&lt;/code&gt;指定；&lt;br&gt;&lt;code&gt;host&lt;/code&gt;模式，使用&lt;code&gt;–-net=host&lt;/code&gt;指定；&lt;br&gt;&lt;code&gt;bridge&lt;/code&gt;模式，使用&lt;code&gt;–-net=bridge&lt;/code&gt;指定，默认设置；&lt;br&gt;&lt;code&gt;container&lt;/code&gt;模式，使用&lt;code&gt;–-net=container&lt;/code&gt;:容器名称或ID指定。&lt;br&gt;在&lt;code&gt;Docker&lt;/code&gt;安装时会自动在&lt;code&gt;host&lt;/code&gt;上创建三个网络,我们可以通过&lt;code&gt;docker network ls&lt;/code&gt;查看：&lt;br&gt;&lt;img src=&quot;https://ljw.howieli.cn/blog/2018-06-12/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20180612122600.png&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="docker" scheme="https://www.lijiawang.org/categories/docker/"/>
    
    
    <category term="docker" scheme="https://www.lijiawang.org/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>ceph-for-openstack-storage</title>
    <link href="https://www.lijiawang.org/posts/ceph-for-openstack-storage/"/>
    <id>https://www.lijiawang.org/posts/ceph-for-openstack-storage/</id>
    <published>2018-05-03T06:08:17.000Z</published>
    <updated>2021-01-04T05:24:19.781Z</updated>
    
    <content type="html"><![CDATA[<h2 id="openstack对接ceph存储"><a href="#openstack对接ceph存储" class="headerlink" title="openstack对接ceph存储"></a><code>openstack</code>对接<code>ceph</code>存储</h2><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><ul><li>截至<code>2018</code>年<code>5</code>月<code>3</code>日，<code>OpenStack</code>也已经伴随着我们走过了<code>8</code>个年头了，并且成为了云计算领域中最火热的项目之一，逐渐成为<code>IaaS</code>的事实标准，私有云项目的部署首选；</li><li><code>OpenStack</code>发展如此的迅速，以至于部署规模愈发的庞大，此时就该思量<code>OpenStack</code>集群的部署支持以及持续可扩展性；</li><li><code>OpenStack</code>和<code>Ceph</code>的集成更让开源项目锦上添花，<code>Ceph</code>作为优秀的分布式存储系统，实现对<code>OpenStack</code>相关子项目进行集成或替代，目前在<code>OpenStack</code>中扮演者非常重要的角色；</li></ul><a id="more"></a><h2 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h2><ul><li><code>Ceph</code>已经成为<code>OpenStack</code>后端存储标配，<code>OpenStack</code>作为<code>IaaS</code>系统，涉及到存储的部分主要是块存储服务模块、对象存储服务模块、镜像管理模块和计算服务模块，对应为其中的<code>Cinder</code>、<code>Swift</code>、<code>Glance</code>和<code>Nova</code>四个项目；</li><li>配置前，请将<code>OpenStack</code>中已存在的<code>VM</code>、<code>Image</code>与<code>Vloume</code>清理掉；</li></ul><h3 id="创建相应的Pool"><a href="#创建相应的Pool" class="headerlink" title="创建相应的Pool"></a>创建相应的<code>Pool</code></h3><ul><li>若少于<code>5</code>个<code>OSD</code>, 设置<code>pg_num</code>为<code>128</code>；</li><li><code>5 ~ 10</code>个<code>OSD</code>，设置<code>pg_num</code>为<code>512</code>；</li><li><code>10 ~ 50</code>个<code>OSD</code>，设置<code>pg_num</code>为<code>4096</code>；</li><li>超过<code>50</code>个<code>OSD</code>, 根据(<code>PG数 = OSD数 * 100/ 副本数 / POOL数</code>)来计算；</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ ceph osd pool create images 1024<br>$ ceph osd pool create volumes 1024<br>$ ceph osd pool create vms 1024<br>$ ceph osd pool create backups 1024<br><br>$ ceph osd pool create images.cache 1024<br>$ ceph osd pool create volumes.cache 1024<br>$ ceph osd pool create vms.cache 1024<br>$ ceph osd pool create backups.cache 1024<br></code></pre></td></tr></table></figure><h3 id="删除相应的Pool-备用"><a href="#删除相应的Pool-备用" class="headerlink" title="删除相应的Pool(备用)"></a>删除相应的<code>Pool</code>(备用)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ ceph osd pool delete images images --yes-i-really-really-mean-it<br>$ ceph osd pool delete volumes volumes --yes-i-really-really-mean-it<br>$ ceph osd pool delete vms vms --yes-i-really-really-mean-it<br>$ ceph osd pool delete backups backups --yes-i-really-really-mean-it<br><br>$ ceph osd pool delete images.cache images.cache --yes-i-really-really-mean-it<br>$ ceph osd pool delete volumes.cache volumes.cache --yes-i-really-really-mean-it<br>$ ceph osd pool delete vms.cache vms.cache --yes-i-really-really-mean-it<br>$ ceph osd pool delete backups.cache backups.cache --yes-i-really-really-mean-it<br></code></pre></td></tr></table></figure><h3 id="更新相应Pool的属性值-备用"><a href="#更新相应Pool的属性值-备用" class="headerlink" title="更新相应Pool的属性值(备用)"></a>更新相应<code>Pool</code>的属性值(备用)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ ceph osd pool <span class="hljs-built_in">set</span> images pg_num 512<br>$ ceph osd pool <span class="hljs-built_in">set</span> volumes pg_num 512<br>$ ceph osd pool <span class="hljs-built_in">set</span> vms pg_num 512<br>$ ceph osd pool <span class="hljs-built_in">set</span> backups pg_num 512<br><br>$ ceph osd pool <span class="hljs-built_in">set</span> images pgp_num 512<br>$ ceph osd pool <span class="hljs-built_in">set</span> volumes pgp_num 512<br>$ ceph osd pool <span class="hljs-built_in">set</span> vms pgp_num 512<br>$ ceph osd pool <span class="hljs-built_in">set</span> backups pgp_num 512<br></code></pre></td></tr></table></figure><h3 id="将不同的Pool加入到对应的Crush-Map中"><a href="#将不同的Pool加入到对应的Crush-Map中" class="headerlink" title="将不同的Pool加入到对应的Crush Map中"></a>将不同的<code>Pool</code>加入到对应的<code>Crush Map</code>中</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 后备存储-SATA盘</span><br>$ ceph osd pool <span class="hljs-built_in">set</span> images crush_ruleset 0<br>$ ceph osd pool <span class="hljs-built_in">set</span> volumes crush_ruleset 0<br>$ ceph osd pool <span class="hljs-built_in">set</span> vms crush_ruleset 0<br>$ ceph osd pool <span class="hljs-built_in">set</span> backups crush_ruleset 0<br><br><span class="hljs-comment"># 缓存存储-SSD盘</span><br>$ ceph osd pool <span class="hljs-built_in">set</span> images.cache crush_ruleset 1<br>$ ceph osd pool <span class="hljs-built_in">set</span> volumes.cache crush_ruleset 1<br>$ ceph osd pool <span class="hljs-built_in">set</span> vms.cache crush_ruleset 1<br>$ ceph osd pool <span class="hljs-built_in">set</span> backups.cache crush_ruleset 1<br></code></pre></td></tr></table></figure><h3 id="将缓存层与后备存储池相关联"><a href="#将缓存层与后备存储池相关联" class="headerlink" title="将缓存层与后备存储池相关联"></a>将缓存层与后备存储池相关联</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ ceph osd tier add images images.cache<br>$ ceph osd tier add volumes volumes.cache<br>$ ceph osd tier add vms vms.cache<br>$ ceph osd tier add backups backups.cache<br></code></pre></td></tr></table></figure><h3 id="设置缓存模式-热存储回写"><a href="#设置缓存模式-热存储回写" class="headerlink" title="设置缓存模式(热存储回写)"></a>设置缓存模式(热存储回写)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ ceph osd tier cache-mode images.cache writeback<br>$ ceph osd tier cache-mode volumes.cache writeback<br>$ ceph osd tier cache-mode vms.cache writeback<br>$ ceph osd tier cache-mode backups.cache writeback<br></code></pre></td></tr></table></figure><h3 id="高速缓存层覆盖后备存储池"><a href="#高速缓存层覆盖后备存储池" class="headerlink" title="高速缓存层覆盖后备存储池"></a>高速缓存层覆盖后备存储池</h3><ul><li>直接将客户端流量引导到缓存池</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ ceph osd tier set-overlay images images.cache<br>$ ceph osd tier set-overlay volumes volumes.cache<br>$ ceph osd tier set-overlay vms vms.cache<br>$ ceph osd tier set-overlay backups backups.cache<br></code></pre></td></tr></table></figure><h3 id="启用缓存存储池的命中集跟踪"><a href="#启用缓存存储池的命中集跟踪" class="headerlink" title="启用缓存存储池的命中集跟踪"></a>启用缓存存储池的命中集跟踪</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ ceph osd pool <span class="hljs-built_in">set</span> images.cache hit_set_type bloom<br>$ ceph osd pool <span class="hljs-built_in">set</span> volumes.cache hit_set_type bloom<br>$ ceph osd pool <span class="hljs-built_in">set</span> vms.cache hit_set_type bloom<br>$ ceph osd pool <span class="hljs-built_in">set</span> backups.cache hit_set_type bloom<br></code></pre></td></tr></table></figure><h3 id="为缓存存储池的保留的命中集数量"><a href="#为缓存存储池的保留的命中集数量" class="headerlink" title="为缓存存储池的保留的命中集数量"></a>为缓存存储池的保留的命中集数量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ ceph osd pool <span class="hljs-built_in">set</span> images.cache hit_set_count 10<br>$ ceph osd pool <span class="hljs-built_in">set</span> volumes.cache hit_set_count 10<br>$ ceph osd pool <span class="hljs-built_in">set</span> vms.cache hit_set_count 10<br>$ ceph osd pool <span class="hljs-built_in">set</span> backups.cache hit_set_count 10<br></code></pre></td></tr></table></figure><h3 id="为缓存存储池保留的命中集有效期"><a href="#为缓存存储池保留的命中集有效期" class="headerlink" title="为缓存存储池保留的命中集有效期"></a>为缓存存储池保留的命中集有效期</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ ceph osd pool <span class="hljs-built_in">set</span> images.cache hit_set_period 14400<br>$ ceph osd pool <span class="hljs-built_in">set</span> volumes.cache hit_set_period 14400<br>$ ceph osd pool <span class="hljs-built_in">set</span> vms.cache hit_set_period 14400<br>$ ceph osd pool <span class="hljs-built_in">set</span> backups.cache hit_set_period 14400<br></code></pre></td></tr></table></figure><h3 id="缓存层回写数据"><a href="#缓存层回写数据" class="headerlink" title="缓存层回写数据"></a>缓存层回写数据</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 最大达到50G时，回写数据</span><br>$ ceph osd pool <span class="hljs-built_in">set</span> images.cache target_max_bytes 53687091200<br>$ ceph osd pool <span class="hljs-built_in">set</span> volumes.cache target_max_bytes 53687091200<br>$ ceph osd pool <span class="hljs-built_in">set</span> vms.cache target_max_bytes 53687091200<br>$ ceph osd pool <span class="hljs-built_in">set</span> backups.cache target_max_bytes 53687091200<br><br><span class="hljs-comment"># 最大达到100万时，回写数据</span><br>$ ceph osd pool <span class="hljs-built_in">set</span> images.cache target_max_objects 1000000<br>$ ceph osd pool <span class="hljs-built_in">set</span> volumes.cache target_max_objects 1000000<br>$ ceph osd pool <span class="hljs-built_in">set</span> vms.cache target_max_objects 1000000<br>$ ceph osd pool <span class="hljs-built_in">set</span> backups.cache target_max_objects 1000000<br></code></pre></td></tr></table></figure><h3 id="保留访问记录"><a href="#保留访问记录" class="headerlink" title="保留访问记录"></a>保留访问记录</h3><ul><li>取值越高，消耗的内存就越多；</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ ceph osd pool <span class="hljs-built_in">set</span> images.cache min_read_recency_for_promote 2<br>$ ceph osd pool <span class="hljs-built_in">set</span> images.cache min_write_recency_for_promote 2<br>$ ceph osd pool <span class="hljs-built_in">set</span> volumes.cache min_read_recency_for_promote 2<br>$ ceph osd pool <span class="hljs-built_in">set</span> volumes.cache min_write_recency_for_promote 2<br>$ ceph osd pool <span class="hljs-built_in">set</span> vms.cache min_read_recency_for_promote 2<br>$ ceph osd pool <span class="hljs-built_in">set</span> vms.cache min_write_recency_for_promote 2<br>$ ceph osd pool <span class="hljs-built_in">set</span> backups.cache min_read_recency_for_promote 2<br>$ ceph osd pool <span class="hljs-built_in">set</span> backups.cache min_write_recency_for_promote 2<br></code></pre></td></tr></table></figure><h2 id="认证配置"><a href="#认证配置" class="headerlink" title="认证配置"></a>认证配置</h2><h3 id="创建认证密钥"><a href="#创建认证密钥" class="headerlink" title="创建认证密钥"></a>创建认证密钥</h3><h4 id="Nova用户"><a href="#Nova用户" class="headerlink" title="Nova用户"></a>Nova用户</h4><ul><li>允许访问<code>volumes</code>、<code>vms</code>、<code>images</code>池；</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ ceph auth get-or-create client.nova mon <span class="hljs-string">&#x27;allow r&#x27;</span> osd <span class="hljs-string">&#x27;allow class-read object_prefix rbd_children, allow rwx pool=volumes, allow rwx pool=vms, allow rwx pool=images ,allow rwx pool=volumes.cache, allow rwx pool=vms.cache, allow rwx pool=images.cache&#x27;</span><br></code></pre></td></tr></table></figure><h4 id="Cinder用户"><a href="#Cinder用户" class="headerlink" title="Cinder用户"></a>Cinder用户</h4><ul><li>允许访问<code>volumes</code>、<code>backups</code>池；</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ceph auth get-or-create client.cinder mon <span class="hljs-string">&#x27;allow r&#x27;</span> osd <span class="hljs-string">&#x27;allow class-read object_prefix rbd_children, allow rwx pool=volumes, allow rwx pool=volumes.cache ,allow rwx pool=backups ,allow rwx pool=backups.cache&#x27;</span><br></code></pre></td></tr></table></figure><h4 id="Glance用户"><a href="#Glance用户" class="headerlink" title="Glance用户"></a>Glance用户</h4><ul><li>允许访问<code>images</code>池；</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ ceph auth get-or-create client.glance mon <span class="hljs-string">&#x27;allow r&#x27;</span> osd <span class="hljs-string">&#x27;allow class-read object_prefix rbd_children, allow rwx pool=images, allow rwx pool=images.cache&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="获取认证密钥"><a href="#获取认证密钥" class="headerlink" title="获取认证密钥"></a>获取认证密钥</h3><h4 id="Controller节点"><a href="#Controller节点" class="headerlink" title="Controller节点"></a><code>Controller</code>节点</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ ceph auth get-or-create client.nova | ssh root@controller tee /etc/ceph/ceph.client.nova.keyring<br>$ ssh root@controller chown nova:nova /etc/ceph/ceph.client.nova.keyring<br><br>$ ceph auth get-or-create client.cinder | ssh root@controller tee /etc/ceph/ceph.client.cinder.keyring<br>$ ssh root@controller chown cinder:cinder /etc/ceph/ceph.client.cinder.keyring<br><br>$ ceph auth get-or-create client.glance | ssh root@controller tee /etc/ceph/ceph.client.glance.keyring<br>$ ssh root@controller chown glance:glance /etc/ceph/ceph.client.glance.keyring<br></code></pre></td></tr></table></figure><h4 id="Compute节点"><a href="#Compute节点" class="headerlink" title="Compute节点"></a><code>Compute</code>节点</h4><ul><li>请使用<code>Compute</code>节点的主机名代替<code>&#123;ComputeNode&#125;</code>；</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ ceph auth get-or-create client.nova | ssh root@&#123;ComputeNode&#125; tee /etc/ceph/ceph.client.nova.keyring<br>$ ssh root@&#123;ComputeNode&#125; chown nova:nova /etc/ceph/ceph.client.nova.keyring<br></code></pre></td></tr></table></figure><h2 id="OpenStack配置"><a href="#OpenStack配置" class="headerlink" title="OpenStack配置"></a><code>OpenStack</code>配置</h2><h3 id="配置Nova服务"><a href="#配置Nova服务" class="headerlink" title="配置Nova服务"></a>配置<code>Nova</code>服务</h3><h4 id="配置libvirt认证"><a href="#配置libvirt认证" class="headerlink" title="配置libvirt认证"></a>配置<code>libvirt</code>认证</h4><h5 id="获取密钥"><a href="#获取密钥" class="headerlink" title="获取密钥"></a>获取密钥</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ ceph auth get-key client.nova | tee ~/nova.key<br></code></pre></td></tr></table></figure><h5 id="生成UUID，用于认证"><a href="#生成UUID，用于认证" class="headerlink" title="生成UUID，用于认证"></a>生成<code>UUID</code>，用于认证</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ UUID=$(cat /etc/ceph/ceph.conf | grep <span class="hljs-string">&quot;fsid&quot;</span> | awk -F <span class="hljs-string">&quot; = &quot;</span> <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span>)<br></code></pre></td></tr></table></figure><h5 id="生成secret-xml文件"><a href="#生成secret-xml文件" class="headerlink" title="生成secret.xml文件"></a>生成<code>secret.xml</code>文件</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ cat &gt; ~/secret.xml &lt;&lt;<span class="hljs-string">EOF</span><br><span class="hljs-string">&lt;secret ephemeral=&#x27;no&#x27; private=&#x27;no&#x27;&gt;</span><br><span class="hljs-string">  &lt;uuid&gt;$&#123;UUID&#125;&lt;/uuid&gt;</span><br><span class="hljs-string">  &lt;usage type=&#x27;ceph&#x27;&gt;</span><br><span class="hljs-string">        &lt;name&gt;client.nova secret&lt;/name&gt;</span><br><span class="hljs-string">  &lt;/usage&gt;</span><br><span class="hljs-string">&lt;/secret&gt;</span><br><span class="hljs-string">EOF</span><br></code></pre></td></tr></table></figure><h5 id="定义secret-xml文件"><a href="#定义secret-xml文件" class="headerlink" title="定义secret.xml文件"></a>定义<code>secret.xml</code>文件</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ virsh secret-define --file ~/secret.xml<br></code></pre></td></tr></table></figure><h5 id="列出已定义的项目"><a href="#列出已定义的项目" class="headerlink" title="列出已定义的项目"></a>列出已定义的项目</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ virsh secret-list<br></code></pre></td></tr></table></figure><h5 id="取消定义-备用"><a href="#取消定义-备用" class="headerlink" title="取消定义(备用)"></a>取消定义(备用)</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ virsh secret-undefine <span class="hljs-variable">$&#123;UUID&#125;</span><br></code></pre></td></tr></table></figure><h5 id="关联密钥与UUID"><a href="#关联密钥与UUID" class="headerlink" title="关联密钥与UUID"></a>关联密钥与<code>UUID</code></h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ virsh secret-set-value --secret <span class="hljs-variable">$&#123;UUID&#125;</span> --base64 $(cat ~/nova.key) &amp;&amp; rm -f ~/&#123;nova.key,secret.xml&#125;<br></code></pre></td></tr></table></figure><h4 id="配置Nova服务-1"><a href="#配置Nova服务-1" class="headerlink" title="配置Nova服务"></a>配置<code>Nova</code>服务</h4><h5 id="编辑配置文件"><a href="#编辑配置文件" class="headerlink" title="编辑配置文件"></a>编辑配置文件</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ vim /etc/nova/nova.conf<br></code></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs text">[libvirt]<br>images_type = rbd<br>images_rbd_pool = vms<br>images_rbd_ceph_conf = /etc/ceph/ceph.conf<br>rbd_user = nova<br>rbd_secret_uuid = UUID<br>disk_cachemodes = &quot;network=writeback&quot;<br>hw_disk_discard = unmap<br>inject_password = true<br>inject_key = true<br>inject_partition = -2<br>live_migration_flag = &quot;VIR_MIGRATE_UNDEFINE_SOURCE,VIR_MIGRATE_PEER2PEER,VIR_MIGRATE_LIVE,VIR_MIGRATE_PERSIST_DEST,VIR_MIGRATE_TUNNELLED&quot;<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ sed -i <span class="hljs-string">&quot;s#UUID#<span class="hljs-variable">$&#123;UUID&#125;</span>#g&quot;</span> /etc/nova/nova.conf<br></code></pre></td></tr></table></figure><h5 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h5><ul><li><code>Ubuntu</code>系统：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ service nova-compute restart<br></code></pre></td></tr></table></figure><ul><li><code>CentOS</code>系统：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ systemctl restart libvirtd.service openstack-nova-compute.service<br></code></pre></td></tr></table></figure><h3 id="配置Glance服务"><a href="#配置Glance服务" class="headerlink" title="配置Glance服务"></a>配置<code>Glance</code>服务</h3><h4 id="编辑配置文件-1"><a href="#编辑配置文件-1" class="headerlink" title="编辑配置文件"></a>编辑配置文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ vim /etc/glance/glance-api.conf<br></code></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs text">[DEFAULT]<br>show_image_direct_url = True<br><br>[glance_store]<br>stores = rbd<br>rbd_store_pool = images<br>rbd_store_user = glance<br>rbd_store_ceph_conf = /etc/ceph/ceph.conf<br>rbd_store_chunk_size = 8<br>default_store =rbd<br><br>[task]<br>task_executor = taskflow<br>work_dir=/tmp<br><br>[taskflow_executor]<br>engine_mode = serial<br>max_workers = 10<br>conversion_format=raw<br></code></pre></td></tr></table></figure><h4 id="重启服务-1"><a href="#重启服务-1" class="headerlink" title="重启服务"></a>重启服务</h4><ul><li><code>Ubuntu</code>系统：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ service glance-api restart<br>$ service glance-registry restart<br></code></pre></td></tr></table></figure><ul><li><code>CentOS</code>系统：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ systemctl restart openstack-glance-api.service openstack-glance-registry.service<br></code></pre></td></tr></table></figure><h3 id="配置Cinder服务"><a href="#配置Cinder服务" class="headerlink" title="配置Cinder服务"></a>配置<code>Cinder</code>服务</h3><ul><li>仅需在<code>Controller</code>节点安装<code>cinder</code>的所有的服务即可；</li></ul><h4 id="编辑配置文件-2"><a href="#编辑配置文件-2" class="headerlink" title="编辑配置文件"></a>编辑配置文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ vim /etc/cinder/cinder.conf<br></code></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs text">[DEFAULT]<br>enabled_backends = ceph<br>backup_driver = cinder.backup.drivers.ceph<br>backup_ceph_conf = /etc/ceph/ceph.conf<br>backup_ceph_user = cinder-backup<br>backup_ceph_chunk_size = 134217728<br>backup_ceph_pool = backups<br>backup_ceph_stripe_unit = 0<br>backup_ceph_stripe_count = 0<br>restore_discard_excess_bytes = true<br><br>[ceph]<br>volume_driver = cinder.volume.drivers.rbd.RBDDriver<br>rbd_pool = volumes<br>rbd_ceph_conf = /etc/ceph/ceph.conf<br>rbd_flatten_volume_from_snapshot = false<br>rbd_max_clone_depth = 5<br>rbd_store_chunk_size = 4<br>rados_connect_timeout = -1<br>glance_api_version = 2<br>rbd_user = cinder<br>rbd_secret_uuid = UUID<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ sed -i <span class="hljs-string">&quot;s#UUID#<span class="hljs-variable">$&#123;UUID&#125;</span>#g&quot;</span> /etc/cinder/cinder.conf<br></code></pre></td></tr></table></figure><h4 id="重启服务-2"><a href="#重启服务-2" class="headerlink" title="重启服务"></a>重启服务</h4><ul><li><code>Ubuntu</code>系统：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ service cinder-api restart<br>$ service cinder-scheduler restart<br>$ service cinder-volume restart<br>$ service cinder-backup restart<br>$ service tgt restart<br></code></pre></td></tr></table></figure><ul><li><code>CentOS</code>系统：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ systemctl restart openstack-cinder-volume.service target.service<br></code></pre></td></tr></table></figure><h2 id="测试操作"><a href="#测试操作" class="headerlink" title="测试操作"></a>测试操作</h2><h3 id="下载镜像"><a href="#下载镜像" class="headerlink" title="下载镜像"></a>下载镜像</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ wget http://download.cirros-cloud.net/0.3.5/cirros-0.3.5-x86_64-disk.img<br></code></pre></td></tr></table></figure><h3 id="上传镜像"><a href="#上传镜像" class="headerlink" title="上传镜像"></a>上传镜像</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ openstack image create <span class="hljs-string">&quot;cirros&quot;</span> --file cirros-0.3.5-x86_64-disk.img --disk-format qcow2 --container-format bare --public<br></code></pre></td></tr></table></figure><h3 id="获取镜像"><a href="#获取镜像" class="headerlink" title="获取镜像"></a>获取镜像</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ openstack image list<br></code></pre></td></tr></table></figure><h3 id="获取Ceph的存储使用率"><a href="#获取Ceph的存储使用率" class="headerlink" title="获取Ceph的存储使用率"></a>获取<code>Ceph</code>的存储使用率</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ ceph df<br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;openstack对接ceph存储&quot;&gt;&lt;a href=&quot;#openstack对接ceph存储&quot; class=&quot;headerlink&quot; title=&quot;openstack对接ceph存储&quot;&gt;&lt;/a&gt;&lt;code&gt;openstack&lt;/code&gt;对接&lt;code&gt;ceph&lt;/code&gt;存储&lt;/h2&gt;&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;截至&lt;code&gt;2018&lt;/code&gt;年&lt;code&gt;5&lt;/code&gt;月&lt;code&gt;3&lt;/code&gt;日，&lt;code&gt;OpenStack&lt;/code&gt;也已经伴随着我们走过了&lt;code&gt;8&lt;/code&gt;个年头了，并且成为了云计算领域中最火热的项目之一，逐渐成为&lt;code&gt;IaaS&lt;/code&gt;的事实标准，私有云项目的部署首选；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;OpenStack&lt;/code&gt;发展如此的迅速，以至于部署规模愈发的庞大，此时就该思量&lt;code&gt;OpenStack&lt;/code&gt;集群的部署支持以及持续可扩展性；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;OpenStack&lt;/code&gt;和&lt;code&gt;Ceph&lt;/code&gt;的集成更让开源项目锦上添花，&lt;code&gt;Ceph&lt;/code&gt;作为优秀的分布式存储系统，实现对&lt;code&gt;OpenStack&lt;/code&gt;相关子项目进行集成或替代，目前在&lt;code&gt;OpenStack&lt;/code&gt;中扮演者非常重要的角色；&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="openstack" scheme="https://www.lijiawang.org/categories/openstack/"/>
    
    
    <category term="openstack" scheme="https://www.lijiawang.org/tags/openstack/"/>
    
    <category term="ceph" scheme="https://www.lijiawang.org/tags/ceph/"/>
    
  </entry>
  
  <entry>
    <title>kolla 多region搭建</title>
    <link href="https://www.lijiawang.org/posts/kolla-%E5%A4%9Aregion%E6%90%AD%E5%BB%BA/"/>
    <id>https://www.lijiawang.org/posts/kolla-%E5%A4%9Aregion%E6%90%AD%E5%BB%BA/</id>
    <published>2018-04-10T01:44:43.000Z</published>
    <updated>2021-01-04T05:22:46.171Z</updated>
    
    <content type="html"><![CDATA[<h3 id="kolla部署openstack多region"><a href="#kolla部署openstack多region" class="headerlink" title="kolla部署openstack多region"></a>kolla部署openstack多region</h3><h3 id="openstack多region基础知识"><a href="#openstack多region基础知识" class="headerlink" title="openstack多region基础知识"></a>openstack多region基础知识</h3><p>我们都知道<code>Region</code>是<code>OpenStack</code>里面用于隔离资源的一个重要概念。简单来说，一个<code>Region</code>对应一套完整的<code>OpenStack</code>环境，而<code>Region</code>和<code>Region</code>之间可以是跨机房的集群，也可以是一个大规模物理机集群分割后的集群。<code>OpenStack</code>在设计之初就是支持多<code>Region</code>的情况，由于<code>Region</code>之间资源（<code>Mariadb</code>,<code>RabbitMQ</code>等）的独立的，所以他们之间并不存在资源交互开销的情况。<br>简单的讲所谓<code>openstack</code>多<code>region</code>，就是多套<code>openstack</code>共享一个<code>keystone</code>和<code>horizon</code>。每个区域一套<code>openstack</code>环境，可以分布在不同的地理位置，只要网络可达就行。个人认为目的就是为了提供环境隔离的功能，选择启虚拟机的时候可以根据自己所处的位置就近选择。<br><img src="https://ljw.howieli.cn/blog/2018-4-3/%E5%A4%9Aregion1.png"></p><a id="more"></a><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><p>我这里有两台<code>kolla</code>环境的部署节点分别是<code>172.18.24.150</code>，<code>172.18.24.130</code>两个台虚拟机。<br>| column | column |<br>|——–|————|<br>|RegionOne|172.18.24.150|<br>|RegionTWO|172.18.24.130|<br><code>kolla</code>环境部署节点安装请参考<a href="https://www.lijiawang.org/posts/kolla%20queens%20on%20centos7.41.html">kolla搭建</a>，这次我用<code>kolla</code>部署<code>openstack</code>的<code>queens</code>版本。</p><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><h4 id="用Keystone和Horizon部署第一个区域"><a href="#用Keystone和Horizon部署第一个区域" class="headerlink" title="用Keystone和Horizon部署第一个区域"></a>用<code>Keystone</code>和<code>Horizon</code>部署第一个区域</h4><p>我这这里把<code>keystone</code>,<code>horizon</code>这两个服务放到<code>RegionOne</code>虚拟机上。修改配置<code>/etc/kolla/globals.yml</code>文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> egrep <span class="hljs-string">&quot;^[^#]&quot;</span> /etc/kolla/globals.yml</span><br>---<br>kolla_base_distro: &quot;centos&quot;<br>kolla_install_type: &quot;source&quot;<br>openstack_release: &quot;queens&quot;<br>kolla_internal_vip_address: &quot;172.18.24.150&quot;<br>docker_namespace: &quot;kolla&quot;<br>network_interface: &quot;eth0&quot;<br>neutron_external_interface: &quot;eth1&quot;<br>enable_haproxy: &quot;no&quot;<br>enable_grafana: &quot;yes&quot;<br>enable_horizon_ironic: &quot;&#123;&#123; enable_ironic | bool &#125;&#125;&quot;<br>ironic_dnsmasq_dhcp_range:<br>tempest_image_id:<br>tempest_flavor_ref_id:<br>tempest_public_network_id:<br>tempest_floating_network_name:<br>openstack_region_name: &quot;RegionOne&quot;<br>multiple_regions_names:<br>    - &quot;&#123;&#123; openstack_region_name &#125;&#125;&quot;<br>    - &quot;RegionTwo&quot;<br></code></pre></td></tr></table></figure><p>部署<code>RegionOne</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> kolla-ansible deploy</span><br></code></pre></td></tr></table></figure><h4 id="部署其他区域"><a href="#部署其他区域" class="headerlink" title="部署其他区域"></a>部署其他区域</h4><p>修改<code>RegionTWO</code>的<code>/etc/kolla/globals.yml</code>文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> egrep <span class="hljs-string">&quot;^[^#]&quot;</span> /etc/kolla/globals.yml</span><br>---<br>kolla_base_distro: &quot;centos&quot;<br>kolla_install_type: &quot;source&quot;<br>openstack_release: &quot;queens&quot;<br>kolla_internal_vip_address: &quot;172.18.24.130&quot;<br>docker_namespace: &quot;kolla&quot;<br>network_interface: &quot;eth0&quot;<br>neutron_external_interface: &quot;eth1&quot;<br>nova_console: &quot;novnc&quot;<br>enable_keystone: &quot;no&quot;<br>enable_haproxy: &quot;no&quot;<br>enable_horizon: &quot;no&quot;<br>nova_compute_virt_type: &quot;qemu&quot;<br>tempest_image_id:<br>tempest_flavor_ref_id:<br>tempest_public_network_id:<br>tempest_floating_network_name:<br><span class="hljs-meta">#</span><span class="bash"> kolla_internal_fqdn_r1是指RegionOne中kolla_internal_fqdn的值</span><br>kolla_internal_fqdn_r1: 172.18.24.150<br>keystone_admin_url: &quot;&#123;&#123; admin_protocol &#125;&#125;://&#123;&#123; kolla_internal_fqdn_r1 &#125;&#125;:&#123;&#123; keystone_admin_port &#125;&#125;&quot;<br>keystone_internal_url: &quot;&#123;&#123; internal_protocol &#125;&#125;://&#123;&#123; kolla_internal_fqdn_r1 &#125;&#125;:&#123;&#123; keystone_public_port &#125;&#125;&quot;<br>openstack_auth:<br>    auth_url: &quot;&#123;&#123; admin_protocol &#125;&#125;://&#123;&#123; kolla_internal_fqdn_r1 &#125;&#125;:&#123;&#123; keystone_admin_port &#125;&#125;&quot;<br>    username: &quot;admin&quot;<br>    password: &quot;&#123;&#123; keystone_admin_password &#125;&#125;&quot;<br>    project_name: &quot;admin&quot;<br>    domain_name: &quot;default&quot;<br>openstack_region_name: &quot;RegionTwo&quot;<br></code></pre></td></tr></table></figure><h4 id="RegionTWO上的openstack组件连接RegionOne上的keystone"><a href="#RegionTWO上的openstack组件连接RegionOne上的keystone" class="headerlink" title="RegionTWO上的openstack组件连接RegionOne上的keystone"></a>RegionTWO上的openstack组件连接RegionOne上的keystone</h4><p>需要修改<code>cinder</code>，<code>nova</code>，<code>neutron</code>，<code>glance</code>等配置文件才能联系<code>RegionOne</code>的<code>Keystone</code>。在<code>RegionTWO</code>虚拟机上创建<code>/etc/kolla/config/</code>目录,然后穿件需要连接<code>Keystone</code>服务的配置文件。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> mkdir -p /etc/kolla/config/</span><br><span class="hljs-meta">#</span><span class="bash"> <span class="hljs-built_in">cd</span> /etc/kolla/config/</span><br><span class="hljs-meta">#</span><span class="bash"> tree</span><br>.<br>├── glance.conf<br>├── heat.conf<br>├── neutron.conf<br>└── nova.conf<br></code></pre></td></tr></table></figure><p>更新配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> cat glance.conf</span><br>[keystone_authtoken]<br>auth_uri = &#123;&#123; keystone_internal_url &#125;&#125;<br>auth_url = &#123;&#123; keystone_admin_url &#125;&#125;<br><span class="hljs-meta">#</span><span class="bash"> cat nova.conf</span><br>[keystone_authtoken]<br>auth_uri = &#123;&#123; keystone_internal_url &#125;&#125;<br>auth_url = &#123;&#123; keystone_admin_url &#125;&#125;<br>[placement]<br>auth_url = &#123;&#123; keystone_admin_url &#125;&#125;<br><span class="hljs-meta">#</span><span class="bash"> cat neutron.conf</span><br>[keystone_authtoken]<br>auth_uri = &#123;&#123; keystone_internal_url &#125;&#125;<br>auth_url = &#123;&#123; keystone_admin_url &#125;&#125;<br><span class="hljs-meta">#</span><span class="bash"> cat heat.conf</span><br>[keystone_authtoken]<br>auth_uri = &#123;&#123; keystone_internal_url &#125;&#125;<br>auth_url = &#123;&#123; keystone_admin_url &#125;&#125;<br>[trustee]<br>auth_uri = &#123;&#123; keystone_internal_url &#125;&#125;<br>auth_url = &#123;&#123; keystone_internal_url &#125;&#125;<br><br>[ec2authtoken]<br>auth_uri = &#123;&#123; keystone_internal_url &#125;&#125;<br><br>[clients_keystone]<br>auth_uri = &#123;&#123; keystone_internal_url &#125;&#125;<br></code></pre></td></tr></table></figure><p>部署<code>RegionTWO</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> kolla-ansible deploy</span><br></code></pre></td></tr></table></figure><h3 id="Dashboard"><a href="#Dashboard" class="headerlink" title="Dashboard"></a>Dashboard</h3><p>如果以上过程顺利，恭喜你，你的<code>OpenStack</code>现在也支持多区域了。<br><img src="https://ljw.howieli.cn/blog/2018-4-3/%E5%A4%9Aregion.png"><br><img src="https://ljw.howieli.cn/blog/2018-4-3/%E5%A4%9Aregion2.png"></p><h3 id="Ocata版本多region搭建"><a href="#Ocata版本多region搭建" class="headerlink" title="Ocata版本多region搭建"></a>Ocata版本多region搭建</h3><p>如果您用的是<code>openstack</code>的<code>Ocata</code>版本，需要打一下<code>patch</code>，在部署，<a href="https://review.openstack.org/#/q/project:openstack/kolla-ansible+region">这里可以看到所有多region相关bug</a>，除了下面这个没放进去，都<code>merge</code>到<code>ocata</code>。需要把这个<code>patch</code>自己打进去即可。<br><a href="https://review.openstack.org/#/c/431658/">https://review.openstack.org/#/c/431658/</a></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;kolla部署openstack多region&quot;&gt;&lt;a href=&quot;#kolla部署openstack多region&quot; class=&quot;headerlink&quot; title=&quot;kolla部署openstack多region&quot;&gt;&lt;/a&gt;kolla部署openstack多region&lt;/h3&gt;&lt;h3 id=&quot;openstack多region基础知识&quot;&gt;&lt;a href=&quot;#openstack多region基础知识&quot; class=&quot;headerlink&quot; title=&quot;openstack多region基础知识&quot;&gt;&lt;/a&gt;openstack多region基础知识&lt;/h3&gt;&lt;p&gt;我们都知道&lt;code&gt;Region&lt;/code&gt;是&lt;code&gt;OpenStack&lt;/code&gt;里面用于隔离资源的一个重要概念。简单来说，一个&lt;code&gt;Region&lt;/code&gt;对应一套完整的&lt;code&gt;OpenStack&lt;/code&gt;环境，而&lt;code&gt;Region&lt;/code&gt;和&lt;code&gt;Region&lt;/code&gt;之间可以是跨机房的集群，也可以是一个大规模物理机集群分割后的集群。&lt;code&gt;OpenStack&lt;/code&gt;在设计之初就是支持多&lt;code&gt;Region&lt;/code&gt;的情况，由于&lt;code&gt;Region&lt;/code&gt;之间资源（&lt;code&gt;Mariadb&lt;/code&gt;,&lt;code&gt;RabbitMQ&lt;/code&gt;等）的独立的，所以他们之间并不存在资源交互开销的情况。&lt;br&gt;简单的讲所谓&lt;code&gt;openstack&lt;/code&gt;多&lt;code&gt;region&lt;/code&gt;，就是多套&lt;code&gt;openstack&lt;/code&gt;共享一个&lt;code&gt;keystone&lt;/code&gt;和&lt;code&gt;horizon&lt;/code&gt;。每个区域一套&lt;code&gt;openstack&lt;/code&gt;环境，可以分布在不同的地理位置，只要网络可达就行。个人认为目的就是为了提供环境隔离的功能，选择启虚拟机的时候可以根据自己所处的位置就近选择。&lt;br&gt;&lt;img src=&quot;https://ljw.howieli.cn/blog/2018-4-3/%E5%A4%9Aregion1.png&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="openstack" scheme="https://www.lijiawang.org/categories/openstack/"/>
    
    
    <category term="openstack" scheme="https://www.lijiawang.org/tags/openstack/"/>
    
    <category term="kolla" scheme="https://www.lijiawang.org/tags/kolla/"/>
    
  </entry>
  
  <entry>
    <title>kolla queens on centos7.4</title>
    <link href="https://www.lijiawang.org/posts/kolla-queens-on-centos7-4/"/>
    <id>https://www.lijiawang.org/posts/kolla-queens-on-centos7-4/</id>
    <published>2018-03-29T11:37:20.000Z</published>
    <updated>2021-01-04T05:23:38.254Z</updated>
    
    <content type="html"><![CDATA[<h3 id="kolla-queens-on-centos7-4"><a href="#kolla-queens-on-centos7-4" class="headerlink" title="kolla queens on centos7.4"></a>kolla queens on centos7.4</h3><p><img src="https://ljw.howieli.cn/blog/2018-03-29/WX20180329-171345.png"></p><a id="more"></a><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><p>我这里用<code>workstation</code> 创建了一个虚拟机，安装<code>centos7.4</code>系统，这台虚拟机上有两张网卡，一张做<code>openstack</code>管理网，一张做为虚拟机的业务网卡。</p><h3 id="确定环境信息"><a href="#确定环境信息" class="headerlink" title="确定环境信息"></a>确定环境信息</h3><ul><li><p>确认系统版本信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> cat /etc/redhat-release</span><br>CentOS Linux release 7.4.1708 (Core)<br><span class="hljs-meta">#</span><span class="bash"> uname -r</span><br>3.10.0-693.5.2.el7.x86_64<br></code></pre></td></tr></table></figure></li><li><p> 确认网卡个数和状态</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> ip a</span><br>1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN qlen 1<br>    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00<br>    inet 127.0.0.1/8 scope host lo<br>       valid_lft forever preferred_lft forever<br>    inet6 ::1/128 scope host<br>       valid_lft forever preferred_lft forever<br>2: ens33: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP qlen 1000<br>    link/ether 00:0c:29:a7:8c:91 brd ff:ff:ff:ff:ff:ff<br>    inet 192.168.254.15/24 brd 192.168.254.255 scope global dynamic ens33<br>       valid_lft 1555sec preferred_lft 1555sec<br>    inet6 fe80::5057:38c5:6b65:b5/64 scope link<br>       valid_lft forever preferred_lft forever<br>3: ens34: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP qlen 1000<br>    link/ether 00:0c:29:a7:8c:9b brd ff:ff:ff:ff:ff:ff<br>    inet6 fe80::20c:29ff:fea7:8c9b/64 scope link<br>       valid_lft forever preferred_lft forever<br></code></pre></td></tr></table></figure><p>上面可以看出有两张网卡<code>ens33</code>和<code>ens34</code>，这里我用<code>ens33</code>做管理网，<code>ens34</code>做业务网，这里不需要配置<code>ip</code>，把<code>ens34</code>网卡<code>up</code>起来就好。</p></li><li><p>查看主机名</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> hostname</span><br>queens<br></code></pre></td></tr></table></figure><h3 id="环境初始化"><a href="#环境初始化" class="headerlink" title="环境初始化"></a>环境初始化</h3></li><li><p>关闭<code>NetworkManager</code>,<code>firewalld</code>,<code>selinux</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> systemctl stop NetworkManager</span><br><span class="hljs-meta">#</span><span class="bash"> systemctl <span class="hljs-built_in">disable</span> NetworkManager</span><br>Removed symlink /etc/systemd/system/multi-user.target.wants/NetworkManager.service.<br>Removed symlink /etc/systemd/system/dbus-org.freedesktop.NetworkManager.service.<br>Removed symlink /etc/systemd/system/dbus-org.freedesktop.nm-dispatcher.service.<br><span class="hljs-meta">#</span><span class="bash"> systemctl stop firewalld</span><br><span class="hljs-meta">#</span><span class="bash"> systemctl <span class="hljs-built_in">disable</span> firewalld</span><br>Removed symlink /etc/systemd/system/multi-user.target.wants/firewalld.service.<br>Removed symlink /etc/systemd/system/dbus-org.fedoraproject.FirewallD1.service.<br><span class="hljs-meta">#</span><span class="bash"> sed -i <span class="hljs-string">&quot;s/SELINUX=enforcing/SELINUX=disabled/&quot;</span> /etc/selinux/config</span><br><span class="hljs-meta">#</span><span class="bash"> setenforce 0</span><br><span class="hljs-meta">#</span><span class="bash"> getenforce</span><br>Permissive<br></code></pre></td></tr></table></figure></li><li><p>查看是否开启了虚拟化</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> egrep <span class="hljs-string">&quot;vmx|svm&quot;</span> /proc/cpuinfo</span><br></code></pre></td></tr></table></figure><h3 id="安装基础软件包"><a href="#安装基础软件包" class="headerlink" title="安装基础软件包"></a>安装基础软件包</h3><p>配置配置<code>epel</code>源安装基础包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> yum install epel-release</span><br><span class="hljs-meta">#</span><span class="bash"> yum install axel vim git curl wget lrzsz gcc  python-devel python-pip</span><br></code></pre></td></tr></table></figure><h3 id="安装配置docker"><a href="#安装配置docker" class="headerlink" title="安装配置docker"></a>安装配置<code>docker</code></h3></li><li><p>安装<code>docker</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> wget -O /etc/yum.repos.d/docker-ce.repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="hljs-meta">#</span><span class="bash"> yum install -y docker-ce</span><br></code></pre></td></tr></table></figure></li><li><p>配置<code>docker</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> mkdir /etc/systemd/system/docker.service.d</span><br><span class="hljs-meta">#</span><span class="bash"> tee /etc/systemd/system/docker.service.d/kolla.conf &lt;&lt; <span class="hljs-string">&#x27;EOF&#x27;</span></span><br>[Service]<br>MountFlags=shared<br>EOF<br><span class="hljs-meta">#</span><span class="bash"> vim /usr/lib/systemd/system/docker.service</span><br><span class="hljs-meta">#</span><span class="bash"> ExecStart=/usr/bin/dockerd</span><br>ExecStart=/usr/bin/dockerd --registry-mirror=http://f2d6cb40.m.daocloud.io --storage-driver=overlay2<br></code></pre></td></tr></table></figure><p>这里<code>docker</code>的文件系统我用<code>overlay2</code></p></li><li><p>启动<code>docker</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> systemctl daemon-reload</span><br><span class="hljs-meta">#</span><span class="bash"> systemctl restart docker</span><br><span class="hljs-meta">#</span><span class="bash"> systemctl <span class="hljs-built_in">enable</span> docker</span><br>Created symlink from /etc/systemd/system/multi-user.target.wants/docker.service to /usr/lib/systemd/system/docker.service.<br><span class="hljs-meta">#</span><span class="bash"> systemctl status docker</span><br><span class="hljs-meta">#</span><span class="bash"> docker info</span><br></code></pre></td></tr></table></figure><h3 id="安装ansible"><a href="#安装ansible" class="headerlink" title="安装ansible"></a>安装<code>ansible</code></h3><p><code>ansible</code>版本必须在2.0以上</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> yum -y install ansible -y</span><br></code></pre></td></tr></table></figure><h3 id="下载kolla-ansible，并安装配置"><a href="#下载kolla-ansible，并安装配置" class="headerlink" title="下载kolla-ansible，并安装配置"></a>下载<code>kolla-ansible</code>，并安装配置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> git <span class="hljs-built_in">clone</span> https://github.com/openstack/kolla-ansible -b stable/queens</span><br><span class="hljs-meta">#</span><span class="bash"> <span class="hljs-built_in">cd</span> kolla-ansible/</span><br><span class="hljs-meta">#</span><span class="bash"> cp -r etc/kolla/ /etc/kolla/</span><br><span class="hljs-meta">#</span><span class="bash"> pip install . -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br></code></pre></td></tr></table></figure><h3 id="配置globals-yml文件"><a href="#配置globals-yml文件" class="headerlink" title="配置globals.yml文件"></a>配置<code>globals.yml</code>文件</h3><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-meta"># egrep <span class="hljs-string">&quot;^[^#]&quot;</span> /etc/kolla/globals.yml</span><br>---<br><span class="hljs-symbol">kolla_base_distro:</span> <span class="hljs-string">&quot;centos&quot;</span><br><span class="hljs-symbol">kolla_install_type:</span> <span class="hljs-string">&quot;source&quot;</span><br><span class="hljs-symbol">openstack_release:</span> <span class="hljs-string">&quot;queens&quot;</span><br><span class="hljs-symbol">kolla_internal_vip_address:</span> <span class="hljs-string">&quot;192.168.254.11&quot;</span><br><span class="hljs-symbol">docker_namespace:</span> <span class="hljs-string">&quot;kolla&quot;</span><br><span class="hljs-symbol">network_interface:</span> <span class="hljs-string">&quot;ens33&quot;</span><br><span class="hljs-symbol">neutron_external_interface:</span> <span class="hljs-string">&quot;ens34&quot;</span><br><span class="hljs-symbol">enable_haproxy:</span> <span class="hljs-string">&quot;no&quot;</span><br><span class="hljs-symbol">nova_compute_virt_type:</span> <span class="hljs-string">&quot;qemu&quot;</span><br><span class="hljs-symbol">ironic_dnsmasq_dhcp_range:</span><br><span class="hljs-symbol">tempest_image_id:</span><br><span class="hljs-symbol">tempest_flavor_ref_id:</span><br><span class="hljs-symbol">tempest_public_network_id:</span><br><span class="hljs-symbol">tempest_floating_network_name:</span><br></code></pre></td></tr></table></figure><p>说明：这里我直接在<a href="https://hub.docker.com/search/?isAutomated=0&isOfficial=0&page=1&pullCount=0&q=kolla&starCount=0">docker hub</a>上拉镜像。如果是在虚拟机里安装 <code>Kolla</code>，希望可以在 <code>OpenStack</code> 平台上创建虚拟机，那么你需要在 <code>globals.yml</code> 文件中把 <code>nova_compute_virt_type</code> 配置项设置为 <code>qemu</code>，默认是 <code>KVM</code>。</p></li></ul><h3 id="安装kolla"><a href="#安装kolla" class="headerlink" title="安装kolla"></a>安装<code>kolla</code></h3><ul><li><p>生成密码文件</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># kolla-genpwd</span><br></code></pre></td></tr></table></figure></li><li><p>编辑 <code>/etc/kolla/passwords.yml</code> 文件，配置 <code>keystone</code> 管理员用户的密码。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">keystone_admin_password: password<br></code></pre></td></tr></table></figure><p>同时，也是登录 <code>Dashboard，admin</code> 使用的密码，你可以根据自己需要进行修改。</p></li><li><p>运行 <code>prechecks</code> 检查配置是否正确，如果有错误，可以先忽略。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> kolla-ansible prechecks</span><br></code></pre></td></tr></table></figure></li><li><p>从<code>docker hub</code>上<code>pull</code>镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> kolla-ansible pull</span><br></code></pre></td></tr></table></figure></li><li><p>部署<code>openstack</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> kolla-ansible deploy</span><br></code></pre></td></tr></table></figure></li><li><p>创建环境变量文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> kolla-ansible post-deploy</span><br></code></pre></td></tr></table></figure><p>这样就创建了<code>/etc/kolla/admin-openrc.sh</code> 环境变量文件。</p></li><li><p>安装 <code>OpenStack Client</code> 端</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> pip install python-openstackclient</span><br></code></pre></td></tr></table></figure></li><li><p>编辑<code>init-runonce</code>文件,设置<code>public network</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> vim /usr/share/kolla-ansible/init-runonce</span><br>EXT_NET_CIDR=&#x27;10.10.20.0/24&#x27;<br>EXT_NET_RANGE=&#x27;start=10.10.20.110,end=10.10.20.254&#x27;<br>EXT_NET_GATEWAY=&#x27;10.10.20.1&#x27;<br></code></pre></td></tr></table></figure></li><li><p>加载<code>OpenStack CLI</code>所需的环境变量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> <span class="hljs-built_in">source</span> /etc/kolla/admin-openrc.sh</span><br></code></pre></td></tr></table></figure></li><li><p>初始化部署</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> <span class="hljs-built_in">cd</span> /usr/share/kolla-ansible/ &amp;&amp; ./init-runonce</span><br></code></pre></td></tr></table></figure></li><li><p>登陆<code>Dashboard</code><br>用浏览器访问<code>192.168.254.15</code>登陆<code>Dashboard</code><br><img src="https://ljw.howieli.cn/blog/2018-03-29/WX20180329-170306.png"><br><img src="https://ljw.howieli.cn/blog/2018-03-29/WX20180329-170337.png"></p></li><li><p>如果，在部署过程中失败了，亦或是变更了配置信息，需要重新部署，则执行如下命令，清除掉已部署的 <code>Docker</code> 容器，即 <code>OpenStack</code> 服务</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle"># kolla-ansible destroy -i <span class="hljs-regexp">/home/mu</span>ltinode --yes-i-really-really-mean-it<br></code></pre></td></tr></table></figure></li><li><p>除此外，还有一些小工具，在需要时，可以使用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> 可用于从系统中移除部署的容器:</span><br>tools/cleanup-containers<br><span class="hljs-meta">#</span><span class="bash"> 可用于移除由于网络变化引发的 Docker 启动的neutron-agents 主机：</span><br>tools/cleanup-host<br><span class="hljs-meta">#</span><span class="bash"> 可用于从本地缓存中移除所有的 Docker image</span><br>tools/cleanup-images<br></code></pre></td></tr></table></figure><h3 id="故障诊断与排除"><a href="#故障诊断与排除" class="headerlink" title="故障诊断与排除"></a>故障诊断与排除</h3><p>通过 <code>Kolla</code> 和 <code>Ansible</code> 部署或运行 <code>OpenStack</code> 环境时，如果出现问题，通常可以使用如下一些方法来排查/解决</p></li><li><p>查看指定容器（即指定的服务）的输出日志信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> docker logs container_name</span><br></code></pre></td></tr></table></figure></li><li><p>查看指定服务的日志<br>直接 <code>CD</code> 到主机的 <code>/var/lib/docker/volumes/kollalogs/data/</code> 目录下，查看指定服务的日志信息。</p></li><li><p>查看容器的状态</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> docker ps</span><br></code></pre></td></tr></table></figure><p>可以使用 <code>docker ps -a</code> 命令查看到安装的 <code>OpenStack</code> 所有服务的容器</p></li><li><p>进入某个容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> docker <span class="hljs-built_in">exec</span> -it -u root container_name bash</span><br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;kolla-queens-on-centos7-4&quot;&gt;&lt;a href=&quot;#kolla-queens-on-centos7-4&quot; class=&quot;headerlink&quot; title=&quot;kolla queens on centos7.4&quot;&gt;&lt;/a&gt;kolla queens on centos7.4&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://ljw.howieli.cn/blog/2018-03-29/WX20180329-171345.png&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="openstack" scheme="https://www.lijiawang.org/categories/openstack/"/>
    
    
    <category term="openstack" scheme="https://www.lijiawang.org/tags/openstack/"/>
    
    <category term="kolla" scheme="https://www.lijiawang.org/tags/kolla/"/>
    
  </entry>
  
</feed>
